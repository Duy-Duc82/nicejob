var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.236,1,3.09]],["body/controllers/AppController.html",[0,2.016,1,5.038,2,1.624,3,0.13,4,0.147,5,0.099,6,4.85,7,0.272,8,0.012,9,4.324,10,3.054,11,2.797,12,4.85,13,3.565,14,3.789,15,0.918,16,4.811,17,4.85,18,4.397,19,3.372,20,3.789,21,5.537,22,4.703,23,4.324,24,5.537,25,3.372,26,5.537,27,2.797,28,3.372,29,0.147,30,0.279,31,2.232,32,3.354,33,2.869,34,0.009,35,0.009]],["title/modules/AppModule.html",[36,1.034,37,3.09]],["body/modules/AppModule.html",[1,4.363,2,1.491,3,0.083,4,0.093,5,0.063,7,0.272,8,0.012,9,3.767,10,1.948,15,0.585,16,4.624,17,3.093,29,0.093,30,0.178,34,0.007,35,0.007,36,1.461,37,6.31,38,1.474,39,1.528,40,1.646,41,1.646,42,1.528,43,2.775,44,1.646,45,3.093,46,3.093,47,3.093,48,4.916,49,4.916,50,4.916,51,4.916,52,4.916,53,4.916,54,4.916,55,4.916,56,4.916,57,4.624,58,4.916,59,4.374,60,2.369,61,1.646,62,1.646,63,3.531,64,2.775,65,3.531,66,1.862,67,0.947,68,4.451,69,3.093,70,3.531,71,1.784,72,1.247,73,0.947,74,1.247,75,0.793,76,3.531,77,3.531,78,3.531,79,3.531,80,3.531,81,3.531,82,3.531,83,3.531,84,3.531,85,3.531,86,2.804,87,3.531,88,2.804,89,3.531,90,3.531,91,3.531,92,3.531,93,3.093,94,1.784,95,4.451,96,2.043,97,2.94,98,3.093,99,3.093,100,3.531,101,2.804,102,1.376,103,3.531,104,3.531,105,3.531,106,5.081,107,3.531,108,0.976,109,2.804,110,3.531,111,3.531,112,1.171]],["title/injectables/AppService.html",[16,2.713,113,0.892]],["body/injectables/AppService.html",[3,0.144,4,0.162,5,0.109,7,0.199,8,0.011,15,1.017,16,4.709,29,0.162,30,0.309,34,0.01,35,0.01,108,1.695,113,1.548,114,2.312,115,5.373,116,0.552,117,2.146,118,8.092,119,0.7,120,6.134,121,1.8,122,0.866,123,6.134,124,6.134]],["title/controllers/AuthController.html",[0,1.236,125,3.09]],["body/controllers/AuthController.html",[0,0.971,2,0.971,3,0.158,4,0.088,5,0.059,7,0.25,8,0.012,11,1.672,12,2.899,13,2.13,14,4.806,15,0.549,20,2.265,22,2.265,23,3.319,27,3.19,28,2.015,29,0.088,30,0.167,31,1.334,32,2.176,33,1.381,34,0.006,35,0.006,88,2.628,93,2.899,95,2.899,98,2.899,99,2.899,102,2.737,108,1.857,112,1.902,116,0.298,117,1.422,119,0.767,121,1.972,125,3.553,126,2.899,127,1.605,128,2.628,129,4.847,130,5.736,131,5.736,132,5.736,133,4.847,134,3.309,135,2.646,136,1.3,137,3.309,138,2.097,139,3.309,140,2.229,141,0.767,142,0.772,143,2.032,144,2.176,145,3.309,146,5.075,147,3.309,148,3.309,149,3.309,150,3.309,151,5.887,152,3.309,153,3.309,154,3.309,155,3.309,156,3.309,157,3.849,158,3.553,159,3.309,160,3.309,161,3.874,162,3.309,163,1.558,164,3.309,165,2.674,166,2.628,167,1.825,168,5.531,169,2.628,170,2.628,171,1.605,172,2.952,173,2.899,174,2.265,175,1.915,176,1.672,177,3.309,178,3.309,179,4.847,180,1.745,181,1.432,182,3.309,183,3.309,184,2.628,185,3.309,186,3.309,187,3.309,188,2.899,189,3.309,190,3.309,191,5.736,192,1.683,193,4.847,194,2.097,195,3.309,196,3.309,197,3.309,198,3.309,199,3.309,200,3.309,201,2.674,202,3.309,203,2.628,204,3.309,205,2.899,206,3.309,207,3.309,208,2.265,209,3.309,210,3.309,211,3.309,212,3.309,213,3.309]],["title/modules/AuthModule.html",[36,1.034,48,2.884]],["body/modules/AuthModule.html",[2,1.743,3,0.104,4,0.117,5,0.079,7,0.268,8,0.012,9,4.152,10,2.439,15,0.733,19,2.692,23,4.819,29,0.117,30,0.222,34,0.008,35,0.008,36,1.647,38,1.846,39,1.913,40,2.061,41,2.061,42,1.913,43,3.129,44,3.129,48,5.793,57,4.963,59,4.695,60,2.77,61,2.061,62,2.061,64,3.129,68,5.878,69,3.872,101,3.511,102,1.723,109,3.511,125,4.92,169,3.511,214,3.872,215,4.421,216,3.872,217,3.872,218,5.276,219,5.276,220,4.421,221,5.941,222,4.421,223,4.421,224,3.511,225,4.421,226,4.421,227,4.718,228,4.421,229,4.421,230,3.872,231,3.872,232,4.421,233,3.872,234,4.421,235,3.872]],["title/injectables/AuthService.html",[23,2.439,113,0.892]],["body/injectables/AuthService.html",[3,0.058,4,0.066,5,0.044,7,0.227,8,0.012,9,3.798,10,1.366,15,0.41,23,2.25,29,0.066,30,0.125,31,1.568,32,2.442,34,0.005,35,0.005,102,2.842,108,1.814,112,1.961,113,0.823,114,0.933,116,0.223,117,1.141,119,0.75,121,1.409,122,0.864,135,2.157,138,1.924,140,1.804,141,0.847,142,0.599,143,1.645,144,2.442,146,4.442,157,5.399,158,5.126,161,3.001,163,1.901,165,3.001,166,1.967,173,2.169,174,1.695,175,1.433,184,3.814,192,2.233,194,3.025,203,3.089,208,1.695,224,1.967,227,3.089,230,3.406,233,2.169,235,4.206,236,2.169,237,0.823,238,4.802,239,4.766,240,4.802,241,5.18,242,3.814,243,3.889,244,2.476,245,3.462,246,6.564,247,2.476,248,3.889,249,2.476,250,3.406,251,2.476,252,3.889,253,4.766,254,2.476,255,1.433,256,3.089,257,2.156,258,2.239,259,2.476,260,2.476,261,2.476,262,2.779,263,2.169,264,1.815,265,2.476,266,3.889,267,2.476,268,2.476,269,2.851,270,3.889,271,1.514,272,3.406,273,3.889,274,2.476,275,3.118,276,3.406,277,1.967,278,1.368,279,2.394,280,4.206,281,3.889,282,3.889,283,3.889,284,6.564,285,3.889,286,0.998,287,2.476,288,3.889,289,3.406,290,3.889,291,3.889,292,3.406,293,3.889,294,3.889,295,3.889,296,4.802,297,3.889,298,4.802,299,2.145,300,1.967,301,2.476,302,2.169,303,0.998,304,2.169,305,2.145,306,2.145,307,2.532,308,1.433,309,1.433,310,3.889,311,2.476,312,2.476,313,0.705,314,3.889,315,2.476,316,2.476,317,2.476,318,2.476,319,2.476,320,2.476,321,2.476,322,3.889,323,3.889,324,3.889,325,1.433,326,2.476]],["title/controllers/CompaniesController.html",[0,1.236,327,3.09]],["body/controllers/CompaniesController.html",[0,1.043,2,1.043,3,0.141,4,0.094,5,0.063,7,0.246,8,0.012,11,2.579,13,2.289,14,2.433,15,0.589,22,2.433,25,2.165,27,1.796,28,2.165,29,0.094,30,0.179,33,1.484,34,0.007,35,0.007,73,0.954,108,1.911,116,0.32,117,1.498,119,0.79,121,2.029,122,0.988,127,1.724,135,2.86,136,1.337,138,2.087,140,2.293,141,0.79,142,0.761,143,2.091,163,1.641,167,2.816,168,3.114,171,1.724,180,1.874,181,1.538,201,1.961,264,2.606,286,2.409,313,1.454,327,3.743,328,3.114,329,4.745,330,2.494,331,2.292,332,2.131,333,3.114,334,4.166,335,3.114,336,2.294,337,3.555,338,1.596,339,3.977,340,2.931,341,2.289,342,2.692,343,3.555,344,2.292,345,1.596,346,2.289,347,2.956,348,3.555,349,1.484,350,2.057,351,3.555,352,1.796,353,4.885,354,2.165,355,3.555,356,1.961,357,2.057,358,2.209,359,3.846,360,3.114,361,1.484,362,3.743,363,1.484,364,2.823,365,3.555,366,3.555,367,2.823,368,1.657,369,3.114,370,2.433,371,3.555,372,2.165,373,2.165,374,2.165,375,3.555,376,2.057,377,2.165,378,3.555,379,2.165,380,2.057,381,2.433,382,3.555,383,2.057,384,2.057,385,2.057,386,3.555]],["title/modules/CompaniesModule.html",[36,1.034,49,2.884]],["body/modules/CompaniesModule.html",[2,1.968,3,0.125,4,0.141,5,0.095,7,0.258,8,0.012,15,0.883,29,0.141,30,0.268,34,0.009,35,0.009,36,1.802,38,2.224,39,2.305,40,2.484,41,2.484,42,2.305,43,3.423,44,3.423,49,5.634,60,3.127,61,2.484,62,2.484,64,2.484,66,2.809,67,1.429,141,0.608,327,5.383,336,1.611,359,5.509,360,4.666,387,4.666,388,4.666,389,4.666,390,5.327,391,5.327,392,4.591,393,4.666,394,2.938,395,4.666,396,1.766]],["title/injectables/CompaniesService.html",[113,0.892,359,2.713]],["body/injectables/CompaniesService.html",[3,0.058,4,0.065,5,0.044,7,0.227,8,0.012,15,0.41,29,0.065,30,0.124,31,1.565,32,1.109,34,0.005,35,0.005,67,0.663,72,0.872,73,1.458,74,0.872,75,1.077,94,2.422,96,3.795,97,2.774,102,2.996,108,1.93,113,0.822,114,0.931,116,0.223,117,1.139,119,0.716,121,1.733,122,0.878,135,2.392,138,1.843,140,2.079,141,0.776,142,0.69,143,1.896,144,2.651,163,2.015,192,2.205,194,3.093,257,1.109,258,1.152,262,1.429,264,1.811,271,1.15,278,1.045,286,1.933,299,2.997,305,2.997,306,2.997,307,2.865,308,2.774,309,2.774,313,1.105,325,2.246,329,1.962,330,1.621,331,1.742,332,1.621,333,3.4,334,3.628,336,2.367,338,1.742,340,2.152,344,2.152,345,1.742,347,2.226,349,1.621,352,1.961,353,4.373,358,1.069,359,2.499,361,1.031,362,2.846,363,1.031,393,2.164,397,2.164,398,2.47,399,2.997,400,2.47,401,3.882,402,2.47,403,2.287,404,2.47,405,2.47,406,2.47,407,2.47,408,2.47,409,1.363,410,1.691,411,1.505,412,1.429,413,1.429,414,2.47,415,1.81,416,1.513,417,2.141,418,3.882,419,2.47,420,0.996,421,2.47,422,2.47,423,1.505,424,1.505,425,1.505,426,1.505,427,1.505,428,1.505,429,1.505,430,2.364,431,2.364,432,2.47,433,2.364,434,1.505,435,2.364,436,2.47,437,1.505,438,1.505,439,1.505,440,1.505,441,1.505,442,1.505,443,1.505,444,1.505,445,1.505,446,1.505,447,1.505,448,1.505,449,5.434,450,1.505,451,2.164,452,2.015,453,3.719,454,3.882,455,3.882,456,1.962,457,2.47,458,2.47,459,3.31,460,3.882,461,3.882,462,3.4,463,2.47,464,2.47,465,4.795,466,3.882,467,1.59,468,3.083,469,2.47,470,0.794,471,3.4,472,3.4,473,3.882,474,4.795,475,2.47,476,2.47,477,2.47,478,2.47,479,4.795,480,2.47,481,3.882,482,1.811,483,2.47,484,2.47]],["title/classes/Company.html",[30,0.212,336,1.274]],["body/classes/Company.html",[3,0.098,4,0.11,5,0.074,7,0.211,8,0.012,29,0.172,30,0.286,34,0.008,35,0.008,67,1.111,71,2.093,72,1.463,73,1.111,74,1.463,75,1.458,112,2.152,116,0.373,119,0.914,122,0.959,136,1.547,141,0.741,142,0.923,192,1.215,237,1.203,271,0.877,278,0.903,303,2.617,336,1.719,392,2.835,396,1.885,410,2.835,415,3.026,416,2.529,417,3.58,420,2.617,470,2.086,485,0.903,486,2.835,487,2.709,488,2.808,489,4.463,490,4.143,491,2.916,492,4.143,493,3.464,494,3.422,495,4.143,496,4.143,497,4.143,498,4.143,499,3.037,500,4.143,501,4.143,502,4.143,503,2.184,504,2.997,505,3.628,506,1.417,507,2.667,508,2.184,509,1.291,510,3.29,511,3.628]],["title/classes/CreateCompanyDto.html",[30,0.212,334,2.439]],["body/classes/CreateCompanyDto.html",[3,0.113,4,0.127,5,0.085,7,0.203,8,0.012,29,0.127,30,0.373,34,0.008,35,0.008,116,0.432,119,0.846,122,0.985,136,1.433,141,0.878,142,0.846,237,1.327,271,1.014,278,1.045,334,3.627,336,2.464,415,3.584,416,2.996,417,4.241,452,2.381,485,1.045,493,2.001,509,2.309,512,6.106,513,3.28,514,3.743,515,6.489,516,4.793,517,4.793,518,4.793,519,4.793,520,2.898,521,2.527,522,3.746,523,1.449,524,2.001]],["title/classes/CreateFileDto.html",[30,0.212,525,2.713]],["body/classes/CreateFileDto.html",[3,0.155,4,0.175,5,0.117,8,0.011,29,0.175,30,0.332,34,0.01,35,0.01,485,1.438,525,4.913,526,5.777,527,5.238]],["title/classes/CreateJobDto.html",[30,0.212,528,2.567]],["body/classes/CreateJobDto.html",[3,0.077,4,0.086,5,0.058,7,0.184,8,0.012,29,0.086,30,0.315,34,0.006,35,0.006,75,1.076,112,1.589,116,0.293,119,0.89,122,0.965,136,1.508,141,0.797,142,0.876,163,1.54,237,1.014,258,2.234,271,0.689,336,2.183,403,1.748,416,2.603,417,1.797,452,2.635,485,0.71,491,3.093,506,1.115,509,2.523,514,3.884,520,3.028,522,2.65,523,0.985,524,1.36,528,2.918,529,6.263,530,2.388,531,4.941,532,3.983,533,4.571,534,4.941,535,4.571,536,4.3,537,3.987,538,4.941,539,3.258,540,3.258,541,3.258,542,4.792,543,4.792,544,3.305,545,3.258,546,4.035,547,3.258,548,3.258,549,3.258,550,3.258,551,3.258,552,3.258,553,3.258,554,3.258,555,2.587,556,2.854,557,3.462,558,4.197,559,3.258,560,3.258,561,4.979,562,2.643,563,4.197,564,4.979,565,3.085,566,2.773,567,2.643,568,2.388,569,4.197]],["title/classes/CreatePermissionDto.html",[30,0.212,570,2.713]],["body/classes/CreatePermissionDto.html",[3,0.121,4,0.136,5,0.092,7,0.167,8,0.012,29,0.136,30,0.33,34,0.009,35,0.009,36,1.929,116,0.463,119,0.869,122,0.98,136,1.472,141,0.898,142,0.837,237,1.389,452,2.446,485,1.122,509,2.578,514,3.844,520,2.963,523,1.556,570,4.224,571,6.885,572,4.086,573,5.061,574,5.38,575,5.145,576,5.145,577,5.145,578,5.145]],["title/classes/CreateResumeDto.html",[30,0.212,579,2.325]],["body/classes/CreateResumeDto.html",[3,0.097,4,0.109,5,0.073,7,0.21,8,0.012,29,0.15,30,0.351,34,0.008,35,0.008,75,1.273,116,0.372,119,0.862,122,0.916,136,1.461,141,0.835,142,0.851,237,1.2,278,1.412,452,2.6,485,0.9,506,2.696,509,2.567,514,3.693,515,3.614,520,3.013,521,2.176,522,2.643,523,1.248,524,1.723,544,2.989,562,2.276,566,2.388,579,3.127,580,6.143,581,2.656,582,5.776,583,5.776,584,4.032,585,4.772,586,4.748,587,3.867,588,4.126,589,2.907,590,4.126,591,4.126,592,4.126,593,3.614,594,3.614,595,3.944,596,2.656,597,3.453]],["title/classes/CreateRoleDto.html",[30,0.212,598,2.713]],["body/classes/CreateRoleDto.html",[3,0.114,4,0.128,5,0.086,7,0.205,8,0.011,29,0.128,30,0.318,34,0.008,35,0.008,75,1.418,112,2.094,116,0.437,119,0.85,122,0.881,136,1.439,141,0.881,142,0.819,237,1.337,275,3.704,416,3.007,452,2.59,485,1.057,506,2.161,509,2.512,514,3.759,520,2.908,523,1.466,532,4.256,544,3.33,546,4.066,557,3.846,562,3.484,568,3.554,595,3.846,597,2.953,598,4.066,599,6.759,600,3.851,601,4.849,602,4.849,603,4.849,604,3.689,605,4.849,606,4.849,607,4.849]],["title/classes/CreateSubscriberDto.html",[30,0.212,608,2.713]],["body/classes/CreateSubscriberDto.html",[3,0.118,4,0.132,5,0.089,7,0.162,8,0.011,29,0.132,30,0.324,34,0.009,35,0.009,112,2.136,116,0.45,119,0.814,122,0.974,136,1.378,141,0.89,142,0.784,237,1.363,278,1.769,452,2.643,485,1.09,509,2.347,514,3.6,520,2.837,522,3.003,523,1.511,537,4.279,544,3.396,555,3.969,556,4.378,557,3.044,562,3.553,568,5.225,589,2.891,608,4.147,609,6.594,610,3.969,611,4.998,612,4.998,613,4.998,614,6.441,615,4.998]],["title/classes/CreateUserCvDto.html",[30,0.212,596,2.713]],["body/classes/CreateUserCvDto.html",[3,0.104,4,0.117,5,0.079,7,0.217,8,0.012,29,0.157,30,0.361,34,0.008,35,0.008,75,1.332,116,0.397,119,0.765,122,0.886,136,1.296,141,0.819,142,0.789,237,1.256,278,0.962,452,2.634,485,0.962,506,2.693,509,2.527,514,3.386,520,3.056,521,2.326,522,2.766,523,1.334,524,1.842,544,3.78,562,2.433,566,2.553,579,2.433,580,5.693,581,2.84,582,5.944,583,5.944,584,3.273,585,4.906,586,3.234,587,3.853,589,2.663,595,4.083,596,3.82,597,4.366,616,5.197,617,4.412,618,4.412,619,4.412]],["title/classes/CreateUserDto.html",[30,0.212,620,2.325]],["body/classes/CreateUserDto.html",[3,0.087,4,0.098,5,0.066,7,0.216,8,0.012,29,0.162,30,0.367,33,2.198,34,0.007,35,0.007,75,1.183,116,0.334,119,0.858,122,0.984,136,1.453,138,1.331,141,0.858,142,0.859,161,2.047,172,2.26,181,1.606,237,1.114,255,3.047,271,0.786,278,1.592,279,2.799,336,2.271,396,1.231,403,2.232,415,3.405,416,2.052,452,2.414,485,0.809,506,2.093,509,2.496,514,3.552,520,3.147,521,2.776,522,2.853,523,1.122,524,1.55,544,2.776,565,2.389,566,3.047,567,2.904,589,2.747,595,3.207,597,3.207,616,3.251,620,2.904,621,5.252,622,2.389,623,4.226,624,4.047,625,3.712,626,3.712,627,3.712,628,3.712,629,3.712,630,3.712,631,3.712,632,3.712,633,3.86,634,3.712,635,4.486,636,3.603,637,2.721,638,2.721]],["title/controllers/DatabasesController.html",[0,1.236,639,3.09]],["body/controllers/DatabasesController.html",[0,1.832,2,1.832,3,0.147,4,0.165,5,0.111,7,0.24,8,0.011,15,1.035,29,0.165,30,0.314,33,2.606,34,0.01,35,0.01,127,3.027,368,2.911,639,5.418,640,5.468,641,6.243,642,5.069,643,5.468,644,6.243]],["title/modules/DatabasesModule.html",[36,1.034,50,2.884]],["body/modules/DatabasesModule.html",[2,1.828,3,0.112,4,0.126,5,0.085,7,0.269,8,0.012,15,0.787,29,0.126,30,0.239,34,0.008,35,0.008,36,1.707,38,1.983,39,2.055,40,2.215,41,2.215,42,2.055,43,3.242,44,2.215,50,5.682,59,4.791,60,2.905,61,2.215,62,2.215,64,2.905,66,2.505,67,1.274,75,1.067,138,1.201,141,0.794,245,4.339,279,1.733,394,2.62,396,2.306,604,2.215,639,5.098,642,5.065,643,4.161,645,4.161,646,4.75,647,4.161,648,4.75,649,4.75,650,2.4,651,4.012,652,4.161,653,4.265,654,3.772,655,4.012,656,3.058,657,4.75,658,4.75,659,4.161,660,3.772,661,3.251]],["title/injectables/DatabasesService.html",[113,0.892,642,2.713]],["body/injectables/DatabasesService.html",[3,0.078,4,0.088,5,0.059,7,0.25,8,0.012,9,4.2,10,1.828,15,0.549,29,0.088,30,0.167,31,1.956,32,3.341,33,2.397,34,0.006,35,0.006,67,0.889,72,1.171,73,0.889,74,1.171,75,0.744,102,2.237,112,1.609,113,1.027,114,1.249,116,0.299,117,1.424,119,0.655,121,0.972,138,1.451,140,1.099,141,0.85,142,0.365,143,1.002,163,1.56,192,2.13,194,3.424,237,1.027,245,4.004,257,1.488,258,1.545,263,2.903,269,2.43,271,0.701,275,3.332,278,1.252,279,2.563,399,4.258,409,1.828,415,2.677,416,1.891,482,5.152,532,2.677,604,2.262,623,3.322,624,3.027,636,2.268,642,3.124,652,2.903,654,2.632,656,2.134,662,2.903,663,6.319,664,7.027,665,3.314,666,5.028,667,4.559,668,4.853,669,4.853,670,3.314,671,4.853,672,2.43,673,2.134,674,2.268,675,2.134,676,4.209,677,2.632,678,4.209,679,2.43,680,3.314,681,2.903,682,2.632,683,3.314,684,3.314,685,3.314,686,5.741,687,3.314,688,5.741,689,3.314,690,5.741,691,3.314,692,3.314,693,3.314,694,3.314,695,3.854,696,3.314,697,2.903,698,3.314,699,3.854,700,3.314,701,2.903,702,5.741,703,3.314,704,5.741,705,4.559,706,4.853,707,5.741,708,5.741,709,3.314,710,3.314,711,4.853,712,3.314,713,4.25,714,3.314,715,3.314,716,3.314,717,2.134,718,3.314]],["title/classes/File.html",[5,0.075,30,0.212]],["body/classes/File.html",[3,0.156,4,0.175,5,0.144,8,0.011,29,0.175,30,0.333,34,0.01,35,0.01,485,1.442,719,5.795]],["title/controllers/FilesController.html",[0,1.236,720,3.09]],["body/controllers/FilesController.html",[0,1.103,2,1.103,3,0.089,4,0.1,5,0.141,7,0.245,8,0.012,11,1.898,15,0.623,27,2.683,29,0.1,30,0.189,33,1.569,34,0.007,35,0.007,73,1.008,108,1.952,116,0.338,117,1.558,119,0.807,121,2.072,122,0.927,127,1.822,136,1.366,140,2.22,141,0.765,142,0.737,143,2.025,163,1.208,167,2.93,171,1.822,175,2.174,180,1.982,181,1.626,188,3.292,201,2.93,286,2.142,330,2.795,331,2.384,332,2.218,345,1.687,346,2.419,347,3.054,349,1.569,350,2.174,352,1.898,354,2.289,356,2.073,357,2.174,361,1.569,363,1.569,368,1.752,376,2.174,377,2.289,379,2.289,380,2.174,383,2.174,384,2.174,385,2.174,525,2.419,720,3.894,721,3.292,722,4.893,723,6.161,724,3.758,725,3.758,726,3.758,727,3.758,728,5.269,729,3.758,730,3.758,731,6.161,732,3.758,733,3.758,734,3.758,735,4.653,736,3.758,737,5.312,738,3.758,739,5.312,740,3.758,741,3.966,742,3.292,743,4.218,744,3.758,745,2.755,746,2.073,747,3.758,748,3.758,749,3.758,750,3.758,751,3.758,752,3.758,753,3.758,754,3.758,755,3.758,756,3.758,757,3.758,758,5.312,759,3.758,760,3.758,761,3.758,762,3.758,763,3.758,764,3.758,765,3.758,766,3.758,767,3.758,768,3.758]],["title/modules/FilesModule.html",[36,1.034,51,2.884]],["body/modules/FilesModule.html",[2,1.993,3,0.128,4,0.144,5,0.097,7,0.264,8,0.012,15,0.901,29,0.144,30,0.274,34,0.009,35,0.009,36,1.819,38,2.27,39,2.352,40,2.535,41,2.535,42,2.352,43,3.455,44,2.535,51,5.579,60,3.168,61,2.535,62,2.535,64,2.535,175,3.146,720,5.433,741,5.248,742,4.762,745,3.986,769,4.762,770,4.762,771,5.437,772,5.437,773,5.951,774,5.437,775,4.981,776,5.437,777,5.437,778,5.437]],["title/injectables/FilesService.html",[113,0.892,741,2.713]],["body/injectables/FilesService.html",[3,0.108,4,0.121,5,0.135,7,0.221,8,0.012,15,0.757,29,0.121,30,0.23,34,0.008,35,0.008,108,2.091,113,1.285,114,1.72,116,0.411,117,1.781,119,0.864,121,2.329,122,0.896,140,2.41,141,0.83,142,0.799,143,2.198,163,1.467,286,2.447,313,1.728,330,3.034,331,2.724,332,2.534,345,2.724,347,2.932,349,2.534,352,3.066,361,1.906,363,1.906,403,2.977,525,4.871,722,3.625,728,5.434,741,3.908,743,4.82,779,3.998,780,6.07,781,4.565,782,4.565,783,4.565,784,4.565,785,4.565,786,7.567,787,4.565,788,4.565,789,4.565]],["title/controllers/HealthController.html",[0,1.236,790,3.09]],["body/controllers/HealthController.html",[0,1.668,2,1.668,3,0.134,4,0.151,5,0.101,7,0.245,8,0.012,15,0.943,27,3.529,29,0.151,30,0.286,31,2.293,32,3.136,34,0.009,35,0.009,108,1.571,116,0.512,117,2.05,119,0.649,121,1.668,127,2.758,136,1.1,746,3.137,790,5.122,791,4.981,792,6.986,793,6.909,794,5.687,795,5.687,796,6.986,797,6.986,798,6.986,799,4.516,800,5.687,801,5.687,802,5.687,803,5.687]],["title/modules/HealthModule.html",[36,1.034,52,2.884]],["body/modules/HealthModule.html",[2,2.153,3,0.145,4,0.163,5,0.11,7,0.254,8,0.011,15,1.023,29,0.163,30,0.31,34,0.01,35,0.01,36,1.801,38,2.576,52,5.023,64,2.877,790,5.743,799,4.9,804,6.17,805,6.17,806,7.339]],["title/classes/History.html",[30,0.212,807,2.567]],["body/classes/History.html",[3,0.113,4,0.127,5,0.086,7,0.25,8,0.012,29,0.127,30,0.387,34,0.008,35,0.008,75,1.412,116,0.434,119,0.799,122,0.829,136,1.354,142,0.869,237,1.331,271,1.019,278,1.05,313,1.371,452,2.021,470,2.586,485,1.05,488,3.029,491,2.625,506,1.647,509,1.501,520,3.109,523,1.456,524,2.01,557,2.933,562,3.468,567,3.862,579,2.656,581,3.1,584,3.862,587,2.931,589,2.822,593,4.218,594,4.218,650,2.433,807,4.899,808,5.441,809,4.815,810,4.815,811,2.433,812,2.335,813,2.335,814,3.295,815,2.933,816,2.083,817,3.824]],["title/interfaces/Iuser.html",[135,1.537,818,2.713]],["body/interfaces/Iuser.html",[3,0.126,4,0.142,5,0.096,7,0.174,8,0.011,29,0.142,34,0.009,35,0.009,36,1.317,116,0.483,122,1.026,135,2.458,141,0.928,142,0.925,143,2.038,237,1.426,271,1.72,275,4.075,278,1.685,279,2.819,573,3.456,604,2.503,672,3.935,818,3.456,819,4.263,820,4.702,821,4.707]],["title/classes/Job.html",[30,0.212,822,1.892]],["body/classes/Job.html",[3,0.081,4,0.091,5,0.061,7,0.209,8,0.012,29,0.156,30,0.296,34,0.007,35,0.007,67,0.925,71,1.743,72,1.218,73,0.925,74,1.218,75,1.319,112,2.437,116,0.311,119,0.926,122,0.974,136,1.569,141,0.735,142,0.93,192,1.012,237,1.057,257,2.243,271,1.057,278,0.752,303,1.391,336,1.776,396,1.657,403,1.822,416,2.289,417,1.903,420,2.368,470,1.888,485,0.752,487,2.452,488,1.493,489,4.472,491,2.975,493,3.361,494,3.604,499,3.663,503,1.819,504,2.635,506,1.709,507,2.221,508,1.819,509,1.558,523,1.043,531,4.02,532,3.24,533,4.02,534,4.02,535,4.02,536,3.782,537,3.097,538,4.02,546,4.146,589,1.549,650,1.743,821,2.101,822,2.243,823,2.361,824,2.891,825,3.45,826,3.45,827,3.45,828,3.45,829,3.45,830,3.45,831,3.45,832,3.45,833,3.45,834,3.45,835,3.45,836,3.45,837,3.45,838,3.45,839,2.221,840,2.221,841,2.74,842,3.022]],["title/controllers/JobsController.html",[0,1.236,843,3.09]],["body/controllers/JobsController.html",[0,1.041,2,1.041,3,0.141,4,0.094,5,0.063,7,0.24,8,0.012,11,2.576,13,2.285,15,0.588,27,3.015,29,0.094,30,0.179,33,1.482,34,0.007,35,0.007,73,0.952,102,2.326,108,1.91,116,0.32,117,1.496,119,0.789,121,2.028,122,0.987,127,1.721,135,2.859,136,1.337,138,2.108,140,2.291,141,0.789,142,0.76,143,2.09,144,1.593,163,1.639,167,2.813,171,1.721,176,1.793,180,1.871,181,1.536,194,1.536,201,1.958,286,2.406,313,1.452,330,2.492,331,2.289,332,2.129,338,1.593,339,3.974,340,2.929,342,2.689,344,2.289,345,1.593,347,2.955,349,1.482,350,2.053,352,1.793,354,2.161,356,1.958,357,2.053,358,2.206,361,1.482,363,1.482,368,1.655,370,2.429,372,2.161,373,2.161,374,2.161,376,2.053,377,2.161,379,2.161,380,2.053,381,2.429,383,2.053,384,2.053,385,2.053,528,4.382,746,1.958,822,3.404,843,3.739,844,3.109,845,2.818,846,3.109,847,2.602,848,3.549,849,3.549,850,3.549,851,3.109,852,3.549,853,3.549,854,5.191,855,3.549,856,3.843,857,3.109,858,4.05,859,3.549,860,3.549,861,2.429,862,3.549,863,3.549,864,3.549,865,4.467,866,3.549,867,3.549]],["title/modules/JobsModule.html",[36,1.034,53,2.884]],["body/modules/JobsModule.html",[2,1.949,3,0.124,4,0.139,5,0.093,7,0.262,8,0.012,15,0.87,29,0.139,30,0.264,34,0.009,35,0.009,36,1.79,38,2.191,39,2.27,40,2.446,41,2.446,42,2.27,43,3.4,44,3.4,53,5.615,60,3.098,61,2.446,62,2.446,64,2.446,66,2.767,67,1.407,75,1.492,141,0.599,394,2.894,396,1.74,822,2.355,840,4.278,843,5.346,856,5.497,857,4.596,868,4.596,869,4.596,870,4.596,871,5.247,872,5.247,873,4.596,874,4.596,875,5.247]],["title/injectables/JobsService.html",[113,0.892,856,2.713]],["body/injectables/JobsService.html",[3,0.064,4,0.072,5,0.048,7,0.238,8,0.012,15,0.45,29,0.072,30,0.137,31,1.685,32,1.219,34,0.006,35,0.006,67,0.728,72,0.959,73,1.366,74,0.959,75,1.144,94,2.573,96,3.929,97,2.947,102,3.054,108,1.706,113,0.884,114,1.024,116,0.245,117,1.226,119,0.744,121,1.811,122,0.898,135,2.678,138,1.888,140,2.162,141,0.8,142,0.717,143,1.971,144,2.771,163,1.984,176,1.372,192,2.11,194,2.821,257,1.219,258,1.266,262,1.571,271,1.437,278,1.11,286,1.685,299,2.305,305,2.305,306,2.305,307,3.255,308,2.418,309,2.418,313,1.19,325,2.947,330,1.744,332,1.744,336,1.263,338,1.876,340,2.286,342,1.432,344,2.286,347,2.925,349,1.744,352,2.111,358,1.175,361,1.134,363,1.134,399,3.154,403,2.378,409,1.498,411,1.654,412,1.571,413,1.571,416,1.628,420,1.095,423,1.654,424,1.654,425,1.654,426,1.654,427,1.654,428,1.654,429,1.654,430,2.545,431,2.545,433,2.545,434,1.654,435,2.545,437,1.654,438,1.654,439,1.654,440,1.654,441,1.654,442,2.545,443,1.654,444,1.654,445,1.654,446,1.654,447,1.654,448,2.545,450,2.545,453,1.859,459,3.102,467,2.69,470,0.873,487,1.134,528,3.97,531,2.86,532,2.305,533,2.86,534,2.86,535,2.86,536,2.69,537,2.203,538,2.86,746,1.498,822,3.228,839,1.748,846,3.66,854,4.798,856,2.69,858,3.318,873,2.379,874,2.379,876,2.379,877,3.318,878,2.716,879,2.716,880,3.66,881,2.716,882,2.716,883,3.318,884,2.716,885,2.716,886,2.716,887,1.991,888,2.716,889,4.179,890,2.716,891,2.157,892,2.716,893,2.716,894,2.716,895,3.063,896,2.716,897,2.379,898,4.179,899,2.716]],["title/injectables/JwtAuthGuard.html",[25,2.567,113,0.892]],["body/injectables/JwtAuthGuard.html",[3,0.163,4,0.108,5,0.072,7,0.244,8,0.012,14,4.396,15,0.673,18,3.226,19,2.474,25,3.416,28,2.474,29,0.108,30,0.204,31,1.638,34,0.007,35,0.007,108,1.775,112,1.86,113,1.187,114,1.531,116,0.366,117,1.646,119,0.734,121,1.646,122,0.481,138,1.838,140,2.13,141,0.734,142,0.707,143,1.942,158,2.978,163,1.803,175,2.351,192,2.205,205,3.558,275,2.142,306,3.543,307,2.957,368,1.894,604,3.23,672,2.978,697,3.558,793,3.558,816,2.427,900,6.068,901,3.226,902,5.609,903,5.609,904,5.609,905,3.558,906,5.969,907,4.063,908,5.609,909,5.647,910,4.063,911,5.079,912,5.609,913,4.063,914,5.609,915,3.558,916,2.978,917,3.226,918,4.454,919,2.978,920,4.913,921,4.063,922,4.454,923,5.609,924,4.063,925,4.063,926,5.609,927,4.063,928,4.063,929,6.424,930,4.063,931,6.424,932,4.063,933,5.102,934,4.063,935,4.063,936,4.063,937,4.063]],["title/injectables/JwtStrategy.html",[113,0.892,218,2.884]],["body/injectables/JwtStrategy.html",[3,0.109,4,0.122,5,0.082,7,0.253,8,0.012,9,4.518,10,2.551,15,0.767,19,2.817,29,0.122,30,0.233,31,2.469,32,2.748,34,0.008,35,0.008,102,2.675,108,1.278,113,1.296,114,1.743,116,0.417,117,1.796,119,0.699,121,1.357,122,0.725,135,2.665,140,2.03,141,0.868,142,0.673,143,1.851,144,2.748,165,4.03,166,3.673,184,5.451,192,2.014,194,2.001,203,3.673,218,4.19,231,4.051,264,3.391,269,3.391,271,1.453,272,4.051,275,2.439,276,4.051,278,1.335,279,2.503,280,6.012,816,2.649,919,3.391,938,4.051,939,5.363,940,5.363,941,4.625,942,4.625,943,6.123,944,4.625,945,4.625,946,4.051,947,3.673,948,4.051,949,4.051,950,4.625,951,4.625,952,4.625,953,3.673,954,4.625,955,4.051]],["title/injectables/LocalAuthGuard.html",[20,2.884,113,0.892]],["body/injectables/LocalAuthGuard.html",[3,0.148,4,0.167,5,0.112,7,0.241,8,0.011,15,1.044,18,5.003,19,3.836,20,5.085,29,0.167,30,0.317,34,0.01,35,0.01,113,1.572,114,2.374,816,3.215,901,5.003,956,5.517,957,7.43]],["title/injectables/LocalStrategy.html",[113,0.892,219,2.884]],["body/injectables/LocalStrategy.html",[3,0.119,4,0.134,5,0.09,7,0.245,8,0.012,15,0.838,19,3.081,23,4.63,29,0.134,30,0.255,31,2.039,34,0.009,35,0.009,102,2.793,108,1.398,113,1.374,114,1.906,116,0.456,117,1.904,119,0.741,121,1.484,122,0.948,138,1.912,140,2.152,141,0.741,142,0.714,143,1.963,163,1.626,169,4.017,170,4.017,192,1.484,194,2.188,219,4.442,255,2.927,256,5.155,307,2.667,368,2.358,452,1.626,624,3.987,816,2.808,915,4.43,919,3.708,939,5.685,940,5.685,946,4.43,947,4.017,949,4.43,955,4.43,958,4.43,959,5.058,960,5.058,961,6.491,962,5.058,963,5.058,964,5.058,965,5.058]],["title/controllers/MailController.html",[0,1.236,966,3.09]],["body/controllers/MailController.html",[0,1.192,2,1.192,3,0.096,4,0.108,5,0.072,7,0.262,8,0.012,15,0.673,27,2.833,29,0.108,30,0.204,31,1.638,32,2.883,34,0.007,35,0.007,67,1.09,72,1.435,73,1.09,74,1.435,75,0.912,86,3.226,102,2.503,108,1.55,116,0.366,117,1.646,119,0.464,121,1.192,127,1.97,136,0.786,141,0.464,144,1.824,171,1.97,180,2.142,181,1.758,192,2.133,194,2.779,257,1.824,278,1.401,336,1.228,399,3.543,409,2.241,452,1.306,536,2.615,537,2.957,585,2.78,746,2.241,822,2.518,839,2.615,845,5.102,880,3.558,911,2.978,966,4.112,967,3.558,968,4.063,969,6.927,970,4.063,971,4.063,972,5.609,973,5.609,974,4.063,975,2.615,976,3.558,977,6.424,978,2.978,979,3.226,980,2.351,981,2.78,982,3.558,983,3.226,984,4.063,985,4.063,986,4.063,987,4.063,988,3.558,989,3.558,990,4.063,991,4.063,992,4.063,993,4.063,994,4.063,995,4.913,996,4.063,997,4.063,998,5.609,999,4.063,1000,4.063,1001,4.063,1002,4.063,1003,4.063,1004,3.226,1005,4.063,1006,4.063,1007,4.063,1008,4.063,1009,4.063,1010,4.063,1011,4.063,1012,4.063,1013,4.063,1014,3.558,1015,4.063,1016,4.063,1017,4.063,1018,4.063,1019,4.063,1020,4.063,1021,4.063,1022,3.558,1023,4.063,1024,4.063,1025,4.063,1026,4.063,1027,4.063]],["title/modules/MailModule.html",[36,1.034,54,2.884]],["body/modules/MailModule.html",[2,1.781,3,0.108,4,0.121,5,0.081,7,0.267,8,0.012,9,4.205,10,2.518,15,0.757,29,0.121,30,0.23,34,0.008,35,0.008,36,1.674,38,1.906,39,1.975,40,2.128,41,2.128,42,1.975,43,3.179,44,2.128,54,5.324,60,2.83,61,2.128,62,2.128,64,2.128,66,2.407,67,1.224,101,3.625,102,1.779,109,3.625,112,2.012,128,3.625,138,1.154,141,0.693,163,1.467,253,3.998,292,3.998,394,2.518,396,2.012,822,2.049,840,3.908,953,3.625,966,4.999,975,5.009,976,3.998,978,4.45,979,3.625,980,2.641,982,3.998,983,3.625,1004,3.625,1022,3.998,1028,3.998,1029,3.998,1030,4.565,1031,4.565,1032,4.565,1033,4.565,1034,3.124,1035,6.07,1036,4.565,1037,4.154,1038,4.565,1039,4.565,1040,4.565,1041,4.565,1042,4.565,1043,4.565,1044,4.565,1045,4.565,1046,4.565,1047,4.565,1048,4.565,1049,4.565,1050,4.565,1051,3.998]],["title/injectables/MailService.html",[113,0.892,975,2.713]],["body/injectables/MailService.html",[3,0.153,4,0.172,5,0.116,7,0.211,8,0.011,15,1.076,29,0.172,30,0.327,34,0.01,35,0.01,113,1.601,114,2.447,975,4.869,1052,5.688]],["title/injectables/MulterConfigService.html",[113,0.892,775,3.09]],["body/injectables/MulterConfigService.html",[3,0.082,4,0.092,5,0.141,7,0.223,8,0.012,15,0.578,29,0.092,30,0.175,34,0.007,35,0.007,108,1.391,112,1.155,113,1.065,114,1.313,116,0.314,117,1.476,119,0.675,121,1.022,122,0.413,151,4.408,175,2.016,192,1.476,237,1.065,257,3.08,258,2.346,299,1.922,305,1.922,456,3.997,462,4.408,468,2.767,679,2.554,717,2.243,735,3.052,745,2.554,773,4.408,775,3.689,1034,3.444,1053,3.052,1054,5.907,1055,5.907,1056,6.47,1057,3.484,1058,5.907,1059,3.484,1060,3.484,1061,5.032,1062,5.032,1063,5.032,1064,5.907,1065,6.01,1066,5.907,1067,5.907,1068,3.484,1069,5.032,1070,3.052,1071,3.484,1072,3.484,1073,3.484,1074,5.907,1075,6.01,1076,6.862,1077,3.484,1078,3.484,1079,5.907,1080,5.174,1081,3.484,1082,3.484,1083,3.484,1084,3.484,1085,3.052,1086,2.385,1087,3.484,1088,3.484,1089,3.484,1090,5.032,1091,3.484,1092,3.484,1093,5.032,1094,3.484,1095,5.907,1096,5.032,1097,3.484,1098,5.907,1099,3.484,1100,4.408,1101,3.484,1102,6.862,1103,4.408,1104,3.484,1105,3.052,1106,3.484,1107,3.484,1108,3.484,1109,3.484,1110,4.408,1111,3.484,1112,3.484,1113,5.907,1114,5.907,1115,3.484,1116,3.484,1117,5.032,1118,5.032,1119,3.484,1120,5.907,1121,3.484,1122,3.484,1123,3.484,1124,3.484,1125,5.032,1126,3.484,1127,3.484,1128,3.484,1129,3.484,1130,5.907,1131,3.484,1132,5.032,1133,5.032,1134,3.484,1135,5.032,1136,5.032,1137,5.032,1138,3.484,1139,3.484,1140,3.484,1141,5.032,1142,3.484,1143,3.484,1144,3.484]],["title/classes/Permission.html",[30,0.212,604,1.965]],["body/classes/Permission.html",[3,0.097,4,0.109,5,0.073,7,0.226,8,0.012,29,0.171,30,0.285,34,0.007,35,0.007,36,1.588,67,1.105,71,2.08,72,1.454,73,1.105,74,1.454,75,1.453,112,1.365,116,0.371,119,0.912,122,0.967,136,1.546,141,0.739,142,0.927,192,1.208,237,1.198,271,1.369,278,1.411,303,2.609,396,1.877,420,2.609,470,2.08,485,0.898,487,2.701,488,2.799,489,4.442,491,2.909,494,3.411,503,2.171,504,2.985,506,2.214,508,2.171,520,1.552,523,1.245,573,4.165,574,4.428,604,2.64,653,2.818,674,2.818,821,3.94,824,4.367,1145,3.019,1146,4.118,1147,4.118,1148,4.118,1149,4.118,1150,4.118,1151,4.118,1152,4.118,1153,4.118,1154,4.118,1155,3.607,1156,4.118]],["title/controllers/PermissionsController.html",[0,1.236,1157,3.09]],["body/controllers/PermissionsController.html",[0,1.048,2,1.048,3,0.084,4,0.095,5,0.064,7,0.246,8,0.012,11,2.589,13,2.3,15,0.592,22,2.445,25,2.176,29,0.095,30,0.18,33,1.492,34,0.007,35,0.007,73,0.958,108,1.915,116,0.322,117,1.503,119,0.791,121,2.033,122,0.988,127,1.733,135,2.864,136,1.34,138,2.089,140,2.297,141,0.791,142,0.762,143,2.095,167,3.305,171,1.733,176,1.805,180,1.884,181,1.546,201,1.971,275,1.884,286,2.416,313,1.706,330,2.501,331,2.3,332,2.139,338,1.604,339,3.986,340,2.938,341,2.3,342,2.702,344,2.3,345,1.604,346,2.3,347,3.026,349,1.492,350,2.067,352,1.805,354,2.176,356,1.971,357,2.067,358,2.217,361,1.492,363,1.492,364,2.838,367,2.838,368,1.666,372,2.176,373,2.176,374,2.176,376,2.067,377,2.176,379,2.176,380,2.067,381,2.445,383,2.067,384,2.067,385,2.067,570,4.643,604,3.543,746,1.971,847,2.619,861,2.445,1157,3.757,1158,3.13,1159,3.13,1160,3.573,1161,3.573,1162,4.07,1163,3.573,1164,3.573,1165,5.2,1166,3.573,1167,3.857,1168,3.13,1169,4.07,1170,3.573,1171,3.573,1172,3.573,1173,3.573,1174,3.573,1175,3.573,1176,3.573]],["title/modules/PermissionsModule.html",[36,1.034,55,2.884]],["body/modules/PermissionsModule.html",[2,1.997,3,0.128,4,0.144,5,0.097,7,0.259,8,0.012,15,0.904,29,0.144,30,0.274,34,0.009,35,0.009,36,1.821,38,2.276,39,2.358,40,2.541,41,2.541,42,2.358,43,3.459,44,2.541,55,5.582,60,3.173,61,2.541,62,2.541,64,2.541,66,2.874,67,1.462,141,0.622,394,3.007,396,1.807,604,2.541,653,4.657,660,4.329,1157,5.44,1167,5.251,1168,4.775,1177,4.775,1178,4.775,1179,5.451,1180,5.451,1181,4.775]],["title/injectables/PermissionsService.html",[113,0.892,1167,2.713]],["body/injectables/PermissionsService.html",[3,0.062,4,0.07,5,0.047,7,0.236,8,0.012,15,0.438,29,0.07,30,0.133,31,1.649,32,1.185,34,0.005,35,0.005,36,1.383,67,0.708,72,0.933,73,1.342,74,0.933,75,1.124,94,2.528,96,3.89,97,2.895,102,3.037,108,1.684,113,0.865,114,0.995,116,0.238,117,1.2,119,0.736,121,1.788,122,0.892,135,2.657,138,1.803,140,2.137,141,0.832,142,0.709,143,1.949,144,2.736,163,2.072,176,1.334,192,2.209,194,2.909,257,1.185,258,1.231,262,1.528,271,1.423,278,1.091,286,2.018,299,2.256,303,1.065,305,2.256,306,2.256,307,3.399,308,2.366,309,2.366,313,1.164,325,2.895,330,1.707,331,1.835,332,1.707,338,1.835,340,2.246,344,2.246,345,1.835,347,2.963,349,1.707,352,1.334,358,1.143,361,1.102,363,1.102,399,3.108,403,2.351,409,1.457,411,1.608,412,1.528,413,1.528,420,1.065,423,1.608,424,1.608,425,1.608,426,1.608,427,1.608,428,1.608,429,1.608,430,2.49,431,2.49,433,2.49,434,1.608,435,2.49,437,2.49,438,1.608,439,1.608,440,1.608,441,1.608,442,2.49,443,1.608,444,1.608,445,1.608,446,1.608,447,1.608,448,2.49,450,2.49,453,1.807,459,3.048,467,2.633,470,0.849,487,1.102,570,4.15,573,3.924,574,4.171,587,1.231,604,3.134,666,3.582,672,1.936,674,1.807,681,2.313,717,1.7,877,2.097,887,1.936,895,2.998,933,3.248,1086,1.807,1159,3.582,1162,2.097,1165,4.754,1167,2.633,1169,3.248,1181,2.313,1182,2.313,1183,2.641,1184,2.641,1185,2.641,1186,2.641,1187,2.641,1188,2.641,1189,2.641,1190,2.641,1191,2.641,1192,2.641,1193,2.641,1194,2.641,1195,2.641,1196,2.097,1197,5.004,1198,2.313,1199,2.097,1200,2.641,1201,4.089,1202,2.641]],["title/classes/RegisterUserDto.html",[30,0.212,161,2.325]],["body/classes/RegisterUserDto.html",[3,0.092,4,0.103,5,0.069,7,0.221,8,0.012,29,0.166,30,0.373,33,2.275,34,0.007,35,0.007,75,1.224,116,0.351,119,0.847,122,0.995,136,1.435,138,1.378,141,0.847,142,0.855,161,3.006,172,2.373,181,1.686,237,1.153,255,3.153,271,0.825,278,1.561,279,2.706,336,2.057,396,1.292,403,2.292,415,3.338,416,2.123,452,2.448,485,0.85,506,1.864,509,2.313,520,3.219,521,2.873,522,2.929,523,1.178,524,1.627,544,2.055,565,2.509,566,3.153,567,3.006,589,2.82,595,3.319,597,2.373,620,2.15,621,5.212,622,2.509,623,4.143,624,4.016,633,2.857,635,4.606,636,3.729,637,2.857,638,2.857,1203,3.897,1204,3.897,1205,3.897,1206,3.897,1207,3.897,1208,3.897,1209,3.897]],["title/interfaces/Response.html",[146,2.567,818,2.713]],["body/interfaces/Response.html",[3,0.12,4,0.135,5,0.091,7,0.254,8,0.012,15,0.845,28,3.103,29,0.173,30,0.256,34,0.009,35,0.009,108,1.408,113,1.38,116,0.459,122,0.852,142,0.791,143,1.972,146,3.971,237,1.38,368,2.375,403,2.623,452,2.519,679,3.735,818,3.28,819,4.046,906,5.712,909,4.781,911,3.735,916,3.735,922,4.046,1210,4.046,1211,6.367,1212,6.865,1213,5.712,1214,5.712,1215,5.712,1216,4.046,1217,4.463,1218,4.463,1219,3.735,1220,3.735,1221,4.463,1222,4.463,1223,4.463,1224,4.463,1225,4.463,1226,4.463]],["title/classes/Resume.html",[30,0.212,587,1.965]],["body/classes/Resume.html",[3,0.084,4,0.095,5,0.064,7,0.225,8,0.012,29,0.159,30,0.18,34,0.007,35,0.007,67,0.96,71,1.808,72,1.264,73,0.96,74,1.264,75,1.347,112,1.187,116,0.322,119,0.917,122,0.942,136,1.553,142,0.934,192,1.05,237,1.086,271,1.386,278,1.62,303,2.418,336,1.082,395,3.135,396,1.701,420,2.418,470,2.105,485,0.78,487,2.504,488,2.834,489,4.419,491,2.895,494,3.805,503,1.887,504,2.705,506,2.748,508,1.887,582,4.397,583,4.397,584,3.613,585,4.104,586,4.397,587,2.392,650,1.808,807,3.652,821,3.989,822,1.607,824,4.175,983,2.842,1004,2.842,1227,2.624,1228,4.464,1229,4.802,1230,3.579,1231,3.579,1232,3.579,1233,3.579,1234,3.579,1235,3.579,1236,3.579,1237,3.579,1238,3.579,1239,3.579,1240,3.579,1241,3.579,1242,3.579,1243,2.624,1244,3.579,1245,2.624,1246,3.135,1247,3.579]],["title/controllers/ResumesController.html",[0,1.236,1248,3.09]],["body/controllers/ResumesController.html",[0,1.002,2,1.002,3,0.08,4,0.09,5,0.061,7,0.238,8,0.012,11,2.506,15,0.566,27,1.726,29,0.09,30,0.172,33,1.426,34,0.007,35,0.007,73,0.916,108,1.962,116,0.308,117,1.456,119,0.811,121,2.084,122,0.994,127,1.657,135,2.931,136,1.374,138,2.122,140,2.355,141,0.811,142,0.781,143,2.147,163,1.595,167,1.885,171,1.657,176,1.726,180,1.801,181,1.478,201,2.737,313,1.412,330,2.439,331,2.227,332,2.071,335,2.993,338,1.534,339,3.904,340,2.877,341,2.199,342,2.616,344,2.227,345,1.534,346,2.199,347,2.929,349,1.426,350,1.977,354,2.081,356,1.885,357,1.977,358,2.147,361,1.426,363,1.426,368,1.593,369,2.993,370,2.338,372,2.081,373,2.081,374,2.081,376,1.977,377,2.081,379,2.081,380,1.977,381,2.338,383,1.977,384,1.977,385,1.977,579,1.885,584,3.917,587,3.624,596,4.572,746,1.885,814,3.395,815,2.081,1248,3.637,1249,2.993,1250,5.117,1251,4.961,1252,5.842,1253,2.993,1254,3.417,1255,3.417,1256,4.961,1257,3.417,1258,3.417,1259,3.417,1260,3.417,1261,3.417,1262,3.417,1263,3.417,1264,3.761,1265,2.993,1266,3.417,1267,3.417,1268,3.417,1269,3.417,1270,3.417,1271,3.417,1272,3.417,1273,3.417,1274,3.417,1275,3.417]],["title/modules/ResumesModule.html",[36,1.034,56,2.884]],["body/modules/ResumesModule.html",[2,1.99,3,0.128,4,0.144,5,0.097,7,0.264,8,0.012,15,0.899,29,0.144,30,0.273,34,0.009,35,0.009,36,1.817,38,2.264,39,2.346,40,2.528,41,2.528,42,2.346,43,3.451,44,2.528,56,5.575,60,3.163,61,2.528,62,2.528,64,2.528,66,2.859,67,1.455,75,1.524,141,0.619,394,2.991,396,1.798,587,2.528,1245,4.973,1248,5.427,1264,5.244,1265,4.75,1276,4.75,1277,4.75,1278,5.423,1279,5.423,1280,4.75]],["title/injectables/ResumesService.html",[113,0.892,1264,2.713]],["body/injectables/ResumesService.html",[3,0.058,4,0.065,5,0.044,7,0.226,8,0.012,15,0.405,29,0.065,30,0.123,31,1.552,32,1.097,34,0.005,35,0.005,67,0.656,72,0.863,73,1.277,74,0.863,75,1.07,94,2.969,96,3.78,97,2.756,102,3.068,108,1.725,113,0.815,114,0.921,116,0.22,117,1.129,119,0.746,121,1.831,122,0.909,135,2.734,138,1.837,140,2.166,141,0.795,142,0.718,143,1.975,144,2.802,163,2.175,176,1.235,192,2.132,194,2.826,257,1.097,258,1.14,262,1.414,271,1.564,278,1.424,286,1.552,299,2.124,303,1.552,305,2.124,306,2.124,307,3.291,308,2.228,309,2.228,313,1.096,325,3.126,330,1.607,331,1.728,332,1.607,338,1.728,340,2.138,344,2.138,345,1.728,347,2.92,349,1.607,352,1.945,358,1.058,361,1.021,363,1.021,399,2.98,403,2.277,409,1.348,411,1.489,412,1.414,413,1.414,420,0.986,423,1.489,424,2.345,425,1.489,426,1.489,427,1.489,428,1.489,429,1.489,430,2.345,431,2.345,433,2.345,434,1.489,435,2.345,437,1.489,438,1.489,439,1.489,440,1.489,441,1.489,442,2.345,443,1.489,444,1.489,445,1.489,446,1.489,447,1.489,448,2.345,450,2.9,453,1.673,459,2.9,470,1.531,487,1.021,488,1.666,491,1.607,579,1.348,582,3.491,583,3.491,584,3.733,585,2.635,586,2.822,587,2.91,596,4.019,807,2.345,814,2.635,815,1.489,822,2.638,887,1.792,891,1.941,895,3.491,897,2.141,1034,2.635,1196,1.941,1199,1.941,1243,1.792,1253,3.372,1264,2.479,1280,2.141,1281,2.141,1282,3.85,1283,2.445,1284,2.445,1285,3.85,1286,2.445,1287,2.445,1288,3.85,1289,2.445,1290,2.445,1291,2.445,1292,2.445,1293,2.445,1294,2.445,1295,2.445,1296,3.85,1297,2.445,1298,2.445,1299,2.445,1300,3.85,1301,2.445,1302,3.85,1303,2.445,1304,2.445,1305,1.941,1306,3.058]],["title/classes/Role.html",[30,0.212,279,1.537]],["body/classes/Role.html",[3,0.095,4,0.107,5,0.072,7,0.225,8,0.012,29,0.17,30,0.204,34,0.007,35,0.007,67,1.088,71,2.048,72,1.432,73,1.088,74,1.432,75,1.441,112,1.344,116,0.365,119,0.909,122,0.912,136,1.54,141,0.733,142,0.929,192,1.19,237,1.185,271,1.358,275,3.384,278,1.399,279,2.043,303,2.587,396,1.857,416,2.501,420,2.587,470,2.063,485,0.884,487,2.679,488,2.777,489,4.412,491,2.89,494,3.65,503,2.138,504,2.954,506,2.368,508,2.138,532,3.54,546,3.606,604,2.992,650,2.048,654,3.22,655,2.61,660,3.22,675,2.61,821,3.908,824,4.346,1228,3.606,1229,4.107,1307,2.973,1308,4.055,1309,4.055,1310,4.055,1311,4.055,1312,4.055,1313,4.055,1314,4.055,1315,4.055,1316,4.055,1317,3.552,1318,4.055]],["title/controllers/RoleController.html",[0,1.236,1319,3.09]],["body/controllers/RoleController.html",[0,1.054,2,1.054,3,0.085,4,0.095,5,0.064,7,0.247,8,0.012,11,2.598,15,0.595,29,0.095,30,0.181,33,1.499,34,0.007,35,0.007,73,0.963,108,1.918,116,0.323,117,1.509,119,0.793,121,2.037,122,0.989,127,1.742,135,2.867,136,1.343,138,2.09,140,2.302,141,0.793,142,0.764,143,2.099,146,2.187,163,1.653,165,3.314,167,2.837,171,1.742,175,2.078,176,1.814,180,1.894,181,1.554,201,1.981,279,2.867,286,2.422,313,1.464,330,2.508,331,2.309,332,2.147,338,1.612,339,3.995,340,2.945,341,2.312,342,2.712,344,2.309,345,1.612,346,2.312,347,3.029,349,1.499,350,2.078,352,1.814,354,2.187,356,1.981,357,2.078,358,2.225,361,1.499,363,1.499,368,1.674,370,2.458,372,2.187,373,2.187,374,2.187,376,2.078,377,2.187,379,2.187,380,2.078,381,2.458,383,2.078,384,2.078,385,2.078,598,4.651,746,1.981,847,2.633,861,2.458,1319,3.77,1320,3.146,1321,3.146,1322,3.146,1323,3.591,1324,3.591,1325,3.591,1326,3.591,1327,5.207,1328,3.591,1329,3.146,1330,4.084,1331,3.591,1332,3.591,1333,3.591,1334,3.591,1335,3.591,1336,3.591,1337,3.591]],["title/modules/RoleModule.html",[36,1.034,57,2.713]],["body/modules/RoleModule.html",[2,1.968,3,0.125,4,0.141,5,0.095,7,0.258,8,0.012,15,0.883,29,0.141,30,0.268,34,0.009,35,0.009,36,1.802,38,2.224,39,2.305,40,2.484,41,2.484,42,2.305,43,3.423,44,3.423,57,5.3,60,3.127,61,2.484,62,2.484,64,2.484,66,2.809,67,1.429,141,0.608,165,4.72,279,1.943,394,2.938,396,1.766,655,4.318,661,3.646,1319,5.383,1329,4.666,1338,4.666,1339,4.666,1340,4.666,1341,5.327,1342,5.327,1343,4.666]],["title/injectables/RoleService.html",[113,0.892,165,2.325]],["body/injectables/RoleService.html",[3,0.061,4,0.068,5,0.046,7,0.235,8,0.012,15,0.426,29,0.068,30,0.129,31,1.614,32,1.154,34,0.005,35,0.005,36,0.631,67,0.689,72,0.908,73,1.489,74,0.908,75,1.105,94,3.478,96,3.851,97,2.846,102,3.021,108,1.663,113,0.847,114,0.969,116,0.231,117,1.175,119,0.728,121,1.766,122,0.886,135,2.637,138,1.788,140,2.114,141,0.866,142,0.701,143,1.927,144,2.701,163,2.139,165,2.208,176,1.298,192,2.225,194,3.06,257,1.154,258,1.198,262,1.487,271,1.409,275,3.173,278,1.072,279,1.794,286,1.614,299,1.418,303,1.036,305,1.418,306,1.418,307,3.51,308,1.487,309,1.487,313,1.14,325,2.846,330,1.671,331,1.797,332,1.671,338,1.797,340,2.208,344,2.208,345,1.797,347,2.725,349,1.671,352,2.023,358,1.112,361,1.073,363,1.073,399,3.063,403,2.325,409,1.418,411,1.565,412,1.487,413,1.487,416,2.164,420,1.036,423,1.565,424,1.565,425,1.565,426,1.565,427,1.565,428,1.565,429,1.565,430,2.438,431,2.438,433,2.438,434,1.565,435,2.438,437,1.565,438,1.565,439,1.565,440,1.565,441,1.565,442,2.438,443,1.565,444,1.565,445,1.565,446,1.565,447,1.565,448,1.565,450,2.995,451,4.308,459,2.995,467,2.577,470,0.826,487,1.073,532,3.063,573,1.654,574,1.759,598,4.104,650,1.298,667,3.18,675,1.654,676,2.935,682,2.041,695,2.041,699,3.906,717,2.577,883,2.041,933,4.41,1034,1.759,1086,2.74,1196,2.041,1199,2.041,1305,2.041,1306,2.041,1322,3.507,1327,4.711,1330,3.18,1343,2.251,1344,2.251,1345,2.57,1346,2.57,1347,2.57,1348,2.57,1349,2.57,1350,2.57,1351,2.57,1352,2.251,1353,4.004,1354,2.57,1355,2.57,1356,2.57,1357,2.57,1358,2.57,1359,4.004,1360,2.57,1361,2.57,1362,2.57,1363,2.57,1364,2.57,1365,2.57]],["title/classes/Subscriber.html",[30,0.212,980,2.439]],["body/classes/Subscriber.html",[3,0.1,4,0.112,5,0.076,7,0.213,8,0.012,29,0.174,30,0.213,34,0.008,35,0.008,67,1.138,71,2.143,72,1.498,73,1.138,74,1.498,75,1.476,112,2.179,116,0.382,119,0.906,122,0.953,136,1.534,141,0.75,142,0.926,192,1.245,237,1.223,271,1.391,278,1.66,303,2.649,396,1.916,420,2.649,470,2.112,485,0.925,487,2.743,488,2.843,489,4.392,491,2.945,494,3.465,499,3.11,503,2.237,506,2.248,508,2.237,509,1.323,537,3.465,821,4.002,824,4.407,980,3.343,981,2.904,1037,2.904,1366,3.11,1367,4.243,1368,4.243,1369,4.243,1370,4.243,1371,4.243,1372,4.243,1373,4.243,1374,4.243,1375,5.061,1376,3.716,1377,4.243]],["title/controllers/SubscribersController.html",[0,1.236,1378,3.09]],["body/controllers/SubscribersController.html",[0,1.017,2,1.017,3,0.139,4,0.092,5,0.062,7,0.239,8,0.012,11,2.533,15,0.575,29,0.092,30,0.174,33,1.447,34,0.007,35,0.007,73,0.93,108,1.972,116,0.312,117,1.471,119,0.815,121,2.094,122,0.969,127,1.681,135,2.939,136,1.381,138,2.101,140,2.367,141,0.815,142,0.785,143,2.158,167,3.249,171,1.681,176,1.752,180,1.828,181,1.5,201,1.912,286,2.375,313,1.677,330,2.459,331,2.251,332,2.093,338,1.556,339,3.931,340,2.897,341,2.232,342,2.644,344,2.251,345,1.556,346,2.232,347,2.841,349,1.447,350,2.006,356,2.766,357,2.006,358,2.17,361,1.447,363,1.447,368,1.616,372,2.112,373,2.112,374,2.112,376,2.006,377,2.112,380,2.006,383,2.006,384,2.006,385,2.006,537,1.828,608,4.595,746,1.912,847,2.542,861,2.373,980,4.512,995,3.037,1378,3.676,1379,3.037,1380,5.015,1381,3.037,1382,3.467,1383,3.467,1384,3.467,1385,3.467,1386,3.467,1387,5.015,1388,3.467,1389,3.467,1390,3.467,1391,3.037,1392,4.885,1393,3.467,1394,3.467,1395,3.792,1396,3.037,1397,3.982,1398,4.678,1399,3.467,1400,3.467,1401,3.467,1402,3.467,1403,3.467,1404,3.467,1405,3.467,1406,3.467,1407,3.467,1408,3.467,1409,3.467]],["title/modules/SubscribersModule.html",[36,1.034,58,2.884]],["body/modules/SubscribersModule.html",[2,1.997,3,0.128,4,0.144,5,0.097,7,0.259,8,0.012,15,0.904,29,0.144,30,0.274,34,0.009,35,0.009,36,1.821,38,2.276,39,2.358,40,2.541,41,2.541,42,2.358,43,3.459,44,2.541,58,5.582,60,3.173,61,2.541,62,2.541,64,2.541,66,2.874,67,1.462,141,0.622,394,3.007,396,1.807,980,3.154,1037,4.657,1051,4.775,1378,5.44,1395,5.251,1396,4.775,1410,4.775,1411,4.775,1412,5.451,1413,5.451,1414,4.775]],["title/injectables/SubscribersService.html",[113,0.892,1395,2.713]],["body/injectables/SubscribersService.html",[3,0.064,4,0.071,5,0.048,7,0.233,8,0.012,15,0.447,29,0.071,30,0.136,31,1.676,32,1.211,34,0.006,35,0.006,67,0.724,72,0.953,73,1.36,74,0.953,75,1.139,94,2.879,96,3.92,97,2.935,102,3.12,108,1.797,112,0.895,113,0.88,114,1.017,116,0.243,117,1.22,119,0.774,121,1.908,122,0.85,135,2.796,138,1.885,140,2.246,141,0.819,142,0.745,143,2.049,144,2.919,163,1.832,176,1.363,192,2.15,194,3.027,257,1.211,258,1.258,262,2.406,271,1.434,278,1.626,286,1.676,299,1.488,303,1.088,305,1.488,306,1.488,307,3.005,308,1.561,309,1.561,313,1.184,325,2.935,330,1.736,331,1.866,332,1.736,338,1.866,340,2.277,344,2.277,345,1.866,347,2.554,349,1.736,358,1.167,361,1.127,363,1.127,399,3.144,403,2.372,409,1.488,411,1.643,412,1.561,413,1.561,420,1.088,423,1.643,424,1.643,425,1.643,426,1.643,427,1.643,428,1.643,429,1.643,430,2.532,431,2.532,433,2.532,434,1.643,435,2.532,437,2.532,438,1.643,439,1.643,440,1.643,441,1.643,442,2.532,443,1.643,444,1.643,445,1.643,446,1.643,447,1.643,448,1.643,450,2.532,459,3.471,467,2.677,470,0.867,487,1.127,537,2.675,608,4.186,717,1.737,822,1.211,980,3.298,981,1.847,988,2.364,989,3.642,1086,1.847,1198,2.364,1381,3.642,1391,3.642,1392,4.45,1395,2.677,1397,3.302,1414,2.364,1415,2.364,1416,4.158,1417,2.698,1418,2.698,1419,2.698,1420,2.698,1421,2.698,1422,4.158,1423,2.698,1424,2.698,1425,2.698,1426,4.158,1427,5.072,1428,2.698,1429,2.698,1430,2.698,1431,2.698,1432,4.158,1433,4.158,1434,4.158,1435,2.698,1436,2.698]],["title/injectables/TransformInterceptor.html",[113,0.892,1220,3.09]],["body/injectables/TransformInterceptor.html",[3,0.117,4,0.131,5,0.088,7,0.252,8,0.012,15,0.823,28,3.022,29,0.17,30,0.25,31,2.001,34,0.008,35,0.008,108,1.371,113,1.357,114,1.87,116,0.447,117,1.881,119,0.732,121,1.456,122,0.588,140,2.126,141,0.732,142,0.705,143,1.939,146,3.022,368,2.314,403,1.81,452,2.061,679,3.638,818,3.195,905,4.347,906,6.323,909,5.504,911,4.701,916,3.638,922,3.941,1210,3.941,1211,5.641,1212,5.616,1213,5.616,1214,6.576,1215,6.222,1216,3.941,1217,4.347,1218,4.347,1219,3.638,1220,4.701,1221,6.222,1222,6.222,1223,4.347,1224,4.347,1225,4.347,1226,4.347,1437,4.963,1438,4.963,1439,4.963]],["title/classes/UpdateCompanyDto.html",[30,0.212,353,2.713]],["body/classes/UpdateCompanyDto.html",[3,0.13,4,0.146,5,0.098,7,0.253,8,0.012,29,0.146,30,0.393,34,0.009,35,0.009,116,0.497,119,0.631,122,0.813,136,1.068,142,0.821,143,2.075,237,1.452,271,1.169,278,1.204,313,1.572,334,3.195,353,4.417,362,4.049,470,2.399,485,1.204,493,3.259,513,3.779,521,3.618,522,3.48,523,1.67,524,2.305,811,2.79,812,2.678,813,2.678,816,2.968,1440,5.449,1441,6.01,1442,5.523,1443,5.523]],["title/classes/UpdateFileDto.html",[30,0.212,728,2.884]],["body/classes/UpdateFileDto.html",[3,0.148,4,0.166,5,0.112,7,0.241,8,0.011,29,0.166,30,0.316,34,0.01,35,0.01,313,1.788,485,1.369,525,4.043,527,4.988,728,5.076,743,4.988,811,3.173,812,3.045,813,3.045,816,3.209,1444,5.501,1445,7.417]],["title/classes/UpdateJobDto.html",[30,0.212,854,2.884]],["body/classes/UpdateJobDto.html",[3,0.135,4,0.152,5,0.102,7,0.246,8,0.011,29,0.152,30,0.353,34,0.009,35,0.009,116,0.516,119,0.655,122,0.832,136,1.109,142,0.631,237,1.486,271,1.606,313,1.632,347,2.646,452,1.843,485,1.25,509,2.189,514,2.896,520,2.646,523,1.734,528,3.492,530,4.203,811,2.896,812,2.78,813,2.78,816,3.038,822,3.152,854,4.805,858,4.553,1446,6.15,1447,7.021,1448,5.733]],["title/classes/UpdatePermissionDto.html",[30,0.212,1165,2.884]],["body/classes/UpdatePermissionDto.html",[3,0.148,4,0.166,5,0.112,7,0.241,8,0.011,29,0.166,30,0.316,34,0.01,35,0.01,313,1.788,485,1.369,570,4.043,572,4.988,811,3.173,812,3.045,813,3.045,816,3.209,1165,5.076,1169,4.988,1449,5.501,1450,7.417]],["title/classes/UpdateResumeDto.html",[30,0.212,815,2.567]],["body/classes/UpdateResumeDto.html",[3,0.117,4,0.132,5,0.089,7,0.252,8,0.012,29,0.132,30,0.391,34,0.009,35,0.009,75,1.442,116,0.448,119,0.568,122,0.761,136,0.962,142,0.827,237,1.359,271,1.053,278,1.085,313,1.416,452,2.064,470,2.415,485,1.085,488,2.152,491,2.077,506,1.702,509,1.551,514,2.513,520,3.055,523,1.504,524,2.077,555,3.951,557,3.03,562,3.542,567,3.922,579,2.744,581,3.202,584,2.744,587,3.503,589,2.882,650,2.513,807,5.132,808,4.708,811,2.513,812,2.412,813,2.412,814,3.404,815,3.911,816,2.778,817,5.1,1451,4.975,1452,4.975]],["title/classes/UpdateRoleDto.html",[30,0.212,1327,2.884]],["body/classes/UpdateRoleDto.html",[3,0.148,4,0.166,5,0.112,7,0.241,8,0.011,29,0.166,30,0.316,34,0.01,35,0.01,313,1.788,485,1.369,598,4.043,600,4.988,811,3.173,812,3.045,813,3.045,816,3.209,1327,5.076,1330,4.988,1453,5.501,1454,7.417]],["title/classes/UpdateSubscriberDto.html",[30,0.212,1392,2.884]],["body/classes/UpdateSubscriberDto.html",[3,0.148,4,0.166,5,0.112,7,0.241,8,0.011,29,0.166,30,0.316,34,0.01,35,0.01,313,1.788,485,1.369,608,4.043,610,4.988,811,3.173,812,3.045,813,3.045,816,3.209,1392,5.076,1397,4.988,1455,5.501,1456,7.417]],["title/classes/UpdateUserDto.html",[30,0.212,1457,2.884]],["body/classes/UpdateUserDto.html",[3,0.132,4,0.148,5,0.1,7,0.244,8,0.012,29,0.148,30,0.348,34,0.009,35,0.009,116,0.504,119,0.639,122,0.819,136,1.082,138,1.749,142,0.616,174,3.83,192,2.029,237,1.464,271,1.589,313,1.593,347,2.607,452,1.799,485,1.22,509,2.156,514,2.827,520,2.607,523,1.692,620,3.087,622,3.603,624,3.647,811,3.793,812,2.714,813,2.714,816,2.993,1457,4.734,1458,6.059,1459,6.917,1460,5.596,1461,5.596]],["title/classes/UpdatedBy.html",[30,0.212,470,1.355]],["body/classes/UpdatedBy.html",[3,0.116,4,0.131,5,0.088,7,0.252,8,0.012,29,0.131,30,0.391,34,0.008,35,0.008,75,1.436,116,0.445,119,0.73,122,0.839,136,1.236,142,0.854,237,1.353,271,1.5,278,1.545,313,1.406,452,2.055,470,2.495,485,1.077,488,2.137,491,2.062,506,2.187,509,1.54,520,3.091,523,1.494,524,2.062,557,3.008,562,3.526,567,3.909,579,2.725,581,3.18,584,2.725,587,2.98,589,2.869,650,2.495,807,4.843,808,5.196,811,2.495,812,2.395,813,2.395,814,3.38,815,3.008,816,2.137,817,3.923,1462,4.94,1463,4.94,1464,4.94]],["title/classes/User.html",[30,0.212,138,1.065]],["body/classes/User.html",[3,0.083,4,0.094,5,0.063,7,0.224,8,0.012,29,0.158,30,0.3,34,0.007,35,0.007,67,0.949,71,1.787,72,1.249,73,0.949,74,1.249,75,1.338,112,2.455,116,0.319,119,0.915,122,0.977,136,1.55,138,1.286,141,0.744,142,0.927,192,1.038,208,4.077,237,1.077,255,2.047,271,1.077,278,1.505,279,2.376,303,1.426,336,1.801,396,1.687,403,1.855,415,2.777,420,2.402,470,1.915,485,0.771,487,2.487,488,1.53,489,4.413,491,2.124,493,3.375,494,3.639,499,3.729,503,1.865,504,2.682,506,2.361,507,2.277,508,1.865,509,1.857,523,1.07,589,2.283,623,3.447,624,3.141,650,1.787,651,2.277,656,2.277,661,2.421,673,2.277,705,4.731,821,2.154,824,2.943,1228,3.275,1229,3.729,1465,2.421,1466,3.537,1467,3.537,1468,3.537,1469,3.537,1470,3.537,1471,3.537,1472,3.537,1473,3.537,1474,3.537,1475,3.537,1476,3.537,1477,3.537,1478,3.537,1479,2.809,1480,3.098]],["title/classes/UserLoginDto.html",[30,0.212,172,2.567]],["body/classes/UserLoginDto.html",[3,0.098,4,0.11,5,0.074,7,0.227,8,0.012,29,0.172,30,0.38,33,3.157,34,0.008,35,0.008,75,1.277,116,0.373,119,0.649,122,0.989,136,1.099,138,1.766,141,0.798,142,0.768,161,2.285,172,3.462,181,1.792,237,1.203,255,4.235,271,0.877,278,1.415,279,2.548,336,2.112,396,1.373,403,2.073,415,3.026,416,2.722,452,2.489,485,0.903,506,1.945,509,2.357,520,3.19,521,2.997,522,3.026,523,1.253,524,1.729,544,2.184,565,2.667,566,3.289,567,3.136,589,2.913,595,3.462,597,2.523,620,2.285,621,4.442,622,2.667,623,3.755,624,4.158,633,3.037,635,4.758,636,3.89,637,4.168,638,4.168,1481,5.685,1482,4.143,1483,4.143]],["title/classes/UserRef.html",[30,0.212,493,1.759]],["body/classes/UserRef.html",[3,0.122,4,0.138,5,0.092,7,0.214,8,0.012,29,0.138,30,0.384,34,0.009,35,0.009,116,0.468,119,0.754,122,0.981,136,1.277,141,0.754,142,0.798,237,1.397,271,1.536,278,1.582,334,3.006,336,2.309,415,3.078,416,2.573,417,3.642,452,2.455,485,1.133,493,2.756,509,2.381,512,5.764,513,3.556,520,2.971,521,2.739,522,3.9,523,1.571,524,2.169,1484,5.196,1485,5.196]],["title/classes/UserRef-1.html",[30,0.177,94,1.778,493,1.469]],["body/classes/UserRef-1.html",[3,0.128,4,0.144,5,0.097,7,0.252,8,0.012,29,0.144,30,0.39,34,0.009,35,0.009,116,0.488,119,0.775,122,0.919,136,1.312,142,0.853,237,1.436,271,1.567,278,1.614,313,1.544,334,3.138,353,3.491,362,3.976,470,1.743,485,1.182,493,3.238,513,3.711,521,3.577,522,3.723,523,1.64,524,2.264,811,2.74,812,2.63,813,2.63,816,2.346,1440,5.879,1441,4.75,1486,5.423,1487,5.423]],["title/classes/UserRef-2.html",[30,0.177,493,1.469,1488,2.795]],["body/classes/UserRef-2.html",[3,0.114,4,0.128,5,0.086,7,0.227,8,0.012,29,0.186,30,0.317,34,0.008,35,0.008,67,1.294,71,2.438,72,1.704,73,1.294,74,1.704,75,1.574,112,2.088,116,0.435,119,0.719,122,0.967,136,1.218,141,0.551,142,0.898,192,1.416,237,1.333,271,1.483,278,1.528,303,1.946,336,1.459,392,3.303,396,2.088,410,3.303,415,2.25,416,1.881,417,2.662,420,1.946,470,1.551,485,1.052,486,3.303,487,2.015,488,2.088,489,4.45,491,2.629,493,3.407,494,3.32,503,2.545,504,3.32,505,4.227,506,1.651,507,4.054,508,2.545,509,1.504,510,3.833,511,4.227,1228,3.107,1489,4.826,1490,4.826]],["title/classes/UserRef-3.html",[30,0.177,493,1.469,1491,3.52]],["body/classes/UserRef-3.html",[3,0.103,4,0.116,5,0.078,7,0.232,8,0.012,29,0.177,30,0.336,34,0.008,35,0.008,67,1.171,71,2.206,72,1.542,73,1.171,74,1.542,75,1.498,112,2.367,116,0.393,119,0.673,122,0.984,136,1.139,141,0.673,142,0.899,192,1.281,237,1.247,257,1.96,271,1.511,278,1.454,303,1.76,336,1.32,396,1.953,403,1.592,416,1.701,417,2.408,420,1.76,470,1.403,485,0.952,487,1.823,488,1.889,489,4.491,491,2.98,493,3.333,494,3.106,503,2.302,504,3.106,506,2.016,507,3.793,508,2.302,509,1.836,523,1.32,531,2.988,532,2.408,533,2.988,534,2.988,535,2.988,536,2.811,537,2.302,538,2.988,546,3.793,589,1.96,650,2.206,822,1.96,823,2.988,824,2.526,839,2.811,840,2.811,841,3.467,842,3.824,1228,2.811,1492,4.366,1493,4.366]],["title/classes/UserRef-4.html",[30,0.177,493,1.469,1494,3.52]],["body/classes/UserRef-4.html",[3,0.102,4,0.115,5,0.077,7,0.241,8,0.012,29,0.176,30,0.334,34,0.008,35,0.008,67,1.161,71,2.187,72,1.529,73,1.161,74,1.529,75,1.491,112,2.359,116,0.39,119,0.669,122,0.983,136,1.133,138,1.095,141,0.669,142,0.898,192,1.27,208,2.963,237,1.24,255,2.505,271,1.506,278,1.621,279,2.137,303,1.746,336,1.309,396,1.942,403,1.579,415,2.019,420,1.746,470,1.392,485,0.944,487,1.808,488,1.873,489,4.451,491,2.446,493,3.327,494,3.089,503,2.283,504,3.089,506,2.434,507,3.772,508,2.283,509,2.07,523,1.309,589,2.63,623,2.505,624,2.283,650,2.187,651,2.788,656,2.788,661,2.963,673,2.788,705,3.439,824,2.505,1228,2.788,1229,3.174,1465,2.963,1479,3.439,1480,3.793,1495,4.33,1496,4.33]],["title/controllers/UsersController.html",[0,1.236,1497,3.09]],["body/controllers/UsersController.html",[0,1.022,2,1.022,3,0.139,4,0.092,5,0.062,7,0.245,8,0.012,11,2.542,13,2.243,15,0.578,22,2.385,25,2.122,27,2.984,28,2.122,29,0.092,30,0.175,33,1.455,34,0.007,35,0.007,73,0.935,102,3.114,108,1.896,116,0.314,117,1.476,119,0.783,121,2.013,122,0.969,127,1.69,135,2.689,136,1.327,138,2.127,140,2.275,141,0.783,142,0.755,143,2.075,144,2.904,163,1.618,167,1.922,171,1.69,174,3.444,180,1.837,181,1.508,194,2.556,201,1.922,245,3.258,271,0.737,286,2.029,300,2.767,302,3.052,303,1.405,304,3.052,313,1.433,330,2.466,332,2.101,338,1.564,339,3.94,340,2.904,341,2.243,342,2.653,344,2.259,347,2.844,349,1.455,350,2.016,354,2.122,356,1.922,357,2.016,358,2.177,361,1.455,363,1.455,364,2.767,367,2.767,368,1.624,370,2.385,372,2.122,373,2.122,374,2.122,376,2.016,379,2.122,380,2.016,383,2.016,384,2.016,385,2.016,620,3.944,851,3.052,861,2.385,865,4.408,877,3.997,883,2.767,1457,4.893,1497,3.689,1498,3.052,1499,3.052,1500,3.052,1501,3.484,1502,3.484,1503,3.484,1504,3.484,1505,3.484,1506,3.052,1507,3.484,1508,3.052,1509,3.052,1510,3.484,1511,3.484,1512,3.484,1513,3.484,1514,3.484,1515,3.484,1516,3.484,1517,3.484,1518,3.484]],["title/modules/UsersModule.html",[36,1.034,59,2.567]],["body/modules/UsersModule.html",[2,1.925,3,0.121,4,0.136,5,0.092,7,0.261,8,0.012,15,0.853,29,0.136,30,0.259,34,0.009,35,0.009,36,1.773,38,2.148,39,2.226,40,2.399,41,2.399,42,2.226,43,3.368,44,3.368,59,4.975,60,3.059,61,2.399,62,2.399,64,2.399,66,2.713,67,1.38,138,1.301,141,0.749,245,4.697,279,1.876,394,2.838,396,2.176,651,4.224,655,4.224,656,3.312,659,4.506,661,3.521,1497,5.297,1508,4.506,1519,4.506,1520,5.145,1521,4.506,1522,5.145,1523,5.145,1524,4.506]],["title/injectables/UsersService.html",[113,0.892,245,2.325]],["body/injectables/UsersService.html",[3,0.044,4,0.05,5,0.034,7,0.231,8,0.012,9,3.394,10,1.039,15,0.312,29,0.05,30,0.095,31,1.258,32,1.792,34,0.004,35,0.004,67,0.505,72,0.666,73,1.245,74,0.666,75,0.897,94,2.964,96,3.394,97,2.31,102,3.119,108,1.813,113,0.66,114,0.71,116,0.17,117,0.915,119,0.785,121,1.867,122,0.926,135,2.14,138,1.964,140,2.175,141,0.854,142,0.722,143,1.983,144,2.633,161,2.56,163,2.046,174,2.135,192,2.213,194,3.201,208,3.176,237,0.66,242,2.478,245,1.721,250,2.733,256,3.686,257,1.792,258,1.861,262,1.09,269,1.382,271,1.347,277,1.497,278,1.527,279,2.238,286,1.258,299,2.202,300,3.686,305,2.202,306,2.202,307,3.356,308,2.31,309,2.31,313,0.888,325,1.805,330,1.302,331,2.308,332,1.302,336,0.943,338,1.4,340,1.792,342,0.994,344,1.792,345,1.4,347,2.536,349,1.302,358,0.815,361,0.787,363,0.787,399,3.236,403,2.021,409,1.039,411,1.148,412,1.09,413,1.09,415,2.164,423,1.148,424,1.148,425,1.148,426,1.148,427,1.148,428,1.148,429,1.148,430,1.9,431,1.9,433,1.9,434,1.148,435,1.9,437,1.148,438,1.148,439,1.148,440,1.148,441,1.148,442,2.431,443,1.148,444,1.148,445,1.148,446,1.148,447,1.148,448,2.431,450,1.9,453,2.135,459,1.9,467,2.008,470,0.606,487,0.787,620,3.057,623,2.685,624,2.922,656,1.213,667,3.17,673,1.213,675,1.213,678,2.287,682,1.497,699,1.497,713,1.651,717,2.008,887,1.382,891,1.497,895,2.287,1034,2.732,1086,2.135,1305,3.17,1306,3.686,1352,1.651,1457,3.792,1500,2.733,1506,2.733,1509,1.651,1524,1.651,1525,1.651,1526,3.992,1527,3.992,1528,3.992,1529,3.12,1530,3.992,1531,1.884,1532,1.884,1533,3.12,1534,1.884,1535,6.137,1536,1.884,1537,3.12,1538,1.884,1539,1.884,1540,3.12,1541,1.884,1542,1.884,1543,3.12,1544,1.884,1545,1.884,1546,1.884,1547,1.884,1548,1.884,1549,1.884,1550,1.884,1551,1.884,1552,1.651,1553,1.884,1554,1.884,1555,3.12,1556,1.884,1557,1.884,1558,1.884,1559,1.884,1560,1.884,1561,4.641,1562,3.12,1563,3.12,1564,3.12,1565,3.12,1566,1.884,1567,4.641,1568,1.884,1569,1.884,1570,1.884,1571,1.884,1572,3.992,1573,1.884,1574,1.884,1575,1.884,1576,3.12,1577,1.884,1578,1.884,1579,1.884,1580,1.884,1581,1.884,1582,1.884,1583,1.884,1584,1.884]],["title/classes/company.html",[30,0.212,336,1.274]],["body/classes/company.html",[3,0.096,4,0.108,5,0.072,7,0.209,8,0.012,29,0.108,30,0.349,34,0.007,35,0.007,75,1.261,112,1.35,116,0.367,119,0.734,122,0.965,136,1.244,141,0.831,142,0.8,163,1.805,237,1.189,258,2.618,271,1.361,336,2.199,403,1.485,416,2.189,417,3.547,452,2.704,485,0.887,491,2.894,506,1.922,509,2.515,520,3.184,522,2.998,523,1.231,524,1.699,528,2.479,529,5.506,530,2.984,531,4.401,532,3.547,533,3.844,534,4.401,535,3.844,536,3.616,537,3.656,538,4.401,544,2.961,546,3.616,557,3.42,558,3.565,561,5.633,562,3.098,563,4.919,564,5.633,565,3.616,566,3.25,567,3.098,568,2.984,569,4.919,1585,4.07,1586,4.07,1587,4.07]],["title/classes/company-1.html",[30,0.177,94,1.778,336,1.064]],["body/classes/company-1.html",[3,0.1,4,0.112,5,0.076,7,0.229,8,0.012,29,0.174,30,0.383,33,2.412,34,0.008,35,0.008,75,1.298,116,0.382,119,0.66,122,0.987,136,1.118,138,1.461,141,0.87,142,0.776,161,2.34,172,2.584,181,1.836,237,1.223,255,3.343,271,1.391,278,1.433,279,2.573,336,2.232,396,1.407,403,2.108,415,3.064,416,2.252,452,2.505,485,0.925,506,2.248,509,2.374,520,3.221,521,3.047,522,3.064,523,1.283,524,1.771,544,2.237,565,2.731,566,3.343,567,3.187,589,2.949,595,3.519,597,2.584,620,2.34,621,4.497,622,2.731,623,3.802,624,3.892,633,3.11,635,4.817,636,3.954,637,3.11,638,3.11,1588,4.243,1589,4.243]],["title/coverage.html",[1590,5.038]],["body/coverage.html",[0,2.167,1,1.686,5,0.065,6,2.015,8,0.012,16,1.481,20,1.574,23,1.331,25,1.401,27,1.162,30,0.421,34,0.005,35,0.005,42,0.995,113,1.648,115,2.015,125,1.686,126,2.015,135,0.839,138,0.927,142,0.729,146,1.401,161,1.269,163,0.739,165,1.269,171,1.115,172,1.401,218,1.574,219,1.574,236,2.015,245,1.269,279,0.839,327,1.686,328,2.015,334,1.331,336,1.384,353,1.481,359,1.481,392,1.574,397,2.015,410,1.574,470,0.739,482,6.438,486,3.574,493,2.382,512,2.914,513,3.574,525,1.481,526,2.015,527,2.914,528,1.401,529,2.914,530,3.355,570,1.481,571,2.015,572,2.914,579,1.269,580,2.914,581,3.673,587,1.072,596,1.481,598,1.481,599,2.015,600,2.914,604,1.072,608,1.481,609,2.015,610,2.914,620,1.269,621,3.574,622,3.673,639,1.686,640,2.015,642,1.481,651,1.481,653,1.574,655,1.481,662,2.015,673,1.481,674,1.574,675,1.481,676,1.686,677,1.827,678,1.686,719,2.015,720,1.686,721,2.015,728,1.574,741,1.481,775,1.686,779,2.015,790,1.686,791,2.015,807,1.401,808,3.355,815,1.401,818,2.362,820,2.015,822,1.033,823,3.574,839,1.481,840,1.481,843,1.686,844,2.015,854,1.574,856,1.481,876,2.015,900,2.015,901,2.914,917,1.827,918,1.827,938,2.015,956,2.015,958,2.015,966,1.686,967,2.015,975,1.481,980,1.331,981,1.574,1037,1.574,1052,2.015,1053,2.015,1145,3.355,1157,1.686,1158,2.015,1165,1.574,1167,1.481,1182,2.015,1210,2.914,1219,1.686,1220,1.686,1227,3.355,1243,1.686,1245,1.686,1248,1.686,1249,2.015,1264,1.481,1281,2.015,1307,3.355,1319,1.686,1320,2.015,1327,1.574,1344,2.015,1366,3.355,1378,1.686,1379,2.015,1392,1.574,1395,1.481,1398,1.827,1415,2.015,1440,2.914,1444,2.015,1446,2.015,1449,2.015,1453,2.015,1455,2.015,1457,1.574,1458,2.015,1465,3.574,1497,1.686,1498,2.015,1525,2.015,1590,2.015,1591,2.3,1592,2.3,1593,2.3,1594,8.355,1595,6.38,1596,6.828,1597,5.222,1598,6.624,1599,7.148,1600,6.624,1601,4.576,1602,4.576,1603,7.722,1604,6.38,1605,4.008,1606,5.588,1607,2.3,1608,2.3,1609,2.015,1610,2.3,1611,4.576,1612,2.3,1613,2.3,1614,2.3]],["title/dependencies.html",[39,2.193,1615,3.083]],["body/dependencies.html",[8,0.012,10,2.75,15,0.827,19,3.037,30,0.324,34,0.009,35,0.009,39,2.157,67,1.337,72,1.761,73,1.337,74,1.761,75,1.444,86,3.96,88,3.96,170,3.96,175,2.885,181,2.157,224,3.96,227,3.96,289,4.368,358,2.157,412,2.885,413,2.885,523,1.508,524,2.082,745,3.656,799,3.96,812,2.418,813,2.418,916,3.656,947,5.654,948,4.368,978,3.656,979,3.96,1216,3.96,1552,4.368,1616,4.986,1617,7.119,1618,4.986,1619,4.986,1620,4.986,1621,4.986,1622,4.986,1623,4.986,1624,4.986,1625,4.986,1626,4.986,1627,4.986,1628,4.986,1629,4.986,1630,4.986,1631,4.986,1632,4.986,1633,4.986,1634,4.986,1635,4.986,1636,4.986,1637,4.986,1638,4.986,1639,4.986,1640,4.986,1641,4.986,1642,4.986,1643,4.986,1644,4.986,1645,4.986,1646,4.986,1647,4.986,1648,4.986,1649,4.986,1650,4.986,1651,4.986,1652,4.986,1653,4.986,1654,4.986,1655,4.986,1656,4.986]],["title/miscellaneous/functions.html",[1657,2.266,1658,4.44]],["body/miscellaneous/functions.html",[8,0.01,34,0.01,35,0.01,42,3.498,116,0.6,1609,5.831,1657,4.286,1658,5.831,1659,6.658]],["title/index.html",[116,0.317,1660,3.52,1661,3.52]],["body/index.html",[8,0.011,34,0.009,35,0.009,94,2.79,456,5.449,471,4.837,472,4.837,978,4.049,1065,4.837,1070,6.01,1075,6.01,1080,4.837,1100,4.837,1103,6.01,1105,6.01,1110,4.837,1488,4.386,1662,5.523,1663,5.523,1664,5.523,1665,6.861,1666,5.523,1667,5.523,1668,6.861,1669,6.861,1670,6.861,1671,5.523,1672,5.523,1673,6.861,1674,6.861,1675,8.183,1676,8.183,1677,5.523,1678,5.523,1679,5.523,1680,5.523,1681,5.523,1682,5.523,1683,5.523,1684,5.523,1685,5.523,1686,5.523,1687,5.523,1688,5.523,1689,5.523,1690,5.523,1691,5.523,1692,5.523,1693,5.523,1694,5.523]],["title/modules.html",[38,2.401]],["body/modules.html",[8,0.009,34,0.009,35,0.009,37,4.135,38,2.355,48,3.86,49,3.86,50,3.86,51,3.86,52,3.86,53,3.86,54,3.86,55,3.86,56,3.86,57,3.632,58,3.86,59,3.435,1014,7.551,1695,8.621,1696,8.621,1697,8.653,1698,5.641,1699,5.641]],["title/overview.html",[1700,5.038]],["body/overview.html",[2,1.097,8,0.012,16,3.955,23,4.355,34,0.007,35,0.007,36,0.917,37,6.318,38,1.561,39,1.617,40,1.743,41,1.743,42,1.617,43,1.743,44,1.743,45,3.274,46,3.274,47,3.274,48,5.626,49,5.01,50,5.352,51,4.825,52,4.204,53,5.01,54,4.825,55,4.825,56,4.825,57,4.845,58,4.825,59,4.682,60,2.467,61,1.743,62,1.743,114,1.409,165,4.151,214,3.274,216,3.274,217,3.274,218,4.204,219,4.204,245,4.241,359,4.845,387,3.274,388,3.274,389,3.274,485,0.815,642,3.955,645,3.274,647,3.274,741,3.955,769,3.274,770,3.274,819,2.969,856,4.845,868,3.274,869,3.274,870,3.274,975,3.955,1028,3.274,1029,3.274,1167,3.955,1177,3.274,1178,3.274,1264,3.955,1276,3.274,1277,3.274,1338,3.274,1339,3.274,1340,3.274,1395,3.955,1410,3.274,1411,3.274,1488,2.969,1519,3.274,1521,3.274,1700,3.274,1701,5.292,1702,3.738,1703,3.738]],["title/properties.html",[237,1.073,1615,3.083]],["body/properties.html",[8,0.011,34,0.01,35,0.01,237,1.4,1704,6.616,1705,6.616,1706,6.616,1707,6.616,1708,6.616,1709,6.616]],["title/miscellaneous/typealiases.html",[1657,2.266,1710,5.069]],["body/miscellaneous/typealiases.html",[8,0.01,34,0.01,35,0.01,116,0.549,142,0.671,410,4.988,486,4.174,504,4.259,673,4.692,674,4.988,675,4.692,823,4.174,839,4.692,981,4.988,1145,4.471,1227,4.471,1243,5.343,1307,4.471,1366,4.471,1375,5.342,1465,4.174,1657,3.926,1711,6.098,1712,5.342,1713,5.342,1714,5.342,1715,5.342,1716,5.342,1717,5.342,1718,5.342]],["title/miscellaneous/variables.html",[1657,2.266,1719,4.44]],["body/miscellaneous/variables.html",[3,0.088,5,0.058,8,0.012,11,2.774,14,0.761,27,1.001,34,0.003,35,0.003,36,1.893,73,1.608,108,0.547,112,0.657,116,0.1,122,0.49,128,2.961,138,1.583,141,0.881,142,0.455,144,0.499,157,0.883,158,0.815,163,1.329,171,0.961,192,0.326,239,0.974,241,0.974,242,0.883,257,2.862,258,2.973,271,1.763,275,1.966,277,6.125,278,1.681,279,1.36,286,1.807,303,3.109,313,0.763,329,3.283,336,0.983,342,2.18,347,2.403,356,2.472,392,1.356,420,3.109,452,0.637,468,0.883,482,5.654,486,0.761,488,3.337,510,0.883,573,4.965,574,5.278,584,0.613,587,1.738,604,1.516,651,1.275,653,1.356,655,1.275,676,1.452,677,1.573,678,1.452,695,0.883,701,6.755,722,3.283,822,1.459,823,0.761,840,1.275,841,0.883,845,2.961,909,0.815,917,1.573,918,1.573,919,0.815,920,0.974,953,6.125,1037,1.356,1085,2.346,1145,0.815,1155,0.974,1162,0.883,1211,0.883,1219,1.964,1227,0.815,1245,1.452,1246,0.974,1250,3.926,1307,0.815,1317,0.974,1321,3.266,1366,0.815,1376,0.974,1398,1.573,1465,0.761,1479,0.883,1499,3.266,1605,0.974,1606,0.974,1657,0.716,1712,0.974,1713,0.974,1714,0.974,1715,0.974,1716,0.974,1717,0.974,1718,0.974,1719,0.974,1720,2.678,1721,4.482,1722,1.112,1723,1.112,1724,7.712,1725,7.712,1726,7.712,1727,8.33,1728,8.33,1729,1.112,1730,5.049,1731,7.712,1732,1.112,1733,1.112,1734,1.112,1735,1.112,1736,1.112,1737,1.112,1738,1.112,1739,1.112,1740,1.112,1741,1.981,1742,5.282,1743,1.112,1744,4.134,1745,1.112,1746,2.678,1747,1.112,1748,1.112,1749,1.112,1750,1.112,1751,1.112,1752,5.282,1753,1.112,1754,1.112,1755,1.112,1756,2.678,1757,1.112,1758,1.112,1759,1.112,1760,1.981,1761,6.673,1762,1.112,1763,1.112,1764,2.678,1765,1.112,1766,1.112,1767,1.112,1768,1.981,1769,1.112,1770,1.112,1771,2.678,1772,1.112,1773,1.112,1774,1.112,1775,1.981,1776,6.836,1777,1.112,1778,1.112,1779,1.112,1780,1.112,1781,2.678,1782,1.112,1783,1.112,1784,1.112,1785,1.981,1786,1.112,1787,1.112,1788,2.678,1789,1.112,1790,1.112,1791,1.112,1792,1.981,1793,5.282,1794,1.112,1795,1.112,1796,2.678,1797,1.112,1798,1.112,1799,1.112,1800,1.112,1801,1.112,1802,1.112,1803,1.112,1804,1.112,1805,1.112,1806,1.112]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/Iuser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef.html":{},"classes/UserRef-1.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/company.html":{},"classes/company-1.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":482,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":1705,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1652,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":1632,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1631,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1647,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1594,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1602,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1607,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1611,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1608,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1595,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1599,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1598,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1601,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1596,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1600,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1597,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1612,"title":{},"body":{"coverage.html":{}}}],["04",{"_index":1728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":94,"title":{"classes/UserRef-1.html":{},"classes/company-1.html":{}},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["1.0.0",{"_index":1649,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":1638,"title":{},"body":{"dependencies.html":{}}}],["1.0.17",{"_index":1656,"title":{},"body":{"dependencies.html":{}}}],["1.2.1",{"_index":1620,"title":{},"body":{"dependencies.html":{}}}],["1.4.7",{"_index":1634,"title":{},"body":{"dependencies.html":{}}}],["1.8.1",{"_index":1616,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["10.0.3",{"_index":1619,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":1625,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":235,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["1024",{"_index":758,"title":{},"body":{"controllers/FilesController.html":{}}}],["11",{"_index":972,"title":{},"body":{"controllers/MailController.html":{}}}],["11:59",{"_index":994,"title":{},"body":{"controllers/MailController.html":{}}}],["123456",{"_index":638,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"classes/company-1.html":{}}}],["12345@gmail.com",{"_index":710,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["13",{"_index":1701,"title":{},"body":{"overview.html":{}}}],["18",{"_index":1702,"title":{},"body":{"overview.html":{}}}],["2",{"_index":1488,"title":{"classes/UserRef-2.html":{}},"body":{"index.html":{},"overview.html":{}}}],["2.1.3",{"_index":1644,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":1618,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":1628,"title":{},"body":{"dependencies.html":{}}}],["2.9.0",{"_index":1655,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":704,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["2025",{"_index":1727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28t19:58:05.681z",{"_index":1729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28t19:58:05.682z",{"_index":1730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28t19:58:05.683z",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28t19:58:05.685z",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28t19:58:05.686z",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28t19:58:05.688z",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28t19:58:05.689z",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":1491,"title":{"classes/UserRef-3.html":{}},"body":{}}],["3.0.1",{"_index":1623,"title":{},"body":{"dependencies.html":{}}}],["3.1.9",{"_index":1636,"title":{},"body":{"dependencies.html":{}}}],["36",{"_index":1703,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1494,"title":{"classes/UserRef-4.html":{}},"body":{}}],["4.0.1",{"_index":1648,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":1626,"title":{},"body":{"dependencies.html":{}}}],["4.7.7",{"_index":1640,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FilesController.html":{}}}],["5.4.0",{"_index":1627,"title":{},"body":{"dependencies.html":{}}}],["54321@gmail.com",{"_index":715,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["5mb",{"_index":759,"title":{},"body":{"controllers/FilesController.html":{}}}],["6",{"_index":973,"title":{},"body":{"controllers/MailController.html":{}}}],["6.10.3",{"_index":1630,"title":{},"body":{"dependencies.html":{}}}],["6.9.3",{"_index":1646,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["60)@apibody({type",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["680b6f9c52d64f6920662702",{"_index":1724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7d9",{"_index":1722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7da",{"_index":1732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7db",{"_index":1734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7dc",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7dd",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7de",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7df",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7e0",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7e1",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7e2",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7e3",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7e4",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7e5",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7e6",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7e7",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7e8",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7e9",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7ea",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7eb",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7ec",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7ed",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7ee",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7ef",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7f0",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7f1",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7f2",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7f3",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7f4",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7f5",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7f6",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7f7",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7f8",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7f9",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7fa",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7fb",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7fc",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7fd",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7fe",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede7ff",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede800",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["680fddcd99cf12d46fede801",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.4",{"_index":1624,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1653,"title":{},"body":{"dependencies.html":{}}}],["7.6.1",{"_index":1643,"title":{},"body":{"dependencies.html":{}}}],["7039",{"_index":1694,"title":{},"body":{"index.html":{}}}],["8.1.0",{"_index":1642,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":1622,"title":{},"body":{"dependencies.html":{}}}],["9.2.2",{"_index":1621,"title":{},"body":{"dependencies.html":{}}}],["9.4.0",{"_index":1617,"title":{},"body":{"dependencies.html":{}}}],["__v",{"_index":1731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"interfaces/Iuser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef.html":{},"classes/UserRef-1.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/company.html":{},"classes/company-1.html":{},"miscellaneous/variables.html":{}}}],["_id.tostring",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["access",{"_index":697,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{}}}],["access_token",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstokenninfo",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["action",{"_index":786,"title":{},"body":{"injectables/FilesService.html":{}}}],["adapter",{"_index":1047,"title":{},"body":{"modules/MailModule.html":{}}}],["addfiletypevalidator",{"_index":752,"title":{},"body":{"controllers/FilesController.html":{}}}],["addmaxsizevalidator",{"_index":756,"title":{},"body":{"controllers/FilesController.html":{}}}],["address",{"_index":415,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef.html":{},"classes/UserRef-2.html":{},"classes/UserRef-4.html":{},"injectables/UsersService.html":{},"classes/company-1.html":{}}}],["adds",{"_index":787,"title":{},"body":{"injectables/FilesService.html":{}}}],["admin",{"_index":695,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RoleService.html":{},"miscellaneous/variables.html":{}}}],["admin_role",{"_index":676,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RoleService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adminrole",{"_index":698,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["adminrole?._id",{"_index":709,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["again",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["age",{"_index":623,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef-4.html":{},"injectables/UsersService.html":{},"classes/company-1.html":{}}}],["alias",{"_index":1604,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1711,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":717,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["ang",{"_index":1104,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["api",{"_index":412,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["api/v1/auth/account",{"_index":1735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/auth/login",{"_index":1723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/auth/logout",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/auth/refresh",{"_index":1737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/auth/register",{"_index":1733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/companies",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/companies/:id",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/files",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/files/:id",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/files/upload",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs/:id",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions/:id",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/:id",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/by",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles/:id",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users/:id",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibody",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["apipath",{"_index":573,"title":{},"body":{"classes/CreatePermissionDto.html":{},"interfaces/Iuser.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"injectables/RoleService.html":{},"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":635,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"classes/company-1.html":{}}}],["apitags",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RoleController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('companies",{"_index":365,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["apitags('files",{"_index":747,"title":{},"body":{"controllers/FilesController.html":{}}}],["apitags('jobs",{"_index":859,"title":{},"body":{"controllers/JobsController.html":{}}}],["apitags('mail",{"_index":986,"title":{},"body":{"controllers/MailController.html":{}}}],["apitags('permissions",{"_index":1170,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["apitags('resumes",{"_index":1266,"title":{},"body":{"controllers/ResumesController.html":{}}}],["apitags('roles",{"_index":1331,"title":{},"body":{"controllers/RoleController.html":{}}}],["apitags('subscribers",{"_index":1399,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["apitags('users",{"_index":1510,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":1020,"title":{},"body":{"controllers/MailController.html":{}}}],["app.controller",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app/auth/jwt",{"_index":364,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/PermissionsController.html":{},"controllers/UsersController.html":{}}}],["app/companies/schemas/company.schema",{"_index":1242,"title":{},"body":{"classes/Resume.html":{}}}],["app/databases/example",{"_index":1352,"title":{},"body":{"injectables/RoleService.html":{},"injectables/UsersService.html":{}}}],["app/decorator/customize",{"_index":746,"title":{},"body":{"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RoleController.html":{},"controllers/SubscribersController.html":{}}}],["app/jobs/schemas/job.schema",{"_index":983,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Resume.html":{}}}],["app/permissions/schemas/permission.schema",{"_index":654,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/Role.html":{}}}],["app/roles/roles.module",{"_index":228,"title":{},"body":{"modules/AuthModule.html":{}}}],["app/roles/schemas/role.schema",{"_index":656,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/User.html":{},"classes/UserRef-4.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["app/subscribers/schemas/subscriber.schema",{"_index":982,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["app/users/schemas/user.schema",{"_index":652,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{}}}],["app/users/users.interface",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["app/users/users.module",{"_index":658,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["app/users/users.service",{"_index":657,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":37,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":16,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["aqp",{"_index":411,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["aqp(qs",{"_index":426,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["array",{"_index":557,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/company.html":{}}}],["array'})@isstring({each",{"_index":556,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["array'})@validatenested()@type(undefined",{"_index":1451,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["async",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"modules/MailModule.html":{},"miscellaneous/variables.html":{}}}],["auth.controller",{"_index":226,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/PermissionsController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":901,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:14",{"_index":907,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:18",{"_index":910,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:29",{"_index":913,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/jwt",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/local",{"_index":21,"title":{},"body":{"controllers/AppController.html":{}}}],["authcontroller",{"_index":125,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":902,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":957,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":48,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1708,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":23,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":1699,"title":{},"body":{"modules.html":{}}}],["await",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["b",{"_index":1109,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["badrequestexception",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('cannot",{"_index":1364,"title":{},"body":{"injectables/RoleService.html":{}}}],["badrequestexception('invalid",{"_index":451,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/RoleService.html":{}}}],["badrequestexception('permission",{"_index":1191,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["badrequestexception('role",{"_index":1353,"title":{},"body":{"injectables/RoleService.html":{}}}],["badrequestexception(`email",{"_index":1563,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestexception(`invalid",{"_index":895,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception(`you",{"_index":1580,"title":{},"body":{"injectables/UsersService.html":{}}}],["bao",{"_index":1139,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["basename",{"_index":1137,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["bcrypt",{"_index":1551,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.compare(plainpassword",{"_index":1559,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.gensalt(10",{"_index":1556,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.hash(password",{"_index":1557,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcryptjs",{"_index":1552,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["before",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["body",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RoleController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["body('status",{"_index":1273,"title":{},"body":{"controllers/ResumesController.html":{}}}],["boolean",{"_index":546,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/Job.html":{},"classes/Role.html":{},"classes/UserRef-3.html":{},"classes/company.html":{}}}],["boolean(isinit",{"_index":685,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["bootstrap",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RoleModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":1098,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["browse",{"_index":1697,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1695,"title":{},"body":{"modules.html":{}}}],["bson",{"_index":1629,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":760,"title":{},"body":{"controllers/FilesController.html":{}}}],["bước",{"_index":1662,"title":{},"body":{"index.html":{}}}],["bạn",{"_index":1678,"title":{},"body":{"index.html":{}}}],["bảo",{"_index":1131,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["c",{"_index":1100,"title":{},"body":{"injectables/MulterConfigService.html":{},"index.html":{}}}],["callhandler",{"_index":1214,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["can't",{"_index":1581,"title":{},"body":{"injectables/UsersService.html":{}}}],["canactivate",{"_index":903,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":908,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["case",{"_index":1090,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["catch",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["cb",{"_index":1117,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["cb(null",{"_index":1132,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["check",{"_index":793,"title":{},"body":{"controllers/HealthController.html":{},"injectables/JwtAuthGuard.html":{}}}],["chính",{"_index":1683,"title":{},"body":{"index.html":{}}}],["chưa",{"_index":1078,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["chạy",{"_index":1665,"title":{},"body":{"index.html":{}}}],["chối",{"_index":1111,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["class",{"_index":30,"title":{"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef.html":{},"classes/UserRef-1.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"classes/company.html":{},"classes/company-1.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef.html":{},"classes/UserRef-1.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/company.html":{},"classes/company-1.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":485,"title":{},"body":{"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef.html":{},"classes/UserRef-1.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"classes/company.html":{},"classes/company-1.html":{},"overview.html":{}}}],["clear",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["cluster_appmodule",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":214,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":217,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":215,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_companiesmodule",{"_index":387,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_companiesmodule_exports",{"_index":388,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_companiesmodule_providers",{"_index":389,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_databasesmodule",{"_index":645,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_databasesmodule_imports",{"_index":646,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["cluster_databasesmodule_providers",{"_index":647,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":769,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_providers",{"_index":770,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_jobsmodule",{"_index":868,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_exports",{"_index":869,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_providers",{"_index":870,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":1028,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":1029,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule",{"_index":1177,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule_providers",{"_index":1178,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_resumesmodule",{"_index":1276,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_resumesmodule_providers",{"_index":1277,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_rolemodule",{"_index":1338,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_exports",{"_index":1339,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_providers",{"_index":1340,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule",{"_index":1410,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule_providers",{"_index":1411,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1519,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1521,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1520,"title":{},"body":{"modules/UsersModule.html":{}}}],["companies",{"_index":329,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"miscellaneous/variables.html":{}}}],["companies.controller",{"_index":391,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["companies.service",{"_index":360,"title":{},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{}}}],["companies/companies.module",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["companiescontroller",{"_index":327,"title":{"controllers/CompaniesController.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"coverage.html":{}}}],["companiesmodule",{"_index":49,"title":{"modules/CompaniesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"modules.html":{},"overview.html":{}}}],["companiesservice",{"_index":359,"title":{"injectables/CompaniesService.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"coverage.html":{},"overview.html":{}}}],["company",{"_index":336,"title":{"classes/Company.html":{},"classes/company.html":{},"classes/company-1.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"injectables/UsersService.html":{},"classes/company.html":{},"classes/company-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["company.deletedby",{"_index":478,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["company.dto",{"_index":362,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UserRef-1.html":{}}}],["company.dto.ts",{"_index":513,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UserRef.html":{},"classes/UserRef-1.html":{},"coverage.html":{}}}],["company.dto.ts:11",{"_index":1487,"title":{},"body":{"classes/UserRef-1.html":{}}}],["company.dto.ts:15",{"_index":519,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:17",{"_index":1443,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts:19",{"_index":516,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:23",{"_index":517,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:27",{"_index":518,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:6",{"_index":1484,"title":{},"body":{"classes/UserRef.html":{}}}],["company.dto.ts:8",{"_index":1486,"title":{},"body":{"classes/UserRef-1.html":{}}}],["company.dto.ts:9",{"_index":1485,"title":{},"body":{"classes/UserRef.html":{}}}],["company.name",{"_index":395,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Resume.html":{}}}],["company.save",{"_index":466,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["company.updatedby",{"_index":460,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["companydocument",{"_index":410,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/UserRef-2.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["companyid",{"_index":582,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["companymodel",{"_index":401,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["companyschema",{"_index":392,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Company.html":{},"classes/UserRef-2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["companyschema.plugin(softdeleteplugin",{"_index":511,"title":{},"body":{"classes/Company.html":{},"classes/UserRef-2.html":{}}}],["comparepassword",{"_index":1558,"title":{},"body":{"injectables/UsersService.html":{}}}],["comparepasswords",{"_index":1528,"title":{},"body":{"injectables/UsersService.html":{}}}],["comparepasswords(plainpassword",{"_index":1534,"title":{},"body":{"injectables/UsersService.html":{}}}],["configmodule",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/UsersService.html":{}}}],["configservice.get('jwt_token_secret",{"_index":231,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('mail_auth_pass",{"_index":1043,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('mail_auth_user",{"_index":1042,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('mail_host",{"_index":1041,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('mongodb_uri",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["confirm",{"_index":1021,"title":{},"body":{"controllers/MailController.html":{}}}],["connection",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.plugin(softdeleteplugin",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["connectionfactory",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["console.error(error",{"_index":1112,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["console.log('directory",{"_index":1084,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["const",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/HealthController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":959,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(companymodel",{"_index":398,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["constructor(configservice",{"_index":941,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(jobmodel",{"_index":878,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor(permissionmodel",{"_index":1183,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["constructor(private",{"_index":368,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RoleController.html":{},"controllers/SubscribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["constructor(reflector",{"_index":905,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["constructor(resumemodel",{"_index":1283,"title":{},"body":{"injectables/ResumesService.html":{}}}],["constructor(rolemodel",{"_index":1345,"title":{},"body":{"injectables/RoleService.html":{}}}],["constructor(subscribermodel",{"_index":1417,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["constructor(usermodel",{"_index":1531,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersmodel",{"_index":665,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["constructor(usersservice",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["context",{"_index":911,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.getclass",{"_index":923,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":922,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":925,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp().getresponse().statuscode",{"_index":1225,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RoleController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RoleController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('companies",{"_index":366,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["controller('databases",{"_index":644,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["controller('files",{"_index":748,"title":{},"body":{"controllers/FilesController.html":{}}}],["controller('health",{"_index":800,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('jobs",{"_index":860,"title":{},"body":{"controllers/JobsController.html":{}}}],["controller('mail",{"_index":987,"title":{},"body":{"controllers/MailController.html":{}}}],["controller('permissions",{"_index":1171,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["controller('resumes",{"_index":1267,"title":{},"body":{"controllers/ResumesController.html":{}}}],["controller('roles",{"_index":1332,"title":{},"body":{"controllers/RoleController.html":{}}}],["controller('subscribers",{"_index":1400,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["controller('users",{"_index":1511,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["correct",{"_index":965,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["countdocuments",{"_index":1198,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/SubscribersService.html":{}}}],["countpermission",{"_index":688,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countrole",{"_index":690,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countuser",{"_index":686,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["coverage",{"_index":1590,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/UserRef-1.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":370,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/ResumesController.html":{},"controllers/RoleController.html":{},"controllers/UsersController.html":{}}}],["create(createcompanydto",{"_index":333,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{}}}],["create(createfiledto",{"_index":780,"title":{},"body":{"injectables/FilesService.html":{}}}],["create(createjobdto",{"_index":846,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["create(createpermissiondto",{"_index":1159,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{}}}],["create(createroledto",{"_index":1322,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["create(createsubscriberdto",{"_index":1381,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["create(createusercvdto",{"_index":1253,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["create(createuserdto",{"_index":1500,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createbyuser",{"_index":1251,"title":{},"body":{"controllers/ResumesController.html":{}}}],["createbyuser(@user",{"_index":1269,"title":{},"body":{"controllers/ResumesController.html":{}}}],["createbyuser(user",{"_index":1255,"title":{},"body":{"controllers/ResumesController.html":{}}}],["createcompanydto",{"_index":334,"title":{"classes/CreateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UserRef.html":{},"classes/UserRef-1.html":{},"coverage.html":{}}}],["created",{"_index":1085,"title":{},"body":{"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["createdat",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["createdby",{"_index":420,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"miscellaneous/variables.html":{}}}],["createfiledto",{"_index":525,"title":{"classes/CreateFileDto.html":{}},"body":{"classes/CreateFileDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["createjobdto",{"_index":528,"title":{"classes/CreateJobDto.html":{}},"body":{"classes/CreateJobDto.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"classes/company.html":{},"coverage.html":{}}}],["createmulteroptions",{"_index":1056,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createparamdecorator",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpermissiondto",{"_index":570,"title":{"classes/CreatePermissionDto.html":{}},"body":{"classes/CreatePermissionDto.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["createrefreshtoken",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["createresumedto",{"_index":579,"title":{"classes/CreateResumeDto.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/History.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["createroledto",{"_index":598,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["createsubscriberdto",{"_index":608,"title":{"classes/CreateSubscriberDto.html":{}},"body":{"classes/CreateSubscriberDto.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["createuser",{"_index":1560,"title":{},"body":{"injectables/UsersService.html":{}}}],["createusercvdto",{"_index":596,"title":{"classes/CreateUserCvDto.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"coverage.html":{}}}],["createuserdto",{"_index":620,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/company-1.html":{},"coverage.html":{}}}],["cron",{"_index":984,"title":{},"body":{"controllers/MailController.html":{}}}],["cron('59",{"_index":992,"title":{},"body":{"controllers/MailController.html":{}}}],["cronexpression",{"_index":985,"title":{},"body":{"controllers/MailController.html":{}}}],["ctaurl",{"_index":1025,"title":{},"body":{"controllers/MailController.html":{}}}],["ctx",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":444,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["currentpage",{"_index":344,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["cài",{"_index":1666,"title":{},"body":{"index.html":{}}}],["các",{"_index":1105,"title":{},"body":{"injectables/MulterConfigService.html":{},"index.html":{}}}],["câu",{"_index":1668,"title":{},"body":{"index.html":{}}}],["cấu",{"_index":1113,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["cần",{"_index":1663,"title":{},"body":{"index.html":{}}}],["cập",{"_index":454,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["của",{"_index":1069,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["d",{"_index":456,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/MulterConfigService.html":{},"index.html":{}}}],["data",{"_index":1211,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["databases",{"_index":641,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["databases.controller",{"_index":649,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["databases.service",{"_index":643,"title":{},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{}}}],["databases/databases.module",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["databasescontroller",{"_index":639,"title":{"controllers/DatabasesController.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"coverage.html":{}}}],["databasesmodule",{"_index":50,"title":{"modules/DatabasesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabasesModule.html":{},"modules.html":{},"overview.html":{}}}],["databasesservice",{"_index":642,"title":{"injectables/DatabasesService.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"coverage.html":{},"overview.html":{}}}],["date",{"_index":491,"title":{},"body":{"classes/Company.html":{},"classes/CreateJobDto.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"classes/company.html":{}}}],["date(value",{"_index":569,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/company.html":{}}}],["date.now()}${extname",{"_index":1142,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["db",{"_index":801,"title":{},"body":{"controllers/HealthController.html":{}}}],["ddd",{"_index":1709,"title":{},"body":{"properties.html":{}}}],["declarations",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RoleModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorator/customize",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["decorators",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"classes/History.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef.html":{},"classes/UserRef-1.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"controllers/UsersController.html":{},"classes/company.html":{},"classes/company-1.html":{}}}],["default",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"classes/UserRef-3.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defaultlimit",{"_index":430,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["defined",{"_index":119,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/History.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef.html":{},"classes/UserRef-1.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/company.html":{},"classes/company-1.html":{}}}],["delete",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":383,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RoleController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["delete(':id')@responsemessage('delete",{"_index":350,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RoleController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["deleted",{"_index":483,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["deletedat",{"_index":1726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deletedby",{"_index":487,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"injectables/UsersService.html":{}}}],["deletedcompany",{"_index":479,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["deletedcompany.deleted",{"_index":481,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["deletedcount",{"_index":484,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["deleteuser",{"_index":1574,"title":{},"body":{"injectables/UsersService.html":{}}}],["dependencies",{"_index":39,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RoleModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":416,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/RegisterUserDto.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/UserLoginDto.html":{},"classes/UserRef.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/company.html":{},"classes/company-1.html":{}}}],["destination",{"_index":1116,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dev",{"_index":1672,"title":{},"body":{"index.html":{}}}],["dir",{"_index":1044,"title":{},"body":{"modules/MailModule.html":{}}}],["diskstorage",{"_index":1063,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["document",{"_index":464,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["documentation",{"_index":1591,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":361,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":363,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["ducduy",{"_index":637,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"classes/company-1.html":{}}}],["duongducduy825@gmail.com",{"_index":701,"title":{},"body":{"injectables/DatabasesService.html":{},"miscellaneous/variables.html":{}}}],["duy",{"_index":714,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["dân",{"_index":1676,"title":{},"body":{"index.html":{}}}],["dẫn",{"_index":1067,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["each",{"_index":568,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/company.html":{}}}],["eexist",{"_index":1091,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ejs",{"_index":1635,"title":{},"body":{"dependencies.html":{}}}],["email",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"interfaces/Iuser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef.html":{},"classes/UserRef-1.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"injectables/UsersService.html":{},"classes/company-1.html":{},"miscellaneous/variables.html":{}}}],["email')@cron('59",{"_index":971,"title":{},"body":{"controllers/MailController.html":{}}}],["enddate",{"_index":531,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/UserRef-3.html":{},"classes/company.html":{}}}],["enotdir",{"_index":1099,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensureexists",{"_index":1054,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["err",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["err.message",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["error",{"_index":1087,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["error('invalid",{"_index":1433,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["error(`failed",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["error.code",{"_index":1089,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["errorhttpstatuscode",{"_index":761,"title":{},"body":{"controllers/FilesController.html":{}}}],["exact",{"_index":1637,"title":{},"body":{"dependencies.html":{}}}],["example",{"_index":636,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"classes/company-1.html":{}}}],["exec",{"_index":442,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["executioncontext",{"_index":909,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["exists",{"_index":1086,"title":{},"body":{"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["expiresin",{"_index":233,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/Iuser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef.html":{},"classes/UserRef-1.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/company.html":{},"classes/company-1.html":{}}}],["exports",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RoleModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"controllers/RoleController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":731,"title":{},"body":{"controllers/FilesController.html":{}}}],["extends",{"_index":816,"title":{},"body":{"classes/History.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/UserRef-1.html":{}}}],["extname",{"_index":1133,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extractjwt",{"_index":945,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":951,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":953,"title":{},"body":{"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"miscellaneous/variables.html":{}}}],["fanpage",{"_index":1690,"title":{},"body":{"index.html":{}}}],["female",{"_index":712,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["fetch",{"_index":448,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["fetching",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{"classes/File.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/Iuser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef.html":{},"classes/UserRef-1.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/company.html":{},"classes/company-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file')@useinterceptors(undefined",{"_index":733,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.dto",{"_index":743,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{}}}],["file.dto.ts",{"_index":527,"title":{},"body":{"classes/CreateFileDto.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["file.filename",{"_index":763,"title":{},"body":{"controllers/FilesController.html":{}}}],["fileinterceptor",{"_index":744,"title":{},"body":{"controllers/FilesController.html":{}}}],["filename",{"_index":735,"title":{},"body":{"controllers/FilesController.html":{},"injectables/MulterConfigService.html":{}}}],["files",{"_index":722,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"miscellaneous/variables.html":{}}}],["files.controller",{"_index":772,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.service",{"_index":742,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{}}}],["files/files.module",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["filescontroller",{"_index":720,"title":{"controllers/FilesController.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["filesmodule",{"_index":51,"title":{"modules/FilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules.html":{},"overview.html":{}}}],["filesservice",{"_index":741,"title":{"injectables/FilesService.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"coverage.html":{},"overview.html":{}}}],["filetype",{"_index":753,"title":{},"body":{"controllers/FilesController.html":{}}}],["filter",{"_index":423,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["filter.current",{"_index":427,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["filter.pagesize",{"_index":428,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["finalname",{"_index":1141,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["find",{"_index":891,"title":{},"body":{"injectables/JobsService.html":{},"injectables/ResumesService.html":{},"injectables/UsersService.html":{}}}],["find(filter",{"_index":437,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["findall",{"_index":330,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(currentpage",{"_index":338,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findbyid",{"_index":877,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"controllers/UsersController.html":{}}}],["findbyid(@param('id",{"_index":1514,"title":{},"body":{"controllers/UsersController.html":{}}}],["findbyid(id",{"_index":883,"title":{},"body":{"injectables/JobsService.html":{},"injectables/RoleService.html":{},"controllers/UsersController.html":{}}}],["findbyusername",{"_index":1529,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyusername(email",{"_index":1540,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyusers",{"_index":1282,"title":{},"body":{"injectables/ResumesService.html":{}}}],["findbyusers(user",{"_index":1288,"title":{},"body":{"injectables/ResumesService.html":{}}}],["findjobbyid",{"_index":894,"title":{},"body":{"injectables/JobsService.html":{}}}],["findone",{"_index":331,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":377,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RoleController.html":{},"controllers/SubscribersController.html":{}}}],["findone(id",{"_index":345,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["finduserbyemail(username",{"_index":1570,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyid",{"_index":1568,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyrefreshtoken",{"_index":1526,"title":{},"body":{"injectables/UsersService.html":{}}}],["fletch",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["folder",{"_index":1118,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["forbiddenexception",{"_index":914,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["found",{"_index":453,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/UsersService.html":{}}}],["foundrole",{"_index":1361,"title":{},"body":{"injectables/RoleService.html":{}}}],["foundrole.name",{"_index":1363,"title":{},"body":{"injectables/RoleService.html":{}}}],["founduser",{"_index":1576,"title":{},"body":{"injectables/UsersService.html":{}}}],["founduser.email.tostring",{"_index":1578,"title":{},"body":{"injectables/UsersService.html":{}}}],["fs",{"_index":1062,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["fs.mkdirsync(targetdirectory",{"_index":1082,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["full",{"_index":696,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["function",{"_index":1610,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1658,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":705,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/User.html":{},"classes/UserRef-4.html":{}}}],["get(':id",{"_index":376,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RoleController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@responsemessage('get",{"_index":346,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RoleController.html":{},"controllers/SubscribersController.html":{}}}],["get('account",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('account')@responsemessage('get",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('refresh",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@public()@healthcheck",{"_index":794,"title":{},"body":{"controllers/HealthController.html":{}}}],["get()@public()@responsemessage('test",{"_index":970,"title":{},"body":{"controllers/MailController.html":{}}}],["get()@responsemessage('fetching",{"_index":341,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RoleController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["get()@responsemessage('get",{"_index":724,"title":{},"body":{"controllers/FilesController.html":{}}}],["gethello",{"_index":118,"title":{},"body":{"injectables/AppService.html":{}}}],["getrootpath",{"_index":1055,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["getskills",{"_index":1416,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["getskills(user",{"_index":1422,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["getting",{"_index":1660,"title":{"index.html":{}},"body":{}}],["getusersskills",{"_index":1380,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["getusersskills(@user",{"_index":1404,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["getusersskills(user",{"_index":1385,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["gi",{"_index":1674,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1698,"title":{},"body":{"modules.html":{}}}],["gốc",{"_index":1068,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["gồm",{"_index":1140,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["h",{"_index":707,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["handlebars",{"_index":1639,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":1035,"title":{},"body":{"modules/MailModule.html":{}}}],["handlegetaccount",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlegetaccount(@user",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlegetaccount(user",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin(req",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogout",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogout(response",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken(request",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerequest",{"_index":904,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":912,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handletestemail",{"_index":969,"title":{},"body":{"controllers/MailController.html":{}}}],["handlregister",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlregister(@body",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlregister(registeruserdto",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["hashedpassword",{"_index":1535,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword",{"_index":1530,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword(password",{"_index":1543,"title":{},"body":{"injectables/UsersService.html":{}}}],["header",{"_index":1121,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["health",{"_index":792,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":805,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":796,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":797,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":790,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":52,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["hello",{"_index":123,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":1641,"title":{},"body":{"dependencies.html":{}}}],["history",{"_index":807,"title":{"classes/History.html":{}},"body":{"classes/History.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["host",{"_index":1040,"title":{},"body":{"modules/MailModule.html":{}}}],["hoặc",{"_index":1122,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["httponly",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://hoidanit.com.vn",{"_index":1685,"title":{},"body":{"index.html":{}}}],["https://itviec.com",{"_index":1026,"title":{},"body":{"controllers/MailController.html":{}}}],["https://itviec.com/job/${job._id",{"_index":1009,"title":{},"body":{"controllers/MailController.html":{}}}],["https://www.facebook.com/askitwitheric",{"_index":1691,"title":{},"body":{"index.html":{}}}],["https://www.tiktok.com/@hoidanit",{"_index":1689,"title":{},"body":{"index.html":{}}}],["https://www.udemy.com/user/eric",{"_index":1693,"title":{},"body":{"index.html":{}}}],["https://www.youtube.com/@hoidanit",{"_index":1687,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":740,"title":{},"body":{"controllers/FilesController.html":{}}}],["httpstatus.unprocessable_entity",{"_index":762,"title":{},"body":{"controllers/FilesController.html":{}}}],["hydratedarraysubdocument",{"_index":1375,"title":{},"body":{"classes/Subscriber.html":{},"miscellaneous/typealiases.html":{}}}],["hydrateddocument",{"_index":504,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"miscellaneous/typealiases.html":{}}}],["hình",{"_index":1114,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["hỏi",{"_index":1675,"title":{},"body":{"index.html":{}}}],["hợp",{"_index":1097,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["id",{"_index":347,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1592,"title":{},"body":{"coverage.html":{}}}],["id},not",{"_index":1575,"title":{},"body":{"injectables/UsersService.html":{}}}],["ignoreexpiration",{"_index":952,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image\\/(png|jpg|jpeg|gif)|text\\/plain|application\\/pdf|application\\/msword|application\\/vnd\\.openxmlformats",{"_index":754,"title":{},"body":{"controllers/FilesController.html":{}}}],["implements",{"_index":679,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/Iuser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef.html":{},"classes/UserRef-1.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/company.html":{},"classes/company-1.html":{}}}],["imports",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RoleModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":116,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/History.html":{},"interfaces/Iuser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef.html":{},"classes/UserRef-1.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/company.html":{},"classes/company-1.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/Iuser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef.html":{},"classes/UserRef-1.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/company.html":{},"classes/company-1.html":{},"miscellaneous/variables.html":{}}}],["init_permissions",{"_index":677,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialized",{"_index":718,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["inject",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["injectable",{"_index":113,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":114,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":409,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(company.name",{"_index":414,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["injectmodel(job.name",{"_index":990,"title":{},"body":{"controllers/MailController.html":{}}}],["injectmodel(jobm.name",{"_index":888,"title":{},"body":{"injectables/JobsService.html":{}}}],["injectmodel(permission.name",{"_index":681,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{}}}],["injectmodel(resume.name",{"_index":1293,"title":{},"body":{"injectables/ResumesService.html":{}}}],["injectmodel(role.name",{"_index":682,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RoleService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(subscriber.name",{"_index":988,"title":{},"body":{"controllers/MailController.html":{},"injectables/SubscribersService.html":{}}}],["injectmodel(user.name",{"_index":680,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["injectmodel(userm.name",{"_index":1554,"title":{},"body":{"injectables/UsersService.html":{}}}],["intercept",{"_index":1221,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":1438,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["interface",{"_index":818,"title":{"interfaces/Iuser.html":{},"interfaces/Response.html":{}},"body":{"interfaces/Iuser.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["interfaces",{"_index":819,"title":{},"body":{"interfaces/Iuser.html":{},"interfaces/Response.html":{},"overview.html":{}}}],["invalid,please",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["is_public_key",{"_index":917,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["is_public_permission",{"_index":918,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isactive",{"_index":532,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/UserRef-3.html":{},"classes/company.html":{}}}],["isarray",{"_index":562,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/company.html":{}}}],["isboolean",{"_index":563,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/company.html":{}}}],["isdate",{"_index":564,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/company.html":{}}}],["isdate({message",{"_index":543,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["isdeleted",{"_index":1725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isemail",{"_index":589,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"classes/company-1.html":{}}}],["isemail()@isnotempty",{"_index":1205,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["isemail()@isnotempty({message",{"_index":629,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail()@prop({required",{"_index":1471,"title":{},"body":{"classes/User.html":{}}}],["isexist",{"_index":1426,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["isexistedemail",{"_index":1561,"title":{},"body":{"injectables/UsersService.html":{}}}],["isexits",{"_index":933,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/PermissionsService.html":{},"injectables/RoleService.html":{}}}],["isglobal",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["isinit",{"_index":683,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["ismongoid",{"_index":595,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"classes/company-1.html":{}}}],["isnotempty",{"_index":520,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{},"classes/UserRef.html":{},"classes/company.html":{},"classes/company-1.html":{}}}],["isnotempty()@isemail",{"_index":1463,"title":{},"body":{"classes/UpdatedBy.html":{}}}],["isnotempty()@isstring()@apiproperty({example",{"_index":1481,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["isnotempty({message",{"_index":514,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotemptyobject",{"_index":565,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"classes/company.html":{},"classes/company-1.html":{}}}],["isnotemptyobject()@isobject()@validatenested()@type(undefined",{"_index":539,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["isobject",{"_index":566,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"classes/company.html":{},"classes/company-1.html":{}}}],["isoptional",{"_index":521,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UserLoginDto.html":{},"classes/UserRef.html":{},"classes/UserRef-1.html":{},"classes/company-1.html":{}}}],["isoptional()@isobject()@validatenested()@type(undefined",{"_index":627,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isoptional()@type(undefined",{"_index":1442,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["ispublic",{"_index":920,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["ispublicpermission",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iss",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["isskippermission",{"_index":926,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["isstring",{"_index":522,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UserLoginDto.html":{},"classes/UserRef.html":{},"classes/UserRef-1.html":{},"classes/company.html":{},"classes/company-1.html":{}}}],["isvalid",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["iuser",{"_index":135,"title":{"interfaces/Iuser.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"interfaces/Iuser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["job",{"_index":822,"title":{"classes/Job.html":{}},"body":{"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"injectables/SubscribersService.html":{},"classes/UpdateJobDto.html":{},"classes/UserRef-3.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["job.company",{"_index":1006,"title":{},"body":{"controllers/MailController.html":{}}}],["job.dto",{"_index":858,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{}}}],["job.dto.ts",{"_index":530,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/UpdateJobDto.html":{},"classes/company.html":{},"coverage.html":{}}}],["job.dto.ts:16",{"_index":1585,"title":{},"body":{"classes/company.html":{}}}],["job.dto.ts:19",{"_index":1587,"title":{},"body":{"classes/company.html":{}}}],["job.dto.ts:22",{"_index":1586,"title":{},"body":{"classes/company.html":{}}}],["job.dto.ts:26",{"_index":552,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:31",{"_index":559,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:37",{"_index":540,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:40",{"_index":554,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:43",{"_index":553,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:46",{"_index":549,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:49",{"_index":541,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:53",{"_index":551,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:58",{"_index":560,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:63",{"_index":545,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:67",{"_index":548,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:7",{"_index":1448,"title":{},"body":{"classes/UpdateJobDto.html":{}}}],["job.name",{"_index":1004,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Resume.html":{}}}],["job.salary}`.replace(/\\b(?=(\\d{3})+(?!\\d))/g",{"_index":1007,"title":{},"body":{"controllers/MailController.html":{}}}],["job.skills",{"_index":1005,"title":{},"body":{"controllers/MailController.html":{}}}],["jobdocument",{"_index":839,"title":{},"body":{"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"classes/UserRef-3.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["jobid",{"_index":583,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["jobm",{"_index":873,"title":{},"body":{"modules/JobsModule.html":{},"injectables/JobsService.html":{}}}],["jobm.name",{"_index":875,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobmodel",{"_index":880,"title":{},"body":{"injectables/JobsService.html":{},"controllers/MailController.html":{}}}],["jobs",{"_index":845,"title":{},"body":{"controllers/JobsController.html":{},"controllers/MailController.html":{},"miscellaneous/variables.html":{}}}],["jobs.controller",{"_index":872,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobs.service",{"_index":857,"title":{},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["jobs/jobs.module",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["jobschema",{"_index":840,"title":{},"body":{"classes/Job.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/UserRef-3.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jobschema.plugin(softdeleteplugin",{"_index":842,"title":{},"body":{"classes/Job.html":{},"classes/UserRef-3.html":{}}}],["jobscontroller",{"_index":843,"title":{"controllers/JobsController.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"coverage.html":{}}}],["jobsmodule",{"_index":53,"title":{"modules/JobsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"modules.html":{},"overview.html":{}}}],["jobsservice",{"_index":856,"title":{"injectables/JobsService.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"coverage.html":{},"overview.html":{}}}],["jobswithmatchingskills",{"_index":1000,"title":{},"body":{"controllers/MailController.html":{}}}],["jobswithmatchingskills.map((job",{"_index":1003,"title":{},"body":{"controllers/MailController.html":{}}}],["jobswithmatchingskills?.length",{"_index":1002,"title":{},"body":{"controllers/MailController.html":{}}}],["join",{"_index":1033,"title":{},"body":{"modules/MailModule.html":{}}}],["join(__dirname",{"_index":1045,"title":{},"body":{"modules/MailModule.html":{}}}],["jwt",{"_index":948,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":25,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"controllers/CompaniesController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/PermissionsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":950,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":223,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":229,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":218,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["khi",{"_index":476,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["khác",{"_index":1107,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["không",{"_index":1093,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["kiếm",{"_index":1680,"title":{},"body":{"index.html":{}}}],["kiểm",{"_index":1072,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["l",{"_index":1095,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["legend",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RoleModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["level",{"_index":533,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/UserRef-3.html":{},"classes/company.html":{}}}],["license",{"_index":1706,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["limit(defaultlimit",{"_index":439,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["list",{"_index":1012,"title":{},"body":{"controllers/MailController.html":{}}}],["literal",{"_index":821,"title":{},"body":{"interfaces/Iuser.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["liệu",{"_index":457,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["local",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":20,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":219,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["location",{"_index":534,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/UserRef-3.html":{},"classes/company.html":{}}}],["logger",{"_index":663,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["logger(databasesservice.name",{"_index":671,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["login",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["login(user",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["logo",{"_index":417,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"classes/UserRef.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/company.html":{}}}],["logout",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["làm",{"_index":1664,"title":{},"body":{"index.html":{}}}],["lưu",{"_index":462,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/MulterConfigService.html":{}}}],["lại",{"_index":463,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["lấy",{"_index":1120,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["lệnh",{"_index":1669,"title":{},"body":{"index.html":{}}}],["lỗi",{"_index":1106,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["m",{"_index":1130,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["mail",{"_index":968,"title":{},"body":{"controllers/MailController.html":{}}}],["mail.controller",{"_index":1032,"title":{},"body":{"modules/MailModule.html":{}}}],["mail.service",{"_index":976,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["mail/mail.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["mailcontroller",{"_index":966,"title":{"controllers/MailController.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"coverage.html":{}}}],["mailermodule",{"_index":1031,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":1038,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":977,"title":{},"body":{"controllers/MailController.html":{}}}],["mailmodule",{"_index":54,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":975,"title":{"injectables/MailService.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["male",{"_index":706,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["map",{"_index":1217,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["map((data",{"_index":1224,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["matching",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/Iuser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef.html":{},"classes/UserRef-1.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/company.html":{},"classes/company-1.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(totalitems",{"_index":434,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["maxage",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["maxsize",{"_index":757,"title":{},"body":{"controllers/FilesController.html":{}}}],["message",{"_index":452,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{},"classes/UserRef.html":{},"classes/company.html":{},"classes/company-1.html":{},"miscellaneous/variables.html":{}}}],["meta",{"_index":443,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["metadata",{"_index":1651,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":574,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"injectables/RoleService.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":117,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["minute",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["miscellaneous",{"_index":1657,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":36,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RoleModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"classes/CreatePermissionDto.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"interfaces/Iuser.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"modules/ResumesModule.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":38,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RoleModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":979,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":1036,"title":{},"body":{"modules/MailModule.html":{}}}],["mongo",{"_index":650,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/Resume.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{}}}],["mongodb",{"_index":633,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"classes/company-1.html":{}}}],["mongoose",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"injectables/UsersService.html":{},"classes/company.html":{},"classes/company-1.html":{},"dependencies.html":{}}}],["mongoose.schema.types.array",{"_index":1244,"title":{},"body":{"classes/Resume.html":{}}}],["mongoose.schema.types.objectid",{"_index":506,"title":{},"body":{"classes/Company.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"classes/company.html":{},"classes/company-1.html":{}}}],["mongoose.types.objectid",{"_index":507,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/User.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{}}}],["mongoose.types.objectid(user._id",{"_index":461,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["mongoose.types.objectid.isvalid(id",{"_index":450,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["mongoosehealthindicator",{"_index":798,"title":{},"body":{"controllers/HealthController.html":{}}}],["mongoosemodule",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RoleModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":394,"title":{},"body":{"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RoleModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["ms",{"_index":227,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["ms(configservice.get('jwt_token_expires_in",{"_index":234,"title":{},"body":{"modules/AuthModule.html":{}}}],["ms(this.configservice.get('jwt_refresh_token_expires_in",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["multer",{"_index":773,"title":{},"body":{"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{}}}],["multer.config",{"_index":776,"title":{},"body":{"modules/FilesModule.html":{}}}],["multerconfigservice",{"_index":775,"title":{"injectables/MulterConfigService.html":{}},"body":{"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["multermodule",{"_index":774,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermodule.registerasync",{"_index":777,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermoduleoptions",{"_index":1058,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multeroptionsfactory",{"_index":1061,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["mặc",{"_index":1123,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["mềm",{"_index":477,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["mọi",{"_index":1677,"title":{},"body":{"index.html":{}}}],["một",{"_index":1096,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["mới",{"_index":1143,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["mục",{"_index":1076,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["n",{"_index":1070,"title":{},"body":{"injectables/MulterConfigService.html":{},"index.html":{}}}],["name",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/Iuser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/company.html":{},"classes/company-1.html":{},"miscellaneous/variables.html":{}}}],["nestinterceptor",{"_index":1213,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs",{"_index":978,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/common",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":916,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":224,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":812,"title":{},"body":{"classes/History.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/UserRef-1.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":745,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"controllers/MailController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"controllers/RoleController.html":{},"controllers/SubscribersController.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"classes/company-1.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":799,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"dependencies.html":{}}}],["new",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateJobDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/company.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newcompany",{"_index":418,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["newcv",{"_index":1294,"title":{},"body":{"injectables/ResumesService.html":{}}}],["newcv?._id",{"_index":1297,"title":{},"body":{"injectables/ResumesService.html":{}}}],["newcv?.createdat",{"_index":1298,"title":{},"body":{"injectables/ResumesService.html":{}}}],["newjob",{"_index":889,"title":{},"body":{"injectables/JobsService.html":{}}}],["newpermission",{"_index":1192,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["newpermission._id",{"_index":1194,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["newpermission.createdat",{"_index":1195,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["newrole",{"_index":1354,"title":{},"body":{"injectables/RoleService.html":{}}}],["newrole._id",{"_index":1356,"title":{},"body":{"injectables/RoleService.html":{}}}],["newrole.createdat",{"_index":1357,"title":{},"body":{"injectables/RoleService.html":{}}}],["newsubscriber",{"_index":1428,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["newsubscriber._id",{"_index":1430,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["newsubscriber.createdat",{"_index":1431,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["newuser",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["newuser?._id",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["newuser?.createdat",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["next",{"_index":1222,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["next.handle().pipe",{"_index":1223,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["ng",{"_index":1066,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["người",{"_index":473,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["nh",{"_index":1124,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["nhưng",{"_index":1092,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["nhật",{"_index":455,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["nice",{"_index":1019,"title":{},"body":{"controllers/MailController.html":{}}}],["nodemailer",{"_index":1645,"title":{},"body":{"dependencies.html":{}}}],["none",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["notfoundexception",{"_index":887,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/UsersService.html":{}}}],["notfoundexception(`job",{"_index":897,"title":{},"body":{"injectables/JobsService.html":{},"injectables/ResumesService.html":{}}}],["notfoundexception(`permission",{"_index":1200,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["notfoundexception(`user",{"_index":1569,"title":{},"body":{"injectables/UsersService.html":{}}}],["npm",{"_index":1670,"title":{},"body":{"index.html":{}}}],["null",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":403,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"injectables/FilesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"injectables/UsersService.html":{},"classes/company.html":{},"classes/company-1.html":{}}}],["nếu",{"_index":1077,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["nội",{"_index":708,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["object",{"_index":824,"title":{},"body":{"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{}}}],["object.assign(company",{"_index":458,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["objectid",{"_index":597,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"classes/company-1.html":{}}}],["objectid'})@isarray({message",{"_index":606,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["objuser",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["observable",{"_index":1215,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["officedocument\\.wordprocessingml\\.document",{"_index":755,"title":{},"body":{"controllers/FilesController.html":{}}}],["offset",{"_index":429,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["old",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["omittype",{"_index":1461,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["omittype(createuserdto",{"_index":1459,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["one",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["onmoduleinit",{"_index":664,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["optional",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/Iuser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":1048,"title":{},"body":{"modules/MailModule.html":{}}}],["out",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RoleModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["override",{"_index":1016,"title":{},"body":{"controllers/MailController.html":{}}}],["overview",{"_index":1700,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1615,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pagelimit",{"_index":339,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RoleController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["pages",{"_index":446,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["pagesize",{"_index":445,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["pagination",{"_index":342,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RoleController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":357,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RoleController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":381,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RoleController.html":{}}}],["parameters",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":413,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["parsearraypipe",{"_index":738,"title":{},"body":{"controllers/FilesController.html":{}}}],["parsefilepipebuilder",{"_index":739,"title":{},"body":{"controllers/FilesController.html":{}}}],["parser",{"_index":1633,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":811,"title":{},"body":{"classes/History.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/UserRef-1.html":{}}}],["partialtype(createcompanydto",{"_index":1441,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"classes/UserRef-1.html":{}}}],["partialtype(createfiledto",{"_index":1445,"title":{},"body":{"classes/UpdateFileDto.html":{}}}],["partialtype(createjobdto",{"_index":1447,"title":{},"body":{"classes/UpdateJobDto.html":{}}}],["partialtype(createpermissiondto",{"_index":1450,"title":{},"body":{"classes/UpdatePermissionDto.html":{}}}],["partialtype(createresumedto",{"_index":817,"title":{},"body":{"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["partialtype(createroledto",{"_index":1454,"title":{},"body":{"classes/UpdateRoleDto.html":{}}}],["partialtype(createsubscriberdto",{"_index":1456,"title":{},"body":{"classes/UpdateSubscriberDto.html":{}}}],["pass",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"modules/MailModule.html":{}}}],["passport",{"_index":947,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passport/jwt.strategy",{"_index":225,"title":{},"body":{"modules/AuthModule.html":{}}}],["passport/local.strategy",{"_index":222,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule",{"_index":221,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":949,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":939,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passthrough",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{}}}],["password",{"_index":624,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef-4.html":{},"injectables/UsersService.html":{},"classes/company-1.html":{}}}],["patch",{"_index":356,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RoleController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["patch(':id",{"_index":379,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RoleController.html":{},"controllers/UsersController.html":{}}}],["patch(':id')@responsemessage('update",{"_index":354,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RoleController.html":{},"controllers/UsersController.html":{}}}],["patch()@skipcheckpermission()@responsemessage('update",{"_index":1393,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["path",{"_index":1034,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/UsersService.html":{}}}],["path.basename(file.originalname",{"_index":1138,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["path.extname(file.originalname",{"_index":1134,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["path.join",{"_index":1126,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["payload",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["pending",{"_index":1296,"title":{},"body":{"injectables/ResumesService.html":{}}}],["per",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["permission",{"_index":604,"title":{"classes/Permission.html":{}},"body":{"classes/CreateRoleDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"interfaces/Iuser.html":{},"injectables/JwtAuthGuard.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Role.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission.apipath",{"_index":936,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permission.dto",{"_index":1169,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{}}}],["permission.dto.ts",{"_index":572,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["permission.dto.ts:11",{"_index":576,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:14",{"_index":577,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:5",{"_index":578,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:8",{"_index":575,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.find",{"_index":934,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permission.method",{"_index":935,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permission.name",{"_index":660,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/PermissionsModule.html":{},"classes/Role.html":{}}}],["permissiondocument",{"_index":674,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["permissionmodel",{"_index":666,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{}}}],["permissions",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"interfaces/Iuser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"miscellaneous/variables.html":{}}}],["permissions.controller",{"_index":1180,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["permissions.service",{"_index":1168,"title":{},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{}}}],["permissions/permissions.module",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["permissionschema",{"_index":653,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permissionschema.plugin(softdeleteplugin",{"_index":1156,"title":{},"body":{"classes/Permission.html":{}}}],["permissionscontroller",{"_index":1157,"title":{"controllers/PermissionsController.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"coverage.html":{}}}],["permissionsmodule",{"_index":55,"title":{"modules/PermissionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PermissionsModule.html":{},"modules.html":{},"overview.html":{}}}],["permissionsservice",{"_index":1167,"title":{"injectables/PermissionsService.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"coverage.html":{},"overview.html":{}}}],["permisson",{"_index":1162,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"miscellaneous/variables.html":{}}}],["phải",{"_index":1094,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["phần",{"_index":1135,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["plainpassword",{"_index":1537,"title":{},"body":{"injectables/UsersService.html":{}}}],["plugin",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["populate",{"_index":1305,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/UsersService.html":{}}}],["populate(population",{"_index":441,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["population",{"_index":425,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["post",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RoleController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["post('by",{"_index":1256,"title":{},"body":{"controllers/ResumesController.html":{}}}],["post('login",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout')@responsemessage('logout",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('skills",{"_index":1402,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["post('skills')@responsemessage(get",{"_index":1386,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["post('upload",{"_index":749,"title":{},"body":{"controllers/FilesController.html":{}}}],["post()@responsemessage('create",{"_index":847,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/RoleController.html":{},"controllers/SubscribersController.html":{}}}],["post()@responsemessage('created",{"_index":335,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/ResumesController.html":{}}}],["prefix",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RoleController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["preview",{"_index":1050,"title":{},"body":{"modules/MailModule.html":{}}}],["private",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/HealthController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["process",{"_index":672,"title":{},"body":{"injectables/DatabasesService.html":{},"interfaces/Iuser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/PermissionsService.html":{}}}],["process.cwd",{"_index":1071,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["processrefreshtoken",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["projection",{"_index":1196,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{}}}],["promise",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["prop",{"_index":489,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{}}}],["prop({required",{"_index":499,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["prop({type",{"_index":494,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{}}}],["properties",{"_index":237,"title":{"properties.html":{}},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"interfaces/Iuser.html":{},"classes/Job.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef.html":{},"classes/UserRef-1.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"injectables/UsersService.html":{},"classes/company.html":{},"classes/company-1.html":{},"properties.html":{}}}],["providers",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RoleModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/ResumesController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@get(':id')@responsemessage('get",{"_index":851,"title":{},"body":{"controllers/JobsController.html":{},"controllers/UsersController.html":{}}}],["public()@get('refresh')@responsemessage('get",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@get()@responsemessage('fetching",{"_index":849,"title":{},"body":{"controllers/JobsController.html":{}}}],["public()@post('register')@responsemessage('register",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@post('upload')@responsemessage('upload",{"_index":732,"title":{},"body":{"controllers/FilesController.html":{}}}],["public()@post()@responsemessage('create",{"_index":1501,"title":{},"body":{"controllers/UsersController.html":{}}}],["public()@useguards(localauthguard)@useguards(throttlerguard)@throttle(5",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["public/images/${folder",{"_index":1128,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["push",{"_index":1303,"title":{},"body":{"injectables/ResumesService.html":{}}}],["qs",{"_index":340,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["quantity",{"_index":535,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/UserRef-3.html":{},"classes/company.html":{}}}],["query",{"_index":358,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["query('current",{"_index":373,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RoleController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["query('pagesize",{"_index":374,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RoleController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["quyền",{"_index":1108,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["readonly",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"controllers/RoleController.html":{},"controllers/SubscribersController.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"classes/company-1.html":{}}}],["receiver",{"_index":1023,"title":{},"body":{"controllers/MailController.html":{}}}],["receivers",{"_index":1013,"title":{},"body":{"controllers/MailController.html":{}}}],["recursive",{"_index":1083,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ref",{"_index":1229,"title":{},"body":{"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{},"classes/UserRef-4.html":{}}}],["reflect",{"_index":1650,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":906,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["refresh",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["refresh_token",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"classes/UserRef-4.html":{},"injectables/UsersService.html":{}}}],["register",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["register(user",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["registeruser",{"_index":1584,"title":{},"body":{"injectables/UsersService.html":{}}}],["registeruserdto",{"_index":161,"title":{"classes/RegisterUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"classes/company-1.html":{},"coverage.html":{}}}],["remove",{"_index":332,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":385,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RoleController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["remove(id",{"_index":349,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":789,"title":{},"body":{"injectables/FilesService.html":{}}}],["render",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["req",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MulterConfigService.html":{}}}],["req.user",{"_index":955,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["req?.headers?.folder_type",{"_index":1119,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["request",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["request.cookies['refresh_token",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.method",{"_index":930,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.route?.path",{"_index":932,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.user",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requests",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["required",{"_index":509,"title":{},"body":{"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/RegisterUserDto.html":{},"classes/Subscriber.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"classes/company.html":{},"classes/company-1.html":{}}}],["required'})@isarray({message",{"_index":555,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/UpdateResumeDto.html":{}}}],["required'})@isboolean({message",{"_index":547,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["required'})@isemail",{"_index":611,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["required'})@ismongoid({each",{"_index":605,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["required'})@ismongoid({message",{"_index":616,"title":{},"body":{"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{}}}],["required'})@isstring",{"_index":515,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/CreateResumeDto.html":{}}}],["required'})@isstring({message",{"_index":550,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["required'})@transform",{"_index":542,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["res",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{}}}],["reset",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RoleModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":146,"title":{"interfaces/Response.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Response.html":{},"controllers/RoleController.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["response.clearcookie('refresh_token",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.cookie('refresh_token",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["response_message",{"_index":1219,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RoleController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage('create",{"_index":861,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/RoleController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('created",{"_index":369,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/ResumesController.html":{}}}],["responsemessage('delete",{"_index":384,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RoleController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('fetching",{"_index":372,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RoleController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('get",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RoleController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('login",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('logout",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('register",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('test",{"_index":991,"title":{},"body":{"controllers/MailController.html":{}}}],["responsemessage('update",{"_index":380,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RoleController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('upload",{"_index":750,"title":{},"body":{"controllers/FilesController.html":{}}}],["responsemessage(`get",{"_index":1403,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["result",{"_index":435,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["results",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/Iuser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef.html":{},"classes/UserRef-1.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/company.html":{},"classes/company-1.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":587,"title":{"classes/Resume.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/History.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resume.dto",{"_index":814,"title":{},"body":{"classes/History.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["resume.dto.ts",{"_index":581,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["resume.dto.ts:13",{"_index":1464,"title":{},"body":{"classes/UpdatedBy.html":{}}}],["resume.dto.ts:15",{"_index":590,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:18",{"_index":594,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/History.html":{}}}],["resume.dto.ts:21",{"_index":593,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/History.html":{}}}],["resume.dto.ts:25",{"_index":592,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:26",{"_index":810,"title":{},"body":{"classes/History.html":{}}}],["resume.dto.ts:28",{"_index":588,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:31",{"_index":591,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:33",{"_index":1452,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["resume.dto.ts:36",{"_index":619,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:40",{"_index":617,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:44",{"_index":618,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:9",{"_index":1462,"title":{},"body":{"classes/UpdatedBy.html":{}}}],["resumedocument",{"_index":1243,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["resumemodel",{"_index":1285,"title":{},"body":{"injectables/ResumesService.html":{}}}],["resumes",{"_index":1250,"title":{},"body":{"controllers/ResumesController.html":{},"miscellaneous/variables.html":{}}}],["resumes.controller",{"_index":1279,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumes.service",{"_index":1265,"title":{},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{}}}],["resumes/resumes.module",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["resumeschema",{"_index":1245,"title":{},"body":{"classes/Resume.html":{},"modules/ResumesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resumeschema.plugin(softdeleteplugin",{"_index":1247,"title":{},"body":{"classes/Resume.html":{}}}],["resumescontroller",{"_index":1248,"title":{"controllers/ResumesController.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"coverage.html":{}}}],["resumesmodule",{"_index":56,"title":{"modules/ResumesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResumesModule.html":{},"modules.html":{},"overview.html":{}}}],["resumesservice",{"_index":1264,"title":{"injectables/ResumesService.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"overview.html":{}}}],["return",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":121,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["role",{"_index":279,"title":{"classes/Role.html":{}},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"interfaces/Iuser.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef-4.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/company-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role.dto",{"_index":1330,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/UpdateRoleDto.html":{}}}],["role.dto.ts",{"_index":600,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:12",{"_index":602,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:17",{"_index":607,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:6",{"_index":603,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:9",{"_index":601,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.name",{"_index":661,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/RoleModule.html":{},"classes/User.html":{},"classes/UserRef-4.html":{},"modules/UsersModule.html":{}}}],["rolecontroller",{"_index":1319,"title":{"controllers/RoleController.html":{}},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{},"coverage.html":{}}}],["roledocument",{"_index":675,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["rolemodel",{"_index":667,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RoleService.html":{},"injectables/UsersService.html":{}}}],["rolemodule",{"_index":57,"title":{"modules/RoleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoleModule.html":{},"modules.html":{},"overview.html":{}}}],["roles",{"_index":1321,"title":{},"body":{"controllers/RoleController.html":{},"miscellaneous/variables.html":{}}}],["roles.controller",{"_index":1342,"title":{},"body":{"modules/RoleModule.html":{}}}],["roles.service",{"_index":1329,"title":{},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{}}}],["roles/roles.module",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["roles/roles.service",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["roleschema",{"_index":655,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roleschema.plugin(softdeleteplugin",{"_index":1318,"title":{},"body":{"classes/Role.html":{}}}],["roleservice",{"_index":165,"title":{"injectables/RoleService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"coverage.html":{},"overview.html":{}}}],["rolesservice",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["run",{"_index":1671,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1216,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1218,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["rộng",{"_index":1136,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["salary",{"_index":536,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"classes/UserRef-3.html":{},"classes/company.html":{}}}],["salt",{"_index":1555,"title":{},"body":{"injectables/UsersService.html":{}}}],["samesite",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["saturday",{"_index":993,"title":{},"body":{"controllers/MailController.html":{}}}],["save",{"_index":1654,"title":{},"body":{"dependencies.html":{}}}],["schedulemodule",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["schema",{"_index":396,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Company.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"modules/UsersModule.html":{},"classes/company-1.html":{}}}],["schemafactory",{"_index":503,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{}}}],["schemafactory.createforclass(company",{"_index":510,"title":{},"body":{"classes/Company.html":{},"classes/UserRef-2.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(job",{"_index":841,"title":{},"body":{"classes/Job.html":{},"classes/UserRef-3.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(permission",{"_index":1155,"title":{},"body":{"classes/Permission.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(resume",{"_index":1246,"title":{},"body":{"classes/Resume.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(role",{"_index":1317,"title":{},"body":{"classes/Role.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(subscriber",{"_index":1376,"title":{},"body":{"classes/Subscriber.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1479,"title":{},"body":{"classes/User.html":{},"classes/UserRef-4.html":{},"miscellaneous/variables.html":{}}}],["schemas/company.schema",{"_index":393,"title":{},"body":{"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{}}}],["schemas/job.schema",{"_index":874,"title":{},"body":{"modules/JobsModule.html":{},"injectables/JobsService.html":{}}}],["schemas/permission.schema",{"_index":1181,"title":{},"body":{"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{}}}],["schemas/resume.schema",{"_index":1280,"title":{},"body":{"modules/ResumesModule.html":{},"injectables/ResumesService.html":{}}}],["schemas/role.schema",{"_index":1343,"title":{},"body":{"modules/RoleModule.html":{},"injectables/RoleService.html":{}}}],["schemas/subscriber.schema",{"_index":1414,"title":{},"body":{"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{}}}],["schemas/user.schema",{"_index":1524,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["schematypes",{"_index":505,"title":{},"body":{"classes/Company.html":{},"classes/UserRef-2.html":{}}}],["secret",{"_index":230,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":954,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"modules/MailModule.html":{}}}],["select",{"_index":1306,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/UsersService.html":{}}}],["select(projection",{"_index":1199,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{}}}],["sent",{"_index":1027,"title":{},"body":{"controllers/MailController.html":{}}}],["server",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["set",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["setmetadata(is_public_key",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(is_public_permission",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(response_message",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setting",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["signoptions",{"_index":232,"title":{},"body":{"modules/AuthModule.html":{}}}],["skill",{"_index":614,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["skills",{"_index":537,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UserRef-3.html":{},"classes/company.html":{}}}],["skills)@skipcheckpermission",{"_index":1388,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["skip(offset",{"_index":438,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["skipcheckpermission",{"_index":1398,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["soft",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["softdeletemodel",{"_index":399,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["softdeleteplugin",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{}}}],["sort",{"_index":424,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["sort(sort",{"_index":440,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/Iuser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef.html":{},"classes/UserRef-1.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/company.html":{},"classes/company-1.html":{}}}],["src/.../company.schema.ts",{"_index":1712,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../customize.ts",{"_index":1721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../example.ts",{"_index":1720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../job.schema.ts",{"_index":1713,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1659,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../permission.schema.ts",{"_index":1714,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../resume.schema.ts",{"_index":1715,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../role.schema.ts",{"_index":1716,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../subscriber.schema.ts",{"_index":1717,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":1718,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":115,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":120,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:36",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:46",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:52",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:60",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:69",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":220,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:11",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:153",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:19",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:40",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:73",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:84",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:93",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/jwt",{"_index":900,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/local",{"_index":956,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts",{"_index":938,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts:21",{"_index":944,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/jwt.strategy.ts:9",{"_index":942,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/local.strategy.ts",{"_index":958,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/local.strategy.ts:12",{"_index":962,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/passport/local.strategy.ts:7",{"_index":960,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/companies/companies.controller.ts",{"_index":328,"title":{},"body":{"controllers/CompaniesController.html":{},"coverage.html":{}}}],["src/companies/companies.controller.ts:28",{"_index":337,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:34",{"_index":343,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:44",{"_index":348,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:50",{"_index":355,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:60",{"_index":351,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.module.ts",{"_index":390,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["src/companies/companies.service.ts",{"_index":397,"title":{},"body":{"injectables/CompaniesService.html":{},"coverage.html":{}}}],["src/companies/companies.service.ts:108",{"_index":406,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:12",{"_index":400,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:18",{"_index":402,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:33",{"_index":404,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:66",{"_index":405,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:78",{"_index":408,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/dto/create",{"_index":512,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/UserRef.html":{},"coverage.html":{}}}],["src/companies/dto/update",{"_index":1440,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"classes/UserRef-1.html":{},"coverage.html":{}}}],["src/companies/schemas/company.schema.ts",{"_index":486,"title":{},"body":{"classes/Company.html":{},"classes/UserRef-2.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/companies/schemas/company.schema.ts:12",{"_index":1490,"title":{},"body":{"classes/UserRef-2.html":{}}}],["src/companies/schemas/company.schema.ts:18",{"_index":500,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:21",{"_index":490,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:24",{"_index":497,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:27",{"_index":498,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:30",{"_index":495,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:33",{"_index":502,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:36",{"_index":496,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:39",{"_index":492,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:41",{"_index":501,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:9",{"_index":1489,"title":{},"body":{"classes/UserRef-2.html":{}}}],["src/core/transform.interceptor.ts",{"_index":1210,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/core/transform.interceptor.ts:20",{"_index":1437,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/core/transform.interceptor.ts:22",{"_index":1439,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/databases/databases.controller.ts",{"_index":640,"title":{},"body":{"controllers/DatabasesController.html":{},"coverage.html":{}}}],["src/databases/databases.module.ts",{"_index":648,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["src/databases/databases.service.ts",{"_index":662,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{}}}],["src/databases/databases.service.ts:17",{"_index":668,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/databases.service.ts:31",{"_index":670,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/example.ts",{"_index":1605,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorator/customize",{"_index":1553,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/decorator/customize.ts",{"_index":1606,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/files/dto/create",{"_index":526,"title":{},"body":{"classes/CreateFileDto.html":{},"coverage.html":{}}}],["src/files/dto/update",{"_index":1444,"title":{},"body":{"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["src/files/entities/file.entity.ts",{"_index":719,"title":{},"body":{"classes/File.html":{},"coverage.html":{}}}],["src/files/files.controller.ts",{"_index":721,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{}}}],["src/files/files.controller.ts:29",{"_index":734,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:50",{"_index":725,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:56",{"_index":726,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:62",{"_index":729,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:68",{"_index":727,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.module.ts",{"_index":771,"title":{},"body":{"modules/FilesModule.html":{}}}],["src/files/files.service.ts",{"_index":779,"title":{},"body":{"injectables/FilesService.html":{},"coverage.html":{}}}],["src/files/files.service.ts:11",{"_index":782,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:15",{"_index":783,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:19",{"_index":785,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:23",{"_index":784,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:7",{"_index":781,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/multer.config.ts",{"_index":1053,"title":{},"body":{"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["src/files/multer.config.ts:13",{"_index":1060,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:18",{"_index":1059,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:39",{"_index":1057,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/health/health.controller.ts",{"_index":791,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:19",{"_index":795,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":804,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/jobs/dto/create",{"_index":529,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/company.html":{},"coverage.html":{}}}],["src/jobs/dto/update",{"_index":1446,"title":{},"body":{"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts",{"_index":844,"title":{},"body":{"controllers/JobsController.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts:26",{"_index":848,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:32",{"_index":850,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:42",{"_index":852,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:48",{"_index":855,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:59",{"_index":853,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.module.ts",{"_index":871,"title":{},"body":{"modules/JobsModule.html":{}}}],["src/jobs/jobs.service.ts",{"_index":876,"title":{},"body":{"injectables/JobsService.html":{},"coverage.html":{}}}],["src/jobs/jobs.service.ts:109",{"_index":886,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:123",{"_index":885,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:17",{"_index":879,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:22",{"_index":881,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:58",{"_index":882,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:91",{"_index":884,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/schemas/job.schema.ts",{"_index":823,"title":{},"body":{"classes/Job.html":{},"classes/UserRef-3.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/jobs/schemas/job.schema.ts:12",{"_index":1492,"title":{},"body":{"classes/UserRef-3.html":{}}}],["src/jobs/schemas/job.schema.ts:15",{"_index":1493,"title":{},"body":{"classes/UserRef-3.html":{}}}],["src/jobs/schemas/job.schema.ts:21",{"_index":833,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:24",{"_index":836,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:27",{"_index":825,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:34",{"_index":835,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:37",{"_index":834,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:40",{"_index":831,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:43",{"_index":828,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:46",{"_index":832,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:49",{"_index":837,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:52",{"_index":829,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:55",{"_index":830,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:58",{"_index":826,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:61",{"_index":838,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:64",{"_index":827,"title":{},"body":{"classes/Job.html":{}}}],["src/mail/mail.controller.ts",{"_index":967,"title":{},"body":{"controllers/MailController.html":{},"coverage.html":{}}}],["src/mail/mail.controller.ts:30",{"_index":974,"title":{},"body":{"controllers/MailController.html":{}}}],["src/mail/mail.module.ts",{"_index":1030,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":1052,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1609,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/permissions/dto/create",{"_index":571,"title":{},"body":{"classes/CreatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/dto/update",{"_index":1449,"title":{},"body":{"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts",{"_index":1158,"title":{},"body":{"controllers/PermissionsController.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts:27",{"_index":1160,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:36",{"_index":1161,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:46",{"_index":1163,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:51",{"_index":1166,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:61",{"_index":1164,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.module.ts",{"_index":1179,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["src/permissions/permissions.service.ts",{"_index":1182,"title":{},"body":{"injectables/PermissionsService.html":{},"coverage.html":{}}}],["src/permissions/permissions.service.ts:100",{"_index":1189,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:125",{"_index":1188,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:17",{"_index":1184,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:22",{"_index":1185,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:44",{"_index":1186,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:80",{"_index":1187,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/schemas/permission.schema.ts",{"_index":1145,"title":{},"body":{"classes/Permission.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/permissions/schemas/permission.schema.ts:10",{"_index":1152,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:13",{"_index":1146,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:16",{"_index":1150,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:19",{"_index":1151,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:22",{"_index":1148,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:28",{"_index":1154,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:34",{"_index":1149,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:40",{"_index":1147,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:43",{"_index":1153,"title":{},"body":{"classes/Permission.html":{}}}],["src/resumes/dto/create",{"_index":580,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"coverage.html":{}}}],["src/resumes/dto/update",{"_index":808,"title":{},"body":{"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts",{"_index":1249,"title":{},"body":{"controllers/ResumesController.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts:24",{"_index":1254,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:30",{"_index":1258,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:36",{"_index":1259,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:46",{"_index":1260,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:52",{"_index":1263,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:62",{"_index":1261,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.module.ts",{"_index":1278,"title":{},"body":{"modules/ResumesModule.html":{}}}],["src/resumes/resumes.service.ts",{"_index":1281,"title":{},"body":{"injectables/ResumesService.html":{},"coverage.html":{}}}],["src/resumes/resumes.service.ts:106",{"_index":1292,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:133",{"_index":1291,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:148",{"_index":1289,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:16",{"_index":1284,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:21",{"_index":1286,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:54",{"_index":1287,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:88",{"_index":1290,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/schemas/resume.schema.ts",{"_index":1227,"title":{},"body":{"classes/Resume.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/resumes/schemas/resume.schema.ts:11",{"_index":1234,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:14",{"_index":1241,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:17",{"_index":1240,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:20",{"_index":1237,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:23",{"_index":1230,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:26",{"_index":1236,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:29",{"_index":1235,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:39",{"_index":1232,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:45",{"_index":1239,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:51",{"_index":1233,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:57",{"_index":1231,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:60",{"_index":1238,"title":{},"body":{"classes/Resume.html":{}}}],["src/roles/dto/create",{"_index":599,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/roles/dto/update",{"_index":1453,"title":{},"body":{"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts",{"_index":1320,"title":{},"body":{"controllers/RoleController.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts:25",{"_index":1323,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/roles/roles.controller.ts:31",{"_index":1324,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/roles/roles.controller.ts:41",{"_index":1325,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/roles/roles.controller.ts:47",{"_index":1328,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/roles/roles.controller.ts:57",{"_index":1326,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/roles/roles.module.ts",{"_index":1341,"title":{},"body":{"modules/RoleModule.html":{}}}],["src/roles/roles.service.ts",{"_index":1344,"title":{},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["src/roles/roles.service.ts:112",{"_index":1350,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/roles/roles.service.ts:13",{"_index":1346,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/roles/roles.service.ts:18",{"_index":1347,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/roles/roles.service.ts:41",{"_index":1348,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/roles/roles.service.ts:74",{"_index":1349,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/roles/roles.service.ts:87",{"_index":1351,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/roles/schemas/role.schema.ts",{"_index":1307,"title":{},"body":{"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/roles/schemas/role.schema.ts:10",{"_index":1313,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:13",{"_index":1311,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:16",{"_index":1312,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:19",{"_index":1314,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:22",{"_index":1309,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:28",{"_index":1316,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:34",{"_index":1310,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:40",{"_index":1308,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:43",{"_index":1315,"title":{},"body":{"classes/Role.html":{}}}],["src/subscribers/dto/create",{"_index":609,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/dto/update",{"_index":1455,"title":{},"body":{"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts",{"_index":1366,"title":{},"body":{"classes/Subscriber.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:12",{"_index":1371,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:15",{"_index":1372,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:18",{"_index":1368,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:24",{"_index":1374,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:30",{"_index":1369,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:36",{"_index":1367,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:39",{"_index":1373,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:9",{"_index":1370,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/subscribers.controller.ts",{"_index":1379,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.controller.ts:28",{"_index":1382,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:38",{"_index":1389,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:44",{"_index":1383,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:54",{"_index":1384,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:61",{"_index":1394,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:70",{"_index":1390,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.module.ts",{"_index":1412,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["src/subscribers/subscribers.service.ts",{"_index":1415,"title":{},"body":{"injectables/SubscribersService.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.service.ts:113",{"_index":1423,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:12",{"_index":1418,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:17",{"_index":1419,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:40",{"_index":1420,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:75",{"_index":1421,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:82",{"_index":1425,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:97",{"_index":1424,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/users/dto/create",{"_index":621,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"classes/company-1.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":1458,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":1465,"title":{},"body":{"classes/User.html":{},"classes/UserRef-4.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/schemas/user.schema.ts:13",{"_index":1495,"title":{},"body":{"classes/UserRef-4.html":{}}}],["src/users/schemas/user.schema.ts:16",{"_index":1496,"title":{},"body":{"classes/UserRef-4.html":{}}}],["src/users/schemas/user.schema.ts:22",{"_index":1474,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:25",{"_index":1472,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:28",{"_index":1475,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:31",{"_index":1467,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:34",{"_index":1473,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:37",{"_index":1466,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:40",{"_index":1468,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:47",{"_index":1477,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:50",{"_index":1476,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:53",{"_index":1469,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:56",{"_index":1478,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:59",{"_index":1470,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":1498,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:27",{"_index":1502,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:36",{"_index":1503,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:46",{"_index":1504,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:52",{"_index":1507,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:59",{"_index":1505,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.interface",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/JwtStrategy.html":{}}}],["src/users/users.interface.ts",{"_index":820,"title":{},"body":{"interfaces/Iuser.html":{},"coverage.html":{}}}],["src/users/users.module.ts",{"_index":1522,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":1525,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:118",{"_index":1541,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:130",{"_index":1547,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:144",{"_index":1546,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:168",{"_index":1545,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:187",{"_index":1549,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:190",{"_index":1548,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:20",{"_index":1532,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:31",{"_index":1544,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:36",{"_index":1536,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:43",{"_index":1538,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:63",{"_index":1539,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:96",{"_index":1542,"title":{},"body":{"injectables/UsersService.html":{}}}],["startdate",{"_index":538,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/UserRef-3.html":{},"classes/company.html":{}}}],["started",{"_index":1661,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1593,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":584,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/History.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"miscellaneous/variables.html":{}}}],["statuscode",{"_index":1212,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["storage",{"_index":1115,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["strategy",{"_index":946,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strict",{"_index":1049,"title":{},"body":{"modules/MailModule.html":{}}}],["string",{"_index":122,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"interfaces/Iuser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef.html":{},"classes/UserRef-1.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/company.html":{},"classes/company-1.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":558,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/company.html":{}}}],["sub",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["subject",{"_index":1017,"title":{},"body":{"controllers/MailController.html":{}}}],["subs",{"_index":997,"title":{},"body":{"controllers/MailController.html":{}}}],["subs.email",{"_index":1011,"title":{},"body":{"controllers/MailController.html":{}}}],["subs.name",{"_index":1024,"title":{},"body":{"controllers/MailController.html":{}}}],["subs.skills",{"_index":999,"title":{},"body":{"controllers/MailController.html":{}}}],["subscriber",{"_index":980,"title":{"classes/Subscriber.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{}}}],["subscriber.dto",{"_index":1397,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{}}}],["subscriber.dto.ts",{"_index":610,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["subscriber.dto.ts:14",{"_index":615,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.dto.ts:5",{"_index":613,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.dto.ts:9",{"_index":612,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.name",{"_index":1051,"title":{},"body":{"modules/MailModule.html":{},"modules/SubscribersModule.html":{}}}],["subscriberdocument",{"_index":981,"title":{},"body":{"controllers/MailController.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["subscribermodel",{"_index":989,"title":{},"body":{"controllers/MailController.html":{},"injectables/SubscribersService.html":{}}}],["subscribers",{"_index":995,"title":{},"body":{"controllers/MailController.html":{},"controllers/SubscribersController.html":{}}}],["subscribers's",{"_index":1387,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["subscribers.controller",{"_index":1413,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["subscribers.service",{"_index":1396,"title":{},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{}}}],["subscribers/subscribers.module",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["subscriberschema",{"_index":1037,"title":{},"body":{"modules/MailModule.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["subscriberschema.plugin(softdeleteplugin",{"_index":1377,"title":{},"body":{"classes/Subscriber.html":{}}}],["subscriberscontroller",{"_index":1378,"title":{"controllers/SubscribersController.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"coverage.html":{}}}],["subscribersmodule",{"_index":58,"title":{"modules/SubscribersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SubscribersModule.html":{},"modules.html":{},"overview.html":{}}}],["subscribersservice",{"_index":1395,"title":{"injectables/SubscribersService.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{},"overview.html":{}}}],["subsskills",{"_index":998,"title":{},"body":{"controllers/MailController.html":{}}}],["success",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["successfully",{"_index":468,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":919,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["super.canactivate(context",{"_index":924,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":1014,"title":{},"body":{"controllers/MailController.html":{},"modules.html":{}}}],["svg",{"_index":1696,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1088,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["t",{"_index":1110,"title":{},"body":{"injectables/MulterConfigService.html":{},"index.html":{}}}],["table",{"_index":1614,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1613,"title":{},"body":{"coverage.html":{}}}],["targetdirectory",{"_index":1081,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["targetendpoint",{"_index":931,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targetendpoint.startswith('/api/v1/auth",{"_index":937,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targetmethod",{"_index":929,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targetpath",{"_index":1125,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["team",{"_index":1015,"title":{},"body":{"controllers/MailController.html":{}}}],["temp",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["temp.permissions",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{}}}],["temp?.permissions",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["template",{"_index":1022,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["templates",{"_index":1046,"title":{},"body":{"modules/MailModule.html":{}}}],["terminusmodule",{"_index":806,"title":{},"body":{"modules/HealthModule.html":{}}}],["th",{"_index":1075,"title":{},"body":{"injectables/MulterConfigService.html":{},"index.html":{}}}],["this.authservice.login(req.user",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(response",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.processrefreshtoken(refreshtoken",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(registeruserdto",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(username",{"_index":963,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.companiesservice.create(createcompanydto",{"_index":371,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findall(+currentpage",{"_index":375,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findone(id",{"_index":378,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.remove(id",{"_index":386,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.update(id",{"_index":382,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companymodel",{"_index":436,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.create",{"_index":419,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.find(filter).countdocuments",{"_index":432,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.findbyid(id).exec",{"_index":449,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.softdelete",{"_index":480,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.configservice.get('admin_email",{"_index":1579,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.configservice.get('admin_password",{"_index":703,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.configservice.get('jwt_refresh_token_secret",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('should_init",{"_index":684,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.configservice.get('user_password",{"_index":711,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.createrefreshtoken(payload",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.db.pingcheck('database",{"_index":803,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.ensureexists(targetpath",{"_index":1129,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["this.filesservice.findall",{"_index":764,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.findone(+id",{"_index":765,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.remove(+id",{"_index":768,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.update(+id",{"_index":767,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.getrootpath",{"_index":1127,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["this.hashpassword(password",{"_index":1564,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.health.check",{"_index":802,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.jobmodel",{"_index":893,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.create",{"_index":890,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.find",{"_index":1001,"title":{},"body":{"controllers/MailController.html":{}}}],["this.jobmodel.find(filter).countdocuments",{"_index":892,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.findbyid",{"_index":896,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.softdelete",{"_index":899,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.updateone",{"_index":898,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobsservice.create(createjobdto",{"_index":862,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findall(+currentpage",{"_index":863,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findbyid(id",{"_index":864,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.remove(id",{"_index":867,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.update(id",{"_index":866,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jwtservice.sign(payload",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(refreshtoken",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log('database",{"_index":716,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.mailerservice.sendmail",{"_index":1010,"title":{},"body":{"controllers/MailController.html":{}}}],["this.permissionmodel",{"_index":1197,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.count",{"_index":689,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.create",{"_index":1193,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find({}).select",{"_index":693,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.findone",{"_index":1190,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.insertmany(init_permissions",{"_index":692,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.softdelete",{"_index":1202,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.updateone",{"_index":1201,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionsservice.create(createpermissiondto",{"_index":1172,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findall(+currentpage",{"_index":1173,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findone(id",{"_index":1174,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.remove(id",{"_index":1176,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.update(id",{"_index":1175,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.reflector.get(response_message",{"_index":1226,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["this.reflector.getallandoverride",{"_index":927,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":921,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.resumemodel",{"_index":1300,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.create",{"_index":1295,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.find(filter).countdocuments",{"_index":1299,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.findbyid",{"_index":1301,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.softdelete",{"_index":1304,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.updateone",{"_index":1302,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumesservice.create(createusercvdto",{"_index":1268,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findall(+currentpage",{"_index":1271,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findbyusers(user",{"_index":1270,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findone(id",{"_index":1272,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.remove(id",{"_index":1275,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.update(id",{"_index":1274,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.rolemodel",{"_index":1359,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolemodel.count",{"_index":691,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.create",{"_index":1355,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolemodel.find(filter).countdocuments",{"_index":1358,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolemodel.findbyid(id",{"_index":1362,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolemodel.findone",{"_index":699,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RoleService.html":{},"injectables/UsersService.html":{}}}],["this.rolemodel.insertmany",{"_index":694,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.softdelete",{"_index":1365,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolemodel.updateone",{"_index":1360,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.roleservice.create(createroledto",{"_index":1333,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.findall(+currentpage",{"_index":1334,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.findone(id",{"_index":1335,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.remove(id",{"_index":1337,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.update(id",{"_index":1336,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.rolesservice.findone(user.role._id",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.rolesservice.findone(userrole._id",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["this.subscribermodel",{"_index":1432,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.create",{"_index":1429,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.find",{"_index":996,"title":{},"body":{"controllers/MailController.html":{}}}],["this.subscribermodel.findone",{"_index":1427,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.softdelete",{"_index":1436,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.updateone",{"_index":1434,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribersservice.create(createsubscriberdto",{"_index":1401,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.findall(+currentpage",{"_index":1406,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.findone(id",{"_index":1407,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.getskills(user",{"_index":1405,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.remove(id",{"_index":1409,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.update(updatesubscriberdto",{"_index":1408,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.usermodel",{"_index":1567,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.create",{"_index":1565,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find(filter).countdocuments",{"_index":1566,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid(id",{"_index":1577,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":1562,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.softdelete",{"_index":1583,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.updateone",{"_index":1572,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersmodel.count",{"_index":687,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usersmodel.insertmany",{"_index":700,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usersservice.comparepasswords",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":1512,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall(+currentpage",{"_index":1513,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findbyusername(username",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findone(id",{"_index":1515,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.finduserbyrefreshtoken(refreshtoken",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.hashpassword",{"_index":702,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usersservice.register(user",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.remove(id",{"_index":1518,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(updateuserdto",{"_index":1517,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updaterefreshtoken",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.updaterefreshtoken(refresh_token",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["throttle",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttle(5",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttlerguard",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttlermodule",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["thông",{"_index":471,"title":{},"body":{"injectables/CompaniesService.html":{},"index.html":{}}}],["thức",{"_index":1684,"title":{},"body":{"index.html":{}}}],["tiktok",{"_index":1688,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":1144,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["timestamps",{"_index":508,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{}}}],["tin",{"_index":472,"title":{},"body":{"injectables/CompaniesService.html":{},"index.html":{}}}],["token",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["total",{"_index":447,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["totalitems",{"_index":431,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["totalpages",{"_index":433,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["tr",{"_index":1064,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["tra",{"_index":1073,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["transform",{"_index":561,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/company.html":{}}}],["transformer",{"_index":524,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{},"classes/UserRef.html":{},"classes/UserRef-1.html":{},"classes/company.html":{},"classes/company-1.html":{},"dependencies.html":{}}}],["transforminterceptor",{"_index":1220,"title":{"injectables/TransformInterceptor.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["transport",{"_index":1039,"title":{},"body":{"modules/MailModule.html":{}}}],["true",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JwtAuthGuard.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"classes/company.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["trùng",{"_index":1101,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["trước",{"_index":475,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["ttl",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["type",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"interfaces/Iuser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef.html":{},"classes/UserRef-1.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/company.html":{},"classes/company-1.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1710,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":813,"title":{},"body":{"classes/History.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/UserRef-1.html":{},"dependencies.html":{}}}],["tác",{"_index":1673,"title":{},"body":{"index.html":{}}}],["tên",{"_index":1102,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["tìm",{"_index":1679,"title":{},"body":{"index.html":{}}}],["tại",{"_index":1080,"title":{},"body":{"injectables/MulterConfigService.html":{},"index.html":{}}}],["tạo",{"_index":1074,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["tồn",{"_index":1079,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["udemy",{"_index":1692,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":915,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["unauthorizedexception('invalid",{"_index":928,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["unauthorizedexception('username/psword",{"_index":964,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":1228,"title":{},"body":{"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{}}}],["unknown",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":1707,"title":{},"body":{"properties.html":{}}}],["update",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["update(@body",{"_index":1516,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(@param('id",{"_index":766,"title":{},"body":{"controllers/FilesController.html":{}}}],["update(id",{"_index":352,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["update(updatesubscriberdto",{"_index":1391,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["update(updateuserdto",{"_index":1506,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatecompanydto",{"_index":353,"title":{"classes/UpdateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UserRef-1.html":{},"coverage.html":{}}}],["updated",{"_index":467,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["updatedat",{"_index":488,"title":{},"body":{"classes/Company.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"miscellaneous/variables.html":{}}}],["updatedby",{"_index":470,"title":{"classes/UpdatedBy.html":{}},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/History.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserRef-1.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updatedcompany",{"_index":465,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["updatedcompany.toobject",{"_index":469,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["updateduser",{"_index":865,"title":{},"body":{"controllers/JobsController.html":{},"controllers/UsersController.html":{}}}],["updatefiledto",{"_index":728,"title":{"classes/UpdateFileDto.html":{}},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["updatejobdto",{"_index":854,"title":{"classes/UpdateJobDto.html":{}},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["updatepermissiondto",{"_index":1165,"title":{"classes/UpdatePermissionDto.html":{}},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["updaterefreshtoken",{"_index":1527,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateresumedto",{"_index":815,"title":{"classes/UpdateResumeDto.html":{}},"body":{"classes/History.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["updateroledto",{"_index":1327,"title":{"classes/UpdateRoleDto.html":{}},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["updates",{"_index":788,"title":{},"body":{"injectables/FilesService.html":{}}}],["updatestatus",{"_index":1252,"title":{},"body":{"controllers/ResumesController.html":{}}}],["updatestatus(id",{"_index":1262,"title":{},"body":{"controllers/ResumesController.html":{}}}],["updatesubscriberdto",{"_index":1392,"title":{"classes/UpdateSubscriberDto.html":{}},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["updateuser",{"_index":1571,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto",{"_index":1457,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateuserdto._id",{"_index":1573,"title":{},"body":{"injectables/UsersService.html":{}}}],["upload",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uploadedfile",{"_index":737,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile",{"_index":723,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile(file",{"_index":730,"title":{},"body":{"controllers/FilesController.html":{}}}],["upsert",{"_index":1435,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["uri",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":585,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"controllers/MailController.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["useclass",{"_index":778,"title":{},"body":{"modules/FilesModule.html":{}}}],["usefactory",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["useguards",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard",{"_index":367,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/PermissionsController.html":{},"controllers/UsersController.html":{}}}],["useguards(localauthguard",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(throttlerguard",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":736,"title":{},"body":{"controllers/FilesController.html":{}}}],["useinterceptors(fileinterceptor('fileupload",{"_index":751,"title":{},"body":{"controllers/FilesController.html":{}}}],["user",{"_index":138,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef-4.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/company-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user')@responsemessage('get",{"_index":1257,"title":{},"body":{"controllers/ResumesController.html":{}}}],["user(admin",{"_index":1582,"title":{},"body":{"injectables/UsersService.html":{}}}],["user._id",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["user.dto",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":622,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"classes/company-1.html":{},"coverage.html":{}}}],["user.dto.ts:17",{"_index":1588,"title":{},"body":{"classes/company-1.html":{}}}],["user.dto.ts:20",{"_index":1589,"title":{},"body":{"classes/company-1.html":{}}}],["user.dto.ts:24",{"_index":631,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:28",{"_index":630,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:31",{"_index":632,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:34",{"_index":626,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:37",{"_index":625,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:41",{"_index":634,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:47",{"_index":628,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:51",{"_index":1207,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:55",{"_index":1206,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:58",{"_index":1208,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:61",{"_index":1204,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:64",{"_index":1203,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:67",{"_index":1209,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:73",{"_index":1483,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["user.dto.ts:78",{"_index":1482,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["user.dto.ts:9",{"_index":1460,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.email",{"_index":459,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["user.name",{"_index":659,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/UsersModule.html":{}}}],["user.password",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.permissions",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{}}}],["user.role",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.toobject",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?._id",{"_index":421,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["user?.email",{"_index":422,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["user_role",{"_index":678,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userdocument",{"_index":673,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/User.html":{},"classes/UserRef-4.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":586,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["userlogindto",{"_index":172,"title":{"classes/UserLoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"classes/company-1.html":{},"coverage.html":{}}}],["userlogindto})@post('login')@responsemessage('login",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["userm",{"_index":1550,"title":{},"body":{"injectables/UsersService.html":{}}}],["usermodel",{"_index":1533,"title":{},"body":{"injectables/UsersService.html":{}}}],["username",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef-4.html":{},"classes/company-1.html":{}}}],["userref",{"_index":493,"title":{"classes/UserRef.html":{},"classes/UserRef-1.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{}},"body":{"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/Job.html":{},"classes/UpdateCompanyDto.html":{},"classes/User.html":{},"classes/UserRef.html":{},"classes/UserRef-1.html":{},"classes/UserRef-2.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"coverage.html":{}}}],["userrole",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["userrole?._id",{"_index":713,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["users",{"_index":1499,"title":{},"body":{"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["users.controller",{"_index":1523,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.interface",{"_index":1509,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.service",{"_index":1508,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/dto/create",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["users/users.module",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["users/users.service",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{}}}],["userschema",{"_index":651,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/User.html":{},"classes/UserRef-4.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userschema.plugin(softdeleteplugin",{"_index":1480,"title":{},"body":{"classes/User.html":{},"classes/UserRef-4.html":{}}}],["userscontroller",{"_index":1497,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodel",{"_index":669,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["usersmodule",{"_index":59,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabasesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":245,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["v",{"_index":1065,"title":{},"body":{"injectables/MulterConfigService.html":{},"index.html":{}}}],["valid",{"_index":544,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"classes/company.html":{},"classes/company-1.html":{}}}],["validate",{"_index":940,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":943,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":961,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validatenested",{"_index":567,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{},"classes/company.html":{},"classes/company-1.html":{}}}],["validatenested()@isnotempty()@type(undefined",{"_index":809,"title":{},"body":{"classes/History.html":{}}}],["validateuser",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":523,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"classes/UserRef.html":{},"classes/UserRef-1.html":{},"classes/UserRef-3.html":{},"classes/UserRef-4.html":{},"classes/company.html":{},"classes/company-1.html":{},"dependencies.html":{}}}],["value",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/CreateJobDto.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RoleService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"classes/company.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1603,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1719,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1704,"title":{},"body":{"properties.html":{}}}],["viện",{"_index":1667,"title":{},"body":{"index.html":{}}}],["vnd",{"_index":1008,"title":{},"body":{"controllers/MailController.html":{}}}],["với",{"_index":1103,"title":{},"body":{"injectables/MulterConfigService.html":{},"index.html":{}}}],["website",{"_index":1682,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":1018,"title":{},"body":{"controllers/MailController.html":{}}}],["world",{"_index":124,"title":{},"body":{"injectables/AppService.html":{}}}],["xóa",{"_index":474,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["y",{"_index":1681,"title":{},"body":{"index.html":{}}}],["yes",{"_index":407,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["youtube",{"_index":1686,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RoleModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigService } from '@nestjs/config';\nimport {\n  Controller,\n  Get,\n  Post,\n  Render,\n  UseGuards,\n  Request,\n} from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { AuthGuard } from '@nestjs/passport';\nimport { LocalAuthGuard } from './auth/local-auth.guard';\nimport { AuthService } from './auth/auth.service';\nimport { JwtAuthGuard } from './auth/jwt-auth.guard';\nimport { Public } from './decorator/customize';\n\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private ConfigService: ConfigService,\n    private readonly authService: AuthService,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CompaniesModule\n                        \n                        \n                            DatabasesModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            JobsModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            PermissionsModule\n                        \n                        \n                            ResumesModule\n                        \n                        \n                            RoleModule\n                        \n                        \n                            SubscribersModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { softDeletePlugin } from 'soft-delete-plugin-mongoose';\nimport { CompaniesModule } from './companies/companies.module';\nimport { JobsModule } from './jobs/jobs.module';\nimport { FilesModule } from './files/files.module';\nimport { ResumesModule } from './resumes/resumes.module';\nimport { PermissionsModule } from './permissions/permissions.module';\nimport { RoleModule } from './roles/roles.module';\nimport { DatabasesModule } from './databases/databases.module';\nimport { SubscribersModule } from './subscribers/subscribers.module';\nimport { MailModule } from './mail/mail.module';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { ThrottlerModule } from '@nestjs/throttler';\nimport { HealthModule } from './health/health.module';\n\n@Module({\n  imports: [\n    ScheduleModule.forRoot(),\n    ThrottlerModule.forRoot({\n      ttl: 60, // 1 minute\n      limit: 10, // 10 requests per minute\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('MONGODB_URI'),\n        connectionFactory: (connection) => {\n          connection.plugin(softDeletePlugin);\n          return connection;\n        },\n      }),\n      inject: [ConfigService],\n    }),\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    UsersModule,\n    AuthModule,\n    CompaniesModule,\n    JobsModule,\n    FilesModule,\n    ResumesModule,\n    PermissionsModule,\n    RoleModule,\n    DatabasesModule,\n    SubscribersModule,\n    MailModule,\n    HealthModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                handleGetAccount\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                handleLogin\n                            \n                            \n                                    \n                                    \n                                handleLogout\n                            \n                            \n                                    \n                                    \n                                    \n                                handleRefreshToken\n                            \n                            \n                                    \n                                    \n                                    \n                                handlRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        handleGetAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleGetAccount(user: Iuser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('account')@ResponseMessage('get user info')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        handleLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleLogin(req, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@UseGuards(LocalAuthGuard)@UseGuards(ThrottlerGuard)@Throttle(5, 60)@ApiBody({type: UserLoginDto})@Post('login')@ResponseMessage('Login user')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        handleLogout\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleLogout(response: Response, user: Iuser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('logout')@ResponseMessage('Logout user')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        handleRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRefreshToken(request: Request, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('refresh')@ResponseMessage('get user info by refresh token')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        handlRegister\n                        \n                    \n                \n            \n            \n                \n                        \n                    handlRegister(RegisterUserDto: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('register')@ResponseMessage('Register a new user')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                RegisterUserDto\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { RoleService } from './../roles/roles.service';\nimport {\n  Controller,\n  Get,\n  Post,\n  Render,\n  UseGuards,\n  Body,\n  Res,\n  Req,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LocalAuthGuard } from './local-auth.guard';\nimport { Public, ResponseMessage, User } from '../decorator/customize';\n\nimport { RegisterUserDto, UserLoginDto } from '../users/dto/create-user.dto';\n\nimport { Request, Response } from 'express';\nimport { Iuser } from '@app/users/users.interface';\nimport { Throttle, ThrottlerGuard } from '@nestjs/throttler';\nimport { ApiBody, ApiTags } from '@nestjs/swagger';\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private readonly authService: AuthService,\n    private rolesService: RoleService,\n  ) {}\n  @Public()\n  @UseGuards(LocalAuthGuard)\n  @UseGuards(ThrottlerGuard)\n  @Throttle(5, 60) // 5 requests per minute\n  @ApiBody({ type: UserLoginDto })\n  @Post('login')\n  @ResponseMessage('Login user')\n  async handleLogin(\n    @Req() req,\n    @Res({ passthrough: true }) response: Response,\n  ) {\n    const accessTokenNinfo = await this.authService.login(req.user, response);\n    return accessTokenNinfo;\n  }\n  @Public()\n  @Post('register')\n  @ResponseMessage('Register a new user')\n  handlRegister(@Body() RegisterUserDto: RegisterUserDto) {\n    return this.authService.register(RegisterUserDto);\n  }\n\n  @Get('account')\n  @ResponseMessage('get user info')\n  async handleGetAccount(@User() user: Iuser) {\n    const temp = (await this.rolesService.findOne(user.role._id)) as any;\n    user.permissions = temp.permissions;\n    return { user };\n  }\n  @Public()\n  @Get('refresh')\n  @ResponseMessage('get user info by refresh token')\n  handleRefreshToken(\n    @Req() request: Request,\n    @Res({ passthrough: true }) response: Response,\n  ) {\n    const refreshToken = request.cookies['refresh_token'];\n    return this.authService.processRefreshToken(refreshToken, response);\n  }\n  @Post('logout')\n  @ResponseMessage('Logout user')\n  handleLogout(\n    @Res({ passthrough: true }) response: Response,\n    @User() user: Iuser,\n  ) {\n    return this.authService.logout(response, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nRoleModule\n\nRoleModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nRoleModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RoleModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from '../users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { LocalStrategy } from './passport/local.strategy';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtStrategy } from './passport/jwt.strategy';\nimport { AuthController } from './auth.controller';\nimport * as ms from 'ms';\nimport { RoleModule } from '@app/roles/roles.module';\n@Module({\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  imports: [\n    UsersModule,\n    RoleModule,\n    PassportModule,\n    ConfigModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('JWT_TOKEN_SECRET'),\n        signOptions: {\n          expiresIn:\n            ms(configService.get('JWT_TOKEN_EXPIRES_IN')) / 1000,\n        },\n      }),\n    }),\n  ],\n  exports: [AuthService],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createRefreshToken\n                            \n                            \n                                logout\n                            \n                            \n                                processRefreshToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService, configService: ConfigService, rolesService: RoleService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: Iuser, response: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(user: RegisterUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(username: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:153\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:93\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { RoleService } from './../roles/roles.service';\nimport { RegisterUserDto } from './../users/dto/create-user.dto';\nimport { BadRequestException, Injectable } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { Iuser } from 'src/users/users.interface';\nimport { ConfigService } from '@nestjs/config';\nimport * as ms from 'ms';\nimport { Response } from 'express';\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService,\n    private configService: ConfigService,\n    private rolesService: RoleService,\n  ) {}\n\n  async validateUser(username: string, pass: string): Promise {\n    const user = await this.usersService.findByUsername(username);\n    if (user) {\n      const isValid = await this.usersService.comparePasswords(\n        pass,\n        user.password,\n      );\n      if (isValid === true) {\n        const userRole = user.role as unknown as { _id: string; name: string };\n        const temp = (await this.rolesService.findOne(userRole._id)) as any;\n\n        const objUser = {\n          ...user.toObject(),\n          permissions: temp?.permissions ?? [],\n        };\n\n        return objUser;\n      }\n    }\n    return null;\n  }\n  async login(user: Iuser, response: Response) {\n    const { _id, name, email, role, permissions } = user;\n    const payload = {\n      sub: 'token login',\n      iss: 'from server',\n      _id,\n      name,\n      email,\n      role,\n    };\n    const refresh_token = this.createRefreshToken(payload);\n    //update user with refresh token\n    await this.usersService.updateRefreshToken(refresh_token, _id);\n    //set refresh token to cookie\n    response.cookie('refresh_token', refresh_token, {\n      httpOnly: true,\n      secure: true,\n      sameSite: 'none',\n      maxAge:\n        ms(this.configService.get('JWT_REFRESH_TOKEN_EXPIRES_IN')) *\n        1000,\n    });\n    return {\n      access_token: this.jwtService.sign(payload),\n      user: {\n        _id,\n        name,\n        email,\n        role,\n        permissions: permissions ?? [],\n      },\n    };\n  }\n  async register(user: RegisterUserDto) {\n    try {\n      let newUser = await this.usersService.register(user);\n      return {\n        _id: newUser?._id,\n        createdAt: newUser?.createdAt,\n      };\n    } catch (err) {\n      throw new Error(`Failed to register user: ${err.message}`);\n    }\n  }\n  createRefreshToken = (payload: any) => {\n    const refresh_token = this.jwtService.sign(payload, {\n      secret: this.configService.get('JWT_REFRESH_TOKEN_SECRET'),\n      expiresIn:\n        ms(this.configService.get('JWT_REFRESH_TOKEN_EXPIRES_IN')) /\n        1000,\n    });\n    return refresh_token;\n  };\n  processRefreshToken = async (refreshToken: string, response: Response) => {\n    try {\n      this.jwtService.verify(refreshToken, {\n        secret: this.configService.get('JWT_REFRESH_TOKEN_SECRET'),\n      });\n\n      let user = await this.usersService.findUserByRefreshToken(refreshToken);\n      if (user) {\n        const { _id, name, email, role } = user;\n        const payload = {\n          sub: 'token refresh',\n          iss: 'from server',\n          _id,\n          name,\n          email,\n          role,\n        };\n        //create new refresh token\n        const refresh_token = this.createRefreshToken(payload);\n        await this.usersService.updateRefreshToken(\n          refresh_token,\n          _id.toString(),\n        );\n\n        //fletch user role\n        const userRole = user.role as unknown as { _id: string; name: string };\n        const temp = (await this.rolesService.findOne(userRole._id)) as any;\n\n        //clear old refresh token before setting new one\n        response.clearCookie('refresh_token');\n        //set refresh token to cookie\n        response.cookie('refresh_token', refresh_token, {\n          httpOnly: true,\n          secure: true,\n          sameSite: 'none',\n          maxAge:\n            ms(this.configService.get('JWT_REFRESH_TOKEN_EXPIRES_IN')) *\n            1000,\n        });\n        return {\n          access_token: this.jwtService.sign(payload),\n          user: {\n            _id,\n            name,\n            email,\n            role,\n            permissions: temp?.permissions ?? [],\n          },\n        };\n      } else {\n        throw new BadRequestException(\n          'refresh token is invalid,please login again',\n        );\n      }\n    } catch (err) {\n      throw new BadRequestException(\n        'refresh token is invalid,please login again',\n      );\n    }\n  };\n  logout = async (response: Response, user: Iuser) => {\n    await this.usersService.updateRefreshToken('', user._id);\n    response.clearCookie('refresh_token');\n    return 'Logout success';\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CompaniesController.html":{"url":"controllers/CompaniesController.html","title":"controller - CompaniesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CompaniesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                companies\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCompanyDto: CreateCompanyDto, user: Iuser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Created a new company')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCompanyDto\n                                            \n                                                            CreateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, pageLimit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetching all companies with pagination')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageLimit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Get company by id')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: Iuser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete company by id')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCompanyDto: UpdateCompanyDto, user: Iuser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update company info')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCompanyDto\n                                            \n                                                            UpdateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Request,\n  Query,\n  Res,\n  UseGuards,\n} from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { Public, ResponseMessage, User } from '../decorator/customize';\nimport { Iuser } from 'src/users/users.interface';\nimport { JwtAuthGuard } from '@app/auth/jwt-auth.guard';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('Companies')\n@Controller('companies')\n@UseGuards(JwtAuthGuard)\nexport class CompaniesController {\n  constructor(private readonly companiesService: CompaniesService) {}\n  @Post()\n  @ResponseMessage('Created a new company')\n  create(@Body() createCompanyDto: CreateCompanyDto, @User() user: Iuser) {\n    return this.companiesService.create(createCompanyDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetching all companies with pagination')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') pageLimit: string,\n    @Query() qs: string,\n  ) {\n    return this.companiesService.findAll(+currentPage, +pageLimit, qs);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Get company by id')\n  findOne(@Param('id') id: string) {\n    return this.companiesService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update company info')\n  update(\n    @Param('id') id: string,\n    @Body() updateCompanyDto: UpdateCompanyDto,\n    @User() user: Iuser,\n  ) {\n    return this.companiesService.update(id, updateCompanyDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete company by id')\n  remove(@Param('id') id: string, @User() user: Iuser) {\n    return this.companiesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompaniesModule.html":{"url":"modules/CompaniesModule.html","title":"module - CompaniesModule","body":"\n                   \n\n\n\n\n    Modules\n    CompaniesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_exports\n\n\n\ncluster_CompaniesModule_providers\n\n\n\n\nCompaniesService \n\nCompaniesService \n\n\n\nCompaniesModule\n\nCompaniesModule\n\nCompaniesService  -->\n\nCompaniesModule->CompaniesService \n\n\n\n\n\nCompaniesService\n\nCompaniesService\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/companies/companies.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CompaniesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CompaniesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CompaniesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CompaniesController } from './companies.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Company, CompanySchema } from './schemas/company.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Company.name, schema: CompanySchema }]),\n  ],\n  controllers: [CompaniesController],\n  providers: [CompaniesService],\n  exports: [CompaniesService],\n})\nexport class CompaniesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompaniesService.html":{"url":"injectables/CompaniesService.html","title":"injectable - CompaniesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CompaniesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(companyModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/companies/companies.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        companyModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCompanyDto: CreateCompanyDto, user: Iuser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCompanyDto\n                                            \n                                                            CreateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCompanyDto: UpdateCompanyDto, user: Iuser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCompanyDto\n                                            \n                                                            UpdateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Company, CompanyDocument } from './schemas/company.schema';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { Iuser } from 'src/users/users.interface';\nimport mongoose from 'mongoose';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class CompaniesService {\n  constructor(\n    @InjectModel(Company.name)\n    private companyModel: SoftDeleteModel,\n  ) {}\n\n  async create(createCompanyDto: CreateCompanyDto, user: Iuser) {\n    const { name, address, description, logo } = createCompanyDto;\n    let newCompany = await this.companyModel.create({\n      name,\n      address,\n      description,\n      logo,\n      createdBy: {\n        _id: user?._id,\n        email: user?.email,\n      },\n    });\n    return newCompany;\n  }\n\n  async findAll(currentPage: number = 1, limit: number = 10, qs: string) {\n    try {\n      const { filter, sort, population } = aqp(qs);\n      delete filter.current;\n      delete filter.pageSize;\n\n      const offset = (+currentPage - 1) * +limit;\n      const defaultLimit = +limit ? +limit : 10;\n\n      const totalItems = await this.companyModel.find(filter).countDocuments();\n      const totalPages = Math.ceil(totalItems / defaultLimit);\n\n      const result = await this.companyModel\n        .find(filter)\n        .skip(offset)\n        .limit(defaultLimit)\n        .sort(sort as any)\n        .populate(population)\n        .exec();\n      return {\n        meta: {\n          current: currentPage,\n          pageSize: limit,\n          pages: totalPages,\n          total: totalItems,\n        },\n        result,\n      };\n    } catch (err) {\n      throw new Error(`Failed to fetch companies: ${err.message}`);\n    }\n  }\n\n  async findOne(id: string) {\n    try {\n      const company = await this.companyModel.findById(id).exec();\n      if (!mongoose.Types.ObjectId.isValid(id)) {\n        throw new BadRequestException('Invalid company ID');\n      }\n      return company;\n    } catch (err) {\n      return { message: 'Company not found' };\n    }\n  }\n\n  async update(id: string, updateCompanyDto: UpdateCompanyDto, user: Iuser) {\n    try {\n      const company = await this.companyModel.findById(id).exec();\n\n      if (!company) {\n        return { message: 'Company not found' };\n      }\n\n      // Cập nhật dữ liệu\n      Object.assign(company, updateCompanyDto);\n\n      if (user && user._id && user.email) {\n        company.updatedBy = {\n          _id: new mongoose.Types.ObjectId(user._id),\n          email: user.email,\n        };\n      }\n\n      // Lưu lại document\n      const updatedCompany = await company.save();\n\n      return {\n        message: 'Company updated successfully',\n        company: { ...updatedCompany.toObject(), updatedBy: company.updatedBy },\n      };\n    } catch (err) {\n      throw new Error(`Failed to update company: ${err.message}`);\n    }\n  }\n\n  async remove(id: string, user?: any) {\n    try {\n      const company = await this.companyModel.findById(id).exec();\n\n      if (!company) {\n        return { message: 'Company not found' };\n      }\n      // Cập nhật thông tin người xóa trước khi xóa mềm\n      if (user && user._id && user.email) {\n        company.deletedBy = {\n          _id: new mongoose.Types.ObjectId(user._id),\n          email: user.email,\n        };\n        await company.save(); // Lưu thông tin người xóa\n      }\n\n      const deletedCompany = await this.companyModel.softDelete({ _id: id });\n\n      if (!deletedCompany || deletedCompany.deleted === 0) {\n        return { message: 'Company not found' };\n      }\n      const updatedCompany = await this.companyModel.findById(id).exec();\n      return {\n        message: 'Company deleted successfully',\n        deletedCount: deletedCompany.deleted,\n        deletedCompany: updatedCompany,\n      };\n    } catch (err) {\n      throw new Error(`Failed to delete company: ${err.message}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company.html":{"url":"classes/Company.html","title":"class - Company","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/schemas/company.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: UserRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: UserRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: UserRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument, SchemaTypes } from 'mongoose';\nimport { softDeletePlugin } from 'soft-delete-plugin-mongoose';\n\nexport type CompanyDocument = HydratedDocument;\n\nclass UserRef {\n  @Prop({ type: mongoose.Schema.Types.ObjectId })\n  _id: mongoose.Types.ObjectId;\n\n  @Prop({ type: String })\n  email: string;\n}\n\n@Schema({ timestamps: true })\nexport class Company {\n  @Prop({ required: true })\n  name: string;\n\n  @Prop()\n  address: string;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  logo: string;\n\n  @Prop({ type: UserRef })\n  createdBy: UserRef;\n\n  @Prop({ type: UserRef })\n  updatedBy: UserRef;\n\n  @Prop({ type: UserRef })\n  deletedBy: UserRef;\n\n  @Prop()\n  createdAt: Date;\n  @Prop()\n  updatedAt: Date;\n}\n\nexport const CompanySchema = SchemaFactory.createForClass(Company);\n\nCompanySchema.plugin(softDeletePlugin);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCompanyDto.html":{"url":"classes/CreateCompanyDto.html","title":"class - CreateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/create-company.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                logo\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Company address is required'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Company description is required'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Company logo is required'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Company name is required'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional, IsString } from 'class-validator';\nimport { Type } from 'class-transformer';\n\nclass UserRef {\n  @IsString()\n  _id: string;\n\n  @IsString()\n  email: string;\n}\n\nexport class CreateCompanyDto {\n  @IsNotEmpty({ message: 'Company name is required' })\n  @IsString()\n  name: string;\n\n  @IsNotEmpty({ message: 'Company address is required' })\n  @IsString()\n  address: string;\n\n  @IsNotEmpty({ message: 'Company description is required' })\n  @IsString()\n  description: string;\n\n  @IsNotEmpty({ message: 'Company logo is required' })\n  @IsString()\n  logo: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFileDto.html":{"url":"classes/CreateFileDto.html","title":"class - CreateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/create-file.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateFileDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateJobDto.html":{"url":"classes/CreateJobDto.html","title":"class - CreateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                endDate\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                    \n                                    \n                                skills\n                            \n                            \n                                    \n                                    \n                                    \n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'description is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'endDate is required'})@Transform( => )@IsDate({message: 'endDate must be a valid date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'isActive is required'})@IsBoolean({message: 'isActive must be a boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'level is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'location is required'})@IsString({message: 'location must be a string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'name is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'quantity is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'salary is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'skills is required'})@IsArray({message: 'skills must be an array'})@IsString({each: true, message: 'skills must be an array of strings'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'startDate is required'})@Transform( => )@IsDate({message: 'startDate must be a valid date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform, Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsBoolean,\n  IsDate,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\nclass company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n\n  @IsNotEmpty()\n  logo: string;\n}\nexport class CreateJobDto {\n  @IsNotEmpty({ message: 'name is required' })\n  name: string;\n\n  @IsNotEmpty({ message: 'skills is required' })\n  @IsArray({ message: 'skills must be an array' })\n  @IsString({ each: true, message: 'skills must be an array of strings' })\n  skills: string[];\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => company)\n  company: company;\n\n  @IsNotEmpty({ message: 'salary is required' })\n  salary: number;\n\n  @IsNotEmpty({ message: 'quantity is required' })\n  quantity: string;\n\n  @IsNotEmpty({ message: 'level is required' })\n  level: string;\n\n  @IsNotEmpty({ message: 'description is required' })\n  description: string;\n\n  @IsNotEmpty({ message: 'location is required' })\n  @IsString({ message: 'location must be a string' })\n  location: string;\n\n  @IsNotEmpty({ message: 'startDate is required' })\n  @Transform(({ value }) => new Date(value))\n  @IsDate({ message: 'startDate must be a valid date' })\n  startDate: Date;\n\n  @IsNotEmpty({ message: 'endDate is required' })\n  @Transform(({ value }) => new Date(value))\n  @IsDate({ message: 'endDate must be a valid date' })\n  endDate: Date;\n\n  @IsNotEmpty({ message: 'isActive is required' })\n  @IsBoolean({ message: 'isActive must be a boolean' })\n  isActive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePermissionDto.html":{"url":"classes/CreatePermissionDto.html","title":"class - CreatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/create-permission.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'apiPath is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'method is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'module is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'name is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class CreatePermissionDto {\n  @IsNotEmpty({ message: 'name is required' })\n  name: string;\n\n  @IsNotEmpty({ message: 'apiPath is required' })\n  apiPath: string;\n\n  @IsNotEmpty({ message: 'method is required' })\n  method: string;\n\n  @IsNotEmpty({ message: 'module is required' })\n  module: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateResumeDto.html":{"url":"classes/CreateResumeDto.html","title":"class - CreateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyId\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Resume companyId is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Resume JobId is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Resume status is required'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Resume name is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Resume name is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsOptional,\n  IsString,\n  IsArray,\n  IsObject,\n  IsNotEmpty,\n  IsMongoId,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport mongoose from 'mongoose';\n\nexport class CreateResumeDto {\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty({ message: 'Resume name is required' })\n  userId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'Resume name is required' })\n  url: string;\n\n  @IsNotEmpty({ message: 'Resume status is required' })\n  @IsString()\n  status: string;\n\n  @IsNotEmpty({ message: 'Resume companyId is required' })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'Resume JobId is required' })\n  jobId: mongoose.Schema.Types.ObjectId;\n}\n\nexport class CreateUserCvDto {\n  @IsNotEmpty({ message: 'Resume name is required' })\n  url: string;\n\n  @IsNotEmpty({ message: 'Resume companyId is required' })\n  @IsMongoId({ message: 'companyId must be a valid ObjectId' })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'Resume JobId is required' })\n  @IsMongoId({ message: 'JobId must be a valid ObjectId' })\n  jobId: mongoose.Schema.Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                permissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'description is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'isActive is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'name is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'permission is required'})@IsMongoId({each: true, message: 'permission must be a valid ObjectId'})@IsArray({message: 'permission must be an array'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsMongoId, IsNotEmpty } from 'class-validator';\nimport mongoose from 'mongoose';\n\nexport class CreateRoleDto {\n  @IsNotEmpty({ message: 'name is required' })\n  name: string;\n\n  @IsNotEmpty({ message: 'description is required' })\n  description: string;\n\n  @IsNotEmpty({ message: 'isActive is required' })\n  isActive: boolean;\n\n  @IsNotEmpty({ message: 'permission is required' })\n  @IsMongoId({ each: true, message: 'permission must be a valid ObjectId' })\n  @IsArray({ message: 'permission must be an array' })\n  permissions: mongoose.Schema.Types.ObjectId[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSubscriberDto.html":{"url":"classes/CreateSubscriberDto.html","title":"class - CreateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/create-subscriber.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                skills\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Email is required'})@IsEmail({}, {message: 'Email is not valid'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Skills are required'})@IsArray({message: 'Skills must be an array'})@IsString({each: true, message: 'Each skill must be a string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateSubscriberDto {\n  @IsNotEmpty({ message: 'Name is required' })\n  name: string;\n\n  @IsNotEmpty({ message: 'Email is required' })\n  @IsEmail({}, { message: 'Email is not valid' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Skills are required' })\n  @IsArray({ message: 'Skills must be an array' })\n  @IsString({ each: true, message: 'Each skill must be a string' })\n  skills: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCvDto.html":{"url":"classes/CreateUserCvDto.html","title":"class - CreateUserCvDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCvDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                companyId\n                            \n                            \n                                    \n                                    \n                                jobId\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Resume companyId is required'})@IsMongoId({message: 'companyId must be a valid ObjectId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Resume JobId is required'})@IsMongoId({message: 'JobId must be a valid ObjectId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Resume name is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsOptional,\n  IsString,\n  IsArray,\n  IsObject,\n  IsNotEmpty,\n  IsMongoId,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport mongoose from 'mongoose';\n\nexport class CreateResumeDto {\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty({ message: 'Resume name is required' })\n  userId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'Resume name is required' })\n  url: string;\n\n  @IsNotEmpty({ message: 'Resume status is required' })\n  @IsString()\n  status: string;\n\n  @IsNotEmpty({ message: 'Resume companyId is required' })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'Resume JobId is required' })\n  jobId: mongoose.Schema.Types.ObjectId;\n}\n\nexport class CreateUserCvDto {\n  @IsNotEmpty({ message: 'Resume name is required' })\n  url: string;\n\n  @IsNotEmpty({ message: 'Resume companyId is required' })\n  @IsMongoId({ message: 'companyId must be a valid ObjectId' })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'Resume JobId is required' })\n  @IsMongoId({ message: 'JobId must be a valid ObjectId' })\n  jobId: mongoose.Schema.Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Address is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Age is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty({message: 'Email is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Password is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Role is required'})@IsMongoId({message: 'Role must be a valid MongoDB ObjectId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose, { Schema } from 'mongoose';\n\nclass company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n}\nexport class CreateUserDto {\n  @IsNotEmpty({ message: 'Name is required' })\n  name: string;\n\n  @IsEmail()\n  @IsNotEmpty({ message: 'Email is required' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Password is required' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Age is required' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Address is required' })\n  address: string;\n\n  @IsNotEmpty({ message: 'Role is required' })\n  @IsMongoId({ message: 'Role must be a valid MongoDB ObjectId' })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @IsOptional()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => company)\n  company: company;\n}\nexport class RegisterUserDto {\n  @IsNotEmpty()\n  name: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsNotEmpty()\n  password: string;\n\n  @IsNotEmpty()\n  age: number;\n\n  @IsNotEmpty()\n  address: string;\n\n  @IsNotEmpty()\n  role: string;\n}\nexport class UserLoginDto {\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({ example: 'ducduy', description: 'Username of user' })\n  readonly username: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({ example: '123456', description: 'Password of user' })\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DatabasesController.html":{"url":"controllers/DatabasesController.html","title":"controller - DatabasesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DatabasesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                databases\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\n\n@Controller('databases')\nexport class DatabasesController {\n  constructor(private readonly databasesService: DatabasesService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabasesModule.html":{"url":"modules/DatabasesModule.html","title":"module - DatabasesModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabasesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_imports\n\n\n\ncluster_DatabasesModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nDatabasesModule -->\n\nUsersModule->DatabasesModule\n\n\n\n\n\nDatabasesService\n\nDatabasesService\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/databases/databases.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabasesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DatabasesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\nimport { DatabasesController } from './databases.controller';\nimport { mongo } from 'mongoose';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { User, UserSchema } from '@app/users/schemas/user.schema';\nimport {\n  Permission,\n  PermissionSchema,\n} from '@app/permissions/schemas/permission.schema';\nimport { Role, RoleSchema } from '@app/roles/schemas/role.schema';\nimport { UsersService } from '@app/users/users.service';\nimport { UsersModule } from '@app/users/users.module';\n\n@Module({\n  controllers: [DatabasesController],\n  providers: [DatabasesService, UsersService],\n  imports: [\n    UsersModule,\n    MongooseModule.forFeature([\n      { name: User.name, schema: UserSchema },\n      { name: Permission.name, schema: PermissionSchema },\n      { name: Role.name, schema: RoleSchema },\n    ]),\n  ],\n})\nexport class DatabasesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabasesService.html":{"url":"injectables/DatabasesService.html","title":"injectable - DatabasesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabasesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(UsersModel: SoftDeleteModel, permissionModel: SoftDeleteModel, roleModel: SoftDeleteModel, ConfigService: ConfigService, UsersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/databases/databases.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        UsersModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ConfigService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        UsersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/databases/databases.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DatabasesService.name)\n                    \n                \n                    \n                        \n                                Defined in src/databases/databases.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { UsersService } from './../users/users.service';\nimport { ConfigService } from '@nestjs/config';\nimport { permission } from 'process';\nimport { User, UserDocument } from '@app/users/schemas/user.schema';\nimport { Injectable, Logger, OnModuleInit } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport {\n  Permission,\n  PermissionDocument,\n} from '@app/permissions/schemas/permission.schema';\nimport { Role, roleDocument } from '@app/roles/schemas/role.schema';\nimport { ADMIN_ROLE, INIT_PERMISSIONS, USER_ROLE } from './example';\n\n@Injectable()\nexport class DatabasesService implements OnModuleInit {\n  private readonly logger = new Logger(DatabasesService.name);\n  constructor(\n    @InjectModel(User.name)\n    private UsersModel: SoftDeleteModel,\n\n    @InjectModel(Permission.name)\n    private permissionModel: SoftDeleteModel,\n\n    @InjectModel(Role.name)\n    private roleModel: SoftDeleteModel,\n\n    private ConfigService: ConfigService,\n    private UsersService: UsersService,\n  ) {}\n  async onModuleInit() {\n    const isInit = this.ConfigService.get('SHOULD_INIT');\n    if (Boolean(isInit)) {\n      const countUser = await this.UsersModel.count({});\n      const countPermission = await this.permissionModel.count({});\n      const countRole = await this.roleModel.count({});\n\n      if (countPermission === 0) {\n        await this.permissionModel.insertMany(INIT_PERMISSIONS);\n      }\n\n      if (countRole === 0) {\n        const permissions = await this.permissionModel.find({}).select(' _id');\n        await this.roleModel.insertMany([\n          {\n            name: ADMIN_ROLE,\n            description: 'Admin role has full access',\n            isActive: true,\n            permissions: permissions,\n          },\n          {\n            name: USER_ROLE,\n            description: 'User role',\n            isActive: true,\n            permissions: [],\n          },\n        ]);\n      }\n\n      if (countUser === 0) {\n        const adminRole = await this.roleModel.findOne({ name: ADMIN_ROLE });\n        const userRole = await this.roleModel.findOne({ name: USER_ROLE });\n\n        await this.UsersModel.insertMany([\n          {\n            name: 'admin',\n            email: 'duongducduy825@gmail.com',\n            password: await this.UsersService.hashPassword(\n              this.ConfigService.get('ADMIN_PASSWORD'),\n            ),\n            age: 20,\n            gender: 'male',\n            address: 'Hà Nội',\n            role: adminRole?._id,\n          },\n          {\n            name: 'user',\n            email: '12345@gmail.com',\n            password: await this.UsersService.hashPassword(\n              this.ConfigService.get('USER_PASSWORD'),\n            ),\n            age: 20,\n            gender: 'female',\n            address: 'Hà Nội',\n            role: userRole?._id,\n          },\n          {\n            name: 'duy',\n            email: '54321@gmail.com',\n            password: await this.UsersService.hashPassword(\n              this.ConfigService.get('USER_PASSWORD'),\n            ),\n            age: 20,\n            gender: 'male',\n            address: 'Hà Nội',\n            role: userRole?._id,\n          },\n        ]);\n      }\n      if (countUser > 0 && countRole > 0 && countPermission > 0) {\n        this.logger.log('Database is already initialized');\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/File.html":{"url":"classes/File.html","title":"class - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/entities/file.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class File {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesController.html":{"url":"controllers/FilesController.html","title":"controller - FilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                files\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Get all files')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Get a file by id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a file by id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateFileDto: UpdateFileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update a file by id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFileDto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('upload')@ResponseMessage('Upload a file')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { fileName: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseInterceptors,\n  UploadedFile,\n  ParseArrayPipe,\n  ParseFilePipeBuilder,\n  HttpStatus,\n} from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { CreateFileDto } from './dto/create-file.dto';\nimport { UpdateFileDto } from './dto/update-file.dto';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { Public, ResponseMessage } from '@app/decorator/customize';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('Files')\n@Controller('files')\nexport class FilesController {\n  constructor(private readonly filesService: FilesService) {}\n  @Public()\n  @Post('upload')\n  @ResponseMessage('Upload a file')\n  @UseInterceptors(FileInterceptor('fileUpload'))\n  uploadFile(\n    @UploadedFile(\n      new ParseFilePipeBuilder()\n        .addFileTypeValidator({\n          fileType:\n            /^(image\\/(png|jpg|jpeg|gif)|text\\/plain|application\\/pdf|application\\/msword|application\\/vnd\\.openxmlformats-officedocument\\.wordprocessingml\\.document)$/,\n        })\n        .addMaxSizeValidator({\n          maxSize: 1024 * 1024 * 5, // 5MB\n        })\n        .build({ errorHttpStatusCode: HttpStatus.UNPROCESSABLE_ENTITY }),\n    )\n    file: Express.Multer.File,\n  ) {\n    return {\n      fileName: file.filename,\n    };\n  }\n\n  @Get()\n  @ResponseMessage('Get all files')\n  findAll() {\n    return this.filesService.findAll();\n  }\n\n  @Get(':id')\n  @ResponseMessage('Get a file by id')\n  findOne(@Param('id') id: string) {\n    return this.filesService.findOne(+id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update a file by id')\n  update(@Param('id') id: string, @Body() updateFileDto: UpdateFileDto) {\n    return this.filesService.update(+id, updateFileDto);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete a file by id')\n  remove(@Param('id') id: string) {\n    return this.filesService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nFilesService\n\nFilesService\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/files/files.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { FilesController } from './files.controller';\nimport { Multer } from 'multer';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { MulterConfigService } from './multer.config';\n\n@Module({\n  controllers: [FilesController],\n  providers: [FilesService],\n  imports: [\n    MulterModule.registerAsync({\n      useClass: MulterConfigService,\n    }),\n  ],\n})\nexport class FilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesService.html":{"url":"injectables/FilesService.html","title":"injectable - FilesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createFileDto: CreateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createFileDto\n                                            \n                                                            CreateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateFileDto: UpdateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFileDto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateFileDto } from './dto/create-file.dto';\nimport { UpdateFileDto } from './dto/update-file.dto';\n\n@Injectable()\nexport class FilesService {\n  create(createFileDto: CreateFileDto) {\n    return 'This action adds a new file';\n  }\n\n  findAll() {\n    return `This action returns all files`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} file`;\n  }\n\n  update(id: number, updateFileDto: UpdateFileDto) {\n    return `This action updates a #${id} file`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} file`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@HealthCheck()\n                \n            \n\n                    \n                        \n                            Defined in src/health/health.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport {\n  HealthCheck,\n  HealthCheckService,\n  MongooseHealthIndicator,\n} from '@nestjs/terminus';\nimport { Public } from '@app/decorator/customize';\n\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private db: MongooseHealthIndicator,\n  ) {}\n\n  @Get()\n  @Public()\n  @HealthCheck()\n  check() {\n    return this.health.check([() => this.db.pingCheck('database')]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HealthController } from './health.controller';\nimport { TerminusModule } from '@nestjs/terminus';\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/History.html":{"url":"classes/History.html","title":"class - History","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  History\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                UpdatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        UpdatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdatedBy\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@IsNotEmpty()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateResumeDto } from './create-resume.dto';\nimport { IsArray, IsEmail, IsNotEmpty, ValidateNested } from 'class-validator';\nimport mongoose, { mongo } from 'mongoose';\nimport { Type } from 'class-transformer';\n\nclass UpdatedBy {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n}\n\nclass History {\n  @IsNotEmpty()\n  status: string;\n\n  @IsNotEmpty()\n  updatedAt: Date;\n\n  @ValidateNested()\n  @IsNotEmpty()\n  @Type(() => UpdatedBy)\n  UpdatedBy: UpdatedBy;\n}\nexport class UpdateResumeDto extends PartialType(CreateResumeDto) {\n  @IsNotEmpty({ message: 'Resume history is required' })\n  @IsArray({ message: 'Resume history must be an array' })\n  @ValidateNested()\n  @Type(() => History)\n  history: History[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Iuser.html":{"url":"interfaces/Iuser.html","title":"interface - Iuser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Iuser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { permission } from 'process';\nexport interface Iuser {\n  _id: string;\n  email: string;\n  name: string;\n  role: {\n    _id: string;\n    name: string;\n  };\n  permissions?: {\n    _id: string;\n    name: string;\n    apiPath: string;\n    module: string;\n  }[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Job.html":{"url":"classes/Job.html","title":"class - Job","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Job\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/schemas/job.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                endDate\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                startDate\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: UserRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: UserRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean, default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: UserRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:61\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail } from 'class-validator';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument, mongo } from 'mongoose';\nimport { softDeletePlugin } from 'soft-delete-plugin-mongoose';\n\nexport type JobDocument = HydratedDocument & {\n  createdAt: Date;\n  updatedAt: Date;\n};\nclass UserRef {\n  @Prop({ type: mongoose.Schema.Types.ObjectId })\n  _id: mongoose.Types.ObjectId;\n\n  @Prop({ type: String })\n  email: string;\n}\n\n@Schema({ timestamps: true })\nexport class Job {\n  @Prop({ required: true })\n  name: string;\n\n  @Prop({ required: true })\n  skills: string[];\n\n  @Prop({ type: Object })\n  company: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    logo: string;\n  };\n\n  @Prop()\n  salary: number;\n\n  @Prop()\n  quantity: string;\n\n  @Prop()\n  level: string;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  location: string;\n\n  @Prop()\n  startDate: Date;\n\n  @Prop()\n  endDate: Date;\n\n  @Prop({ type: Boolean, default: true })\n  isActive: boolean;\n\n  @Prop({ type: UserRef })\n  createdBy: UserRef;\n\n  @Prop({ type: UserRef })\n  updatedBy: UserRef;\n\n  @Prop({ type: UserRef })\n  deletedBy: UserRef;\n}\n\nexport const JobSchema = SchemaFactory.createForClass(Job);\n\nJobSchema.plugin(softDeletePlugin);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/JobsController.html":{"url":"controllers/JobsController.html","title":"controller - JobsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  JobsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                jobs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createJobDto: CreateJobDto, user: Iuser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new job')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createJobDto\n                                            \n                                                            CreateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, pageLimit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get()@ResponseMessage('Fetching all job with pagination')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageLimit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get(':id')@ResponseMessage('Get job by id')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: Iuser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete job by id')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateJobDto: UpdateJobDto, user: Iuser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update user info')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateJobDto\n                                            \n                                                            UpdateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n  UseGuards,\n} from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport { Public, ResponseMessage, User } from '@app/decorator/customize';\nimport { Iuser } from '@app/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Jobs')\n@Controller('jobs')\nexport class JobsController {\n  constructor(private readonly jobsService: JobsService) {}\n\n  @Post()\n  @ResponseMessage('Create a new job')\n  create(@Body() createJobDto: CreateJobDto, @User() user: Iuser) {\n    return this.jobsService.create(createJobDto, user);\n  }\n  @Public()\n  @Get()\n  @ResponseMessage('Fetching all job with pagination')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') pageLimit: string,\n    @Query() qs: string,\n  ) {\n    return this.jobsService.findAll(+currentPage, +pageLimit, qs);\n  }\n  @Public()\n  @Get(':id')\n  @ResponseMessage('Get job by id')\n  findOne(@Param('id') id: string) {\n    return this.jobsService.findById(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update user info')\n  async update(\n    @Param('id') id: string,\n    @Body() updateJobDto: UpdateJobDto,\n    @User() user: Iuser,\n  ) {\n    let updatedUser = await this.jobsService.update(id, updateJobDto, user);\n    return updatedUser;\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete job by id')\n  remove(@Param('id') id: string, @User() user: Iuser) {\n    return this.jobsService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JobsModule.html":{"url":"modules/JobsModule.html","title":"module - JobsModule","body":"\n                   \n\n\n\n\n    Modules\n    JobsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_exports\n\n\n\ncluster_JobsModule_providers\n\n\n\n\nJobsService \n\nJobsService \n\n\n\nJobsModule\n\nJobsModule\n\nJobsService  -->\n\nJobsModule->JobsService \n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/jobs/jobs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JobsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            JobsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JobsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { JobsController } from './jobs.controller';\nimport { Mongoose } from 'mongoose';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { JobSchema, Job as JobM } from './schemas/job.schema';\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: JobM.name, schema: JobSchema }]),\n  ],\n  controllers: [JobsController],\n  providers: [JobsService],\n  exports: [JobsService],\n})\nexport class JobsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JobsService.html":{"url":"injectables/JobsService.html","title":"injectable - JobsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JobsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jobModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/jobs/jobs.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jobModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createJobDto: CreateJobDto, user: Iuser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createJobDto\n                                            \n                                                            CreateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: Iuser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateJobDto: UpdateJobDto, user: Iuser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateJobDto\n                                            \n                                                            UpdateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport { Iuser } from '@app/users/users.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { JobDocument, Job as JobM } from './schemas/job.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\nimport { User } from '@app/decorator/customize';\n\n@Injectable()\nexport class JobsService {\n  constructor(\n    @InjectModel(JobM.name)\n    private jobModel: SoftDeleteModel,\n  ) {}\n  async create(createJobDto: CreateJobDto, user: Iuser) {\n    const {\n      name,\n      skills,\n      company,\n      salary,\n      quantity,\n      level,\n      description,\n      startDate,\n      endDate,\n      isActive,\n      location,\n    } = createJobDto;\n\n    let newJob = await this.jobModel.create({\n      name,\n      skills,\n      company,\n      salary,\n      quantity,\n      level,\n      description,\n      startDate,\n      endDate,\n      isActive,\n      location,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n    return newJob;\n  }\n\n  //find all job by pagination\n  async findAll(currentPage: number = 1, limit: number = 10, qs: string) {\n    try {\n      const { filter, sort, population } = aqp(qs);\n      delete filter.current;\n      delete filter.pageSize;\n\n      const offset = (+currentPage - 1) * +limit;\n      const defaultLimit = +limit ? +limit : 10;\n\n      const totalItems = await this.jobModel.find(filter).countDocuments();\n      const totalPages = Math.ceil(totalItems / defaultLimit);\n\n      const result = await this.jobModel\n        .find(filter)\n        .skip(offset)\n        .limit(defaultLimit)\n        .sort(sort as any)\n        .populate(population)\n        .exec();\n      return {\n        meta: {\n          current: currentPage,\n          pageSize: limit,\n          pages: totalPages,\n          total: totalItems,\n        },\n        result,\n      };\n    } catch (err) {\n      throw new Error(`Failed to fetch job: ${err.message}`);\n    }\n  }\n  //findJobById\n  async findById(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`Invalid job ID: ${id}`);\n    }\n\n    try {\n      const Job = await this.jobModel.findById({ _id: id }).exec();\n\n      if (!Job) {\n        throw new NotFoundException(`Job with ID ${id} not found`);\n      }\n\n      return Job;\n    } catch (err) {\n      throw new Error(`Failed to fetch Job by ID: ${err.message}`);\n    }\n  }\n\n  async update(id: string, updateJobDto: UpdateJobDto, @User() user: Iuser) {\n    const updated = await this.jobModel.updateOne(\n      { _id: id },\n      {\n        ...updateJobDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return updated;\n  }\n\n  async remove(id: string, user: Iuser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`Invalid job ID: ${id}`);\n    }\n    await this.jobModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.jobModel.softDelete({ _id: id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt-auth.guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-auth.guard.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info, context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-auth.guard.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { permission } from 'process';\nimport { Request } from 'express';\nimport {\n  ExecutionContext,\n  ForbiddenException,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { IS_PUBLIC_KEY, IS_PUBLIC_PERMISSION } from '../decorator/customize';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n  canActivate(context: ExecutionContext) {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      return true;\n    }\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user, info, context: ExecutionContext) {\n    const request: Request = context.switchToHttp().getRequest();\n    const isSkipPermission = this.reflector.getAllAndOverride(\n      IS_PUBLIC_PERMISSION,\n      [context.getHandler(), context.getClass()],\n    );\n    if (err || !user) {\n      throw err || new UnauthorizedException('invalid token');\n    }\n    //check permissions\n    const targetMethod = request.method;\n\n    const targetEndpoint = request.route?.path as string;\n\n    const permission = user.permissions ?? [];\n    let isExits = permission.find(\n      (permission) =>\n        targetMethod === permission.method &&\n        targetEndpoint === permission.apiPath,\n    );\n    if (targetEndpoint.startsWith('/api/v1/auth')) isExits = true;\n    if (!isExits && !isSkipPermission) {\n      throw new ForbiddenException(\n        `You do not have permission to access ${targetMethod} ${targetEndpoint}`,\n      );\n    }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, rolesService: RoleService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/jwt.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: Iuser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/jwt.strategy.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { RoleService } from './../../roles/roles.service';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Iuser } from 'src/users/users.interface';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private configService: ConfigService,\n    private rolesService: RoleService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('JWT_TOKEN_SECRET'),\n    });\n  }\n\n  async validate(payload: Iuser) {\n    const { _id, name, email, role } = payload;\n\n    const userRole = role as unknown as { _id: string; name: string };\n    const temp = (await this.rolesService.findOne(userRole._id)) as any;\n\n    //req.user = payload;\n    return { _id, name, email, role, permissions: temp?.permissions ?? [] };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('local')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/local.strategy.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string, password: string): Promise {\n    const user = await this.authService.validateUser(username, password);\n    if (!user || 'message' in user) {\n      throw new UnauthorizedException('username/psword is not correct');\n    }\n    return user; //req.user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MailController.html":{"url":"controllers/MailController.html","title":"controller - MailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                mail\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                handleTestEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        handleTestEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleTestEmail()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('Test email')@Cron('59 11 * * 6')\n                \n            \n\n                    \n                        \n                            Defined in src/mail/mail.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { MailService } from './mail.service';\nimport { Controller, Get } from '@nestjs/common';\nimport { Public, ResponseMessage } from '@app/decorator/customize';\nimport { MailerService } from '@nestjs-modules/mailer';\n\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport {\n  Subscriber,\n  SubscriberDocument,\n} from '@app/subscribers/schemas/subscriber.schema';\nimport { Job, JobDocument } from '@app/jobs/schemas/job.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('Mail')\n@Controller('mail')\nexport class MailController {\n  constructor(\n    private mailerService: MailerService,\n    @InjectModel(Subscriber.name)\n    private subscriberModel: SoftDeleteModel,\n    @InjectModel(Job.name)\n    private jobModel: SoftDeleteModel,\n  ) {}\n\n  @Get()\n  @Public()\n  @ResponseMessage('Test email')\n  @Cron('59 11 * * 6') // Every Saturday at 11:59 AM\n  async handleTestEmail() {\n    const subscribers = await this.subscriberModel.find({});\n    for (const subs of subscribers) {\n      const subsSkills = subs.skills;\n      const jobsWithMatchingSkills = await this.jobModel.find({\n        skills: { $in: subsSkills },\n      });\n      if (jobsWithMatchingSkills?.length) {\n        const jobs = jobsWithMatchingSkills.map((job) => {\n          return {\n            name: job.name,\n            skills: job.skills,\n            company: job.company,\n            salary:\n              `${job.salary}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + ' VND',\n            url: `https://itviec.com/job/${job._id}`,\n          };\n        });\n        await this.mailerService.sendMail({\n          to: subs.email, // list of receivers\n          from: 'Support Team ', // override default from\n          subject: 'Welcome to Nice App! Confirm your Email',\n          template: 'job',\n          context: {\n            receiver: subs.name,\n            jobs: jobs,\n            ctaUrl: 'https://itviec.com',\n          },\n        });\n      }\n    }\n\n    return { message: 'Email sent!' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService\n\nMailService\n\n\n\nMailModule\n\nMailModule\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MailController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { ConfigService } from '@nestjs/config';\nimport { MailController } from './mail.controller';\nimport { MailService } from './mail.service';\nimport { join } from 'path';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport {\n  Subscriber,\n  SubscriberSchema,\n} from '@app/subscribers/schemas/subscriber.schema';\nimport { Job, JobSchema } from '@app/jobs/schemas/job.schema';\n@Module({\n  imports: [\n    MailerModule.forRootAsync({\n      useFactory: async (configService: ConfigService) => ({\n        transport: {\n          host: configService.get('MAIL_HOST'),\n          secure: false,\n          auth: {\n            user: configService.get('MAIL_AUTH_USER'),\n            pass: configService.get('MAIL_AUTH_PASS'),\n          },\n        },\n        template: {\n          dir: join(__dirname, 'templates'),\n          adapter: new HandlebarsAdapter(),\n          options: {\n            strict: true,\n          },\n        },\n        preview: true,\n      }),\n      inject: [ConfigService],\n    }),\n    MongooseModule.forFeature([\n      { name: Subscriber.name, schema: SubscriberSchema },\n      { name: Job.name, schema: JobSchema },\n    ]),\n  ],\n  controllers: [MailController],\n  providers: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class MailService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MulterConfigService.html":{"url":"injectables/MulterConfigService.html","title":"injectable - MulterConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MulterConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/multer.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ensureExists\n                            \n                            \n                                getRootPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMulterOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMulterOptions\n                        \n                    \n                \n            \n            \n                \ncreateMulterOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/multer.config.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     MulterModuleOptions\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ensureExists\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/files/multer.config.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRootPath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/files/multer.config.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport {\n  MulterModuleOptions,\n  MulterOptionsFactory,\n} from '@nestjs/platform-express';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport { diskStorage } from 'multer';\n\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n  // Trả về đường dẫn gốc của dự án\n  getRootPath = () => {\n    return process.cwd();\n  };\n\n  // Kiểm tra và tạo thư mục nếu chưa tồn tại\n  ensureExists = (targetDirectory: string) => {\n    try {\n      fs.mkdirSync(targetDirectory, { recursive: true });\n      console.log('Directory successfully created, or it already exists.');\n    } catch (error: any) {\n      switch (error.code) {\n        case 'EEXIST':\n          // Thư mục đã tồn tại nhưng không phải là một thư mục hợp lệ\n          break;\n        case 'ENOTDIR':\n          // Có một file trùng tên với thư mục đang được tạo\n          break;\n        default:\n          // Các lỗi khác (ví dụ: quyền bị từ chối)\n          console.error(error);\n          break;\n      }\n    }\n  };\n\n  // Cấu hình Multer\n  createMulterOptions(): MulterModuleOptions {\n    return {\n      storage: diskStorage({\n        // Cấu hình đường dẫn lưu file\n        destination: (req, file, cb) => {\n          const folder = req?.headers?.folder_type ?? 'default'; // Lấy folder từ header hoặc mặc định là \"default\"\n          const targetPath = path.join(\n            this.getRootPath(),\n            `public/images/${folder}`,\n          );\n          this.ensureExists(targetPath); // Đảm bảo thư mục tồn tại\n          cb(null, targetPath); // Trả về đường dẫn lưu file\n        },\n        // Cấu hình tên file\n        filename: (req, file, cb) => {\n          let extName = path.extname(file.originalname); // Lấy phần mở rộng của file\n          let baseName = path.basename(file.originalname, extName); // Lấy tên file không bao gồm phần mở rộng\n          let finalName = `${baseName}-${Date.now()}${extName}`; // Tạo tên file mới với timestamp\n          cb(null, finalName); // Trả về tên file\n        },\n      }),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Permission.html":{"url":"classes/Permission.html","title":"class - Permission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/schemas/permission.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { softDeletePlugin } from 'soft-delete-plugin-mongoose';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { isNotEmpty } from 'class-validator';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type PermissionDocument = HydratedDocument;\n@Schema({ timestamps: true })\nexport class Permission {\n  @Prop()\n  name: string;\n\n  @Prop()\n  apiPath: string;\n\n  @Prop()\n  method: string;\n\n  @Prop()\n  module: string;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n}\nexport const PermissionSchema = SchemaFactory.createForClass(Permission);\nPermissionSchema.plugin(softDeletePlugin);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PermissionsController.html":{"url":"controllers/PermissionsController.html","title":"controller - PermissionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PermissionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                permissions\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto, user: Iuser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('create permission')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, pageLimit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetching all permission with pagination')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageLimit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Get permisson by id')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: Iuser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete permission by id')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePermissionDto: UpdatePermissionDto, user: Iuser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update permission by id')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n  UseGuards,\n} from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { ResponseMessage, User } from '@app/decorator/customize';\nimport { Iuser } from '@app/users/users.interface';\nimport { JwtAuthGuard } from '@app/auth/jwt-auth.guard';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('Permissions')\n@Controller('permissions')\n@UseGuards(JwtAuthGuard)\nexport class PermissionsController {\n  constructor(private readonly permissionsService: PermissionsService) {}\n\n  @Post()\n  @ResponseMessage('create permission')\n  create(\n    @Body() createPermissionDto: CreatePermissionDto,\n    @User() user: Iuser,\n  ) {\n    return this.permissionsService.create(createPermissionDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetching all permission with pagination')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') pageLimit: string,\n    @Query() qs: string,\n  ) {\n    return this.permissionsService.findAll(+currentPage, +pageLimit, qs);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Get permisson by id')\n  findOne(@Param('id') id: string) {\n    return this.permissionsService.findOne(id);\n  }\n  @Patch(':id')\n  @ResponseMessage('Update permission by id')\n  update(\n    @Param('id') id: string,\n    @Body() updatePermissionDto: UpdatePermissionDto,\n    @User() user: Iuser,\n  ) {\n    return this.permissionsService.update(id, updatePermissionDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete permission by id')\n  remove(@Param('id') id: string, @User() user: Iuser) {\n    return this.permissionsService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PermissionsModule.html":{"url":"modules/PermissionsModule.html","title":"module - PermissionsModule","body":"\n                   \n\n\n\n\n    Modules\n    PermissionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\n\nPermissionsService\n\nPermissionsService\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/permissions/permissions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PermissionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PermissionsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { PermissionsController } from './permissions.controller';\nimport { Permission, PermissionSchema } from './schemas/permission.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  controllers: [PermissionsController],\n  providers: [PermissionsService],\n  imports: [\n    MongooseModule.forFeature([\n      { name: Permission.name, schema: PermissionSchema },\n    ]),\n  ],\n})\nexport class PermissionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PermissionsService.html":{"url":"injectables/PermissionsService.html","title":"injectable - PermissionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PermissionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(permissionModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/permissions/permissions.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto, user: Iuser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: Iuser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePermissionDto: UpdatePermissionDto, user: Iuser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { permission } from 'process';\nimport {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { Iuser } from '@app/users/users.interface';\nimport aqp from 'api-query-params';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Permission, PermissionDocument } from './schemas/permission.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class PermissionsService {\n  constructor(\n    @InjectModel(Permission.name)\n    private permissionModel: SoftDeleteModel,\n  ) {}\n  async create(createPermissionDto: CreatePermissionDto, user: Iuser) {\n    const { name, apiPath, method, module } = createPermissionDto;\n    const isExits = await this.permissionModel.findOne({ apiPath, method });\n    if (isExits) {\n      throw new BadRequestException('Permission already exists');\n    }\n    const newPermission = await this.permissionModel.create({\n      name,\n      apiPath,\n      method,\n      module,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n    return {\n      id: newPermission._id,\n      createdAt: newPermission.createdAt,\n    };\n  }\n\n  async findAll(currentPage: number = 1, limit: number = 10, qs: string) {\n    try {\n      const { filter, sort, population, projection } = aqp(qs);\n      delete filter.current;\n      delete filter.pageSize;\n\n      const offset = (+currentPage - 1) * +limit;\n      const defaultLimit = +limit ? +limit : 10;\n\n      const totalItems = await this.permissionModel\n        .find(filter)\n        .countDocuments();\n      const totalPages = Math.ceil(totalItems / defaultLimit);\n\n      const result = await this.permissionModel\n        .find(filter)\n        .skip(offset)\n        .limit(defaultLimit)\n        .sort(sort as any)\n        .populate(population)\n        .select(projection as any)\n        .exec();\n      return {\n        meta: {\n          current: currentPage,\n          pageSize: limit,\n          pages: totalPages,\n          total: totalItems,\n        },\n        result,\n      };\n    } catch (err) {\n      throw new Error(`Failed to fetch resume: ${err.message}`);\n    }\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`Invalid permission ID: ${id}`);\n    }\n\n    try {\n      const permission = await this.permissionModel\n        .findById({ _id: id })\n        .exec();\n\n      if (!permission) {\n        throw new NotFoundException(`permission with ID ${id} not found`);\n      }\n\n      return permission;\n    } catch (err) {\n      throw new Error(`Failed to fetch permisson by ID: ${err.message}`);\n    }\n  }\n\n  async update(\n    id: string,\n    updatePermissionDto: UpdatePermissionDto,\n    user: Iuser,\n  ) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`Invalid permission ID: ${id}`);\n    }\n    const { name, apiPath, method, module } = updatePermissionDto;\n    const updated = await this.permissionModel.updateOne(\n      { _id: id },\n      {\n        module,\n        method,\n        apiPath,\n        name,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return updated;\n  }\n\n  async remove(id: string, user: Iuser) {\n    await this.permissionModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.permissionModel.softDelete({ _id: id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:67\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose, { Schema } from 'mongoose';\n\nclass company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n}\nexport class CreateUserDto {\n  @IsNotEmpty({ message: 'Name is required' })\n  name: string;\n\n  @IsEmail()\n  @IsNotEmpty({ message: 'Email is required' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Password is required' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Age is required' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Address is required' })\n  address: string;\n\n  @IsNotEmpty({ message: 'Role is required' })\n  @IsMongoId({ message: 'Role must be a valid MongoDB ObjectId' })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @IsOptional()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => company)\n  company: company;\n}\nexport class RegisterUserDto {\n  @IsNotEmpty()\n  name: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsNotEmpty()\n  password: string;\n\n  @IsNotEmpty()\n  age: number;\n\n  @IsNotEmpty()\n  address: string;\n\n  @IsNotEmpty()\n  role: string;\n}\nexport class UserLoginDto {\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({ example: 'ducduy', description: 'Username of user' })\n  readonly username: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({ example: '123456', description: 'Password of user' })\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Reflector } from '@nestjs/core';\nimport {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RESPONSE_MESSAGE } from '../decorator/customize';\n\nexport interface Response {\n  statusCode: number;\n  message?: string;\n  data: any;\n}\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  constructor(private Reflector: Reflector) {}\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    return next.handle().pipe(\n      map((data) => ({\n        statusCode: context.switchToHttp().getResponse().statusCode,\n        message:\n          this.Reflector.get(RESPONSE_MESSAGE, context.getHandler()) ||\n          '',\n        data: data,\n      })),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Resume.html":{"url":"classes/Resume.html","title":"class - Resume","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Resume\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/schemas/resume.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyId\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                history\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { softDeletePlugin } from 'soft-delete-plugin-mongoose';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument, mongo } from 'mongoose';\nimport { Company } from '@app/companies/schemas/company.schema';\nimport { Job } from '@app/jobs/schemas/job.schema';\n\nexport type ResumeDocument = HydratedDocument;\n@Schema({ timestamps: true })\nexport class Resume {\n  @Prop()\n  email: string;\n\n  @Prop()\n  userId: mongoose.Schema.Types.ObjectId;\n\n  @Prop()\n  url: string;\n\n  @Prop()\n  status: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Company.name })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Job.name })\n  jobId: mongoose.Schema.Types.ObjectId;\n\n  @Prop({ type: mongoose.Schema.Types.Array })\n  history: {\n    status: string;\n    updatedAt: Date;\n    UpdatedBy: {\n      _id: mongoose.Schema.Types.ObjectId;\n      email: string;\n    };\n  }[];\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n}\nexport const ResumeSchema = SchemaFactory.createForClass(Resume);\nResumeSchema.plugin(softDeletePlugin);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ResumesController.html":{"url":"controllers/ResumesController.html","title":"controller - ResumesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ResumesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                resumes\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                createByUser\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                updateStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(CreateUserCvDto: CreateUserCvDto, user: Iuser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Created a new resume')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                CreateUserCvDto\n                                            \n                                                            CreateUserCvDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createByUser(user: Iuser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('by-user')@ResponseMessage('Get resume by user')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, pageLimit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetching all resumes with pagination')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageLimit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Get resume by id')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: Iuser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete resume by id')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updateStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStatus(id: string, status: string, user: Iuser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update resume status')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { CreateResumeDto, CreateUserCvDto } from './dto/create-resume.dto';\nimport { UpdateResumeDto } from './dto/update-resume.dto';\nimport { Public, ResponseMessage, User } from '@app/decorator/customize';\nimport { Iuser } from '@app/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('Resumes')\n@Controller('resumes')\nexport class ResumesController {\n  constructor(private readonly resumesService: ResumesService) {}\n\n  @Post()\n  @ResponseMessage('Created a new resume')\n  create(@Body() CreateUserCvDto: CreateUserCvDto, @User() user: Iuser) {\n    return this.resumesService.create(CreateUserCvDto, user);\n  }\n\n  @Post('by-user')\n  @ResponseMessage('Get resume by user')\n  createByUser(@User() user: Iuser) {\n    return this.resumesService.findByUsers(user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetching all resumes with pagination')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') pageLimit: string,\n    @Query() qs: string,\n  ) {\n    return this.resumesService.findAll(+currentPage, +pageLimit, qs);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Get resume by id')\n  findOne(@Param('id') id: string) {\n    return this.resumesService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update resume status')\n  updateStatus(\n    @Param('id') id: string,\n    @Body('status') status: string,\n    @User() user: Iuser,\n  ) {\n    return this.resumesService.update(id, status, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete resume by id')\n  remove(@Param('id') id: string, @User() user: Iuser) {\n    return this.resumesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResumesModule.html":{"url":"modules/ResumesModule.html","title":"module - ResumesModule","body":"\n                   \n\n\n\n\n    Modules\n    ResumesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\n\nResumesService\n\nResumesService\n\n\n\nResumesModule\n\nResumesModule\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resumes/resumes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ResumesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ResumesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { ResumesController } from './resumes.controller';\nimport { Mongoose } from 'mongoose';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ResumeSchema } from './schemas/resume.schema';\n\n@Module({\n  controllers: [ResumesController],\n  providers: [ResumesService],\n  imports: [\n    MongooseModule.forFeature([{ name: 'Resume', schema: ResumeSchema }]),\n  ],\n})\nexport class ResumesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResumesService.html":{"url":"injectables/ResumesService.html","title":"injectable - ResumesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResumesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByUsers\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resumeModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/resumes/resumes.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resumeModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(CreateUserCvDto: CreateUserCvDto, user: Iuser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                CreateUserCvDto\n                                            \n                                                            CreateUserCvDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUsers(user: Iuser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: Iuser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, status: string, user: Iuser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { CreateResumeDto, CreateUserCvDto } from './dto/create-resume.dto';\nimport { UpdateResumeDto } from './dto/update-resume.dto';\nimport { Iuser } from '@app/users/users.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Resume, ResumeDocument } from './schemas/resume.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class ResumesService {\n  constructor(\n    @InjectModel(Resume.name)\n    private resumeModel: SoftDeleteModel,\n  ) {}\n  async create(CreateUserCvDto: CreateUserCvDto, user: Iuser) {\n    const { url, companyId, jobId } = CreateUserCvDto;\n    const { email, _id } = user;\n\n    const newCV = await this.resumeModel.create({\n      url,\n      companyId,\n      email,\n      jobId,\n      userId: _id,\n      status: 'PENDING',\n      createdBy: {\n        _id,\n        email,\n      },\n      history: [\n        {\n          status: 'PENDING',\n          updatedAt: new Date(),\n          UpdatedBy: {\n            _id,\n            email,\n          },\n        },\n      ],\n    });\n\n    return {\n      _id: newCV?._id,\n      createdAt: newCV?.createdAt,\n    };\n  }\n\n  async findAll(currentPage: number = 1, limit: number = 10, qs: string) {\n    try {\n      const { filter, sort, population, projection } = aqp(qs);\n      delete filter.current;\n      delete filter.pageSize;\n\n      const offset = (+currentPage - 1) * +limit;\n      const defaultLimit = +limit ? +limit : 10;\n\n      const totalItems = await this.resumeModel.find(filter).countDocuments();\n      const totalPages = Math.ceil(totalItems / defaultLimit);\n\n      const result = await this.resumeModel\n        .find(filter)\n        .skip(offset)\n        .limit(defaultLimit)\n        .sort(sort as any)\n        .populate(population)\n        .select(projection as any)\n        .exec();\n      return {\n        meta: {\n          current: currentPage,\n          pageSize: limit,\n          pages: totalPages,\n          total: totalItems,\n        },\n        result,\n      };\n    } catch (err) {\n      throw new Error(`Failed to fetch resume: ${err.message}`);\n    }\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`Invalid job ID: ${id}`);\n    }\n\n    try {\n      const Job = await this.resumeModel.findById({ _id: id }).exec();\n\n      if (!Job) {\n        throw new NotFoundException(`Job with ID ${id} not found`);\n      }\n\n      return Job;\n    } catch (err) {\n      throw new Error(`Failed to fetch Job by ID: ${err.message}`);\n    }\n  }\n\n  async update(id: string, status: string, user: Iuser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`Invalid resume ID: ${id}`);\n    }\n    const resume = await this.resumeModel.updateOne(\n      { _id: id },\n      {\n        status,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n        $push: {\n          history: {\n            status: status,\n            updatedAt: new Date(),\n            UpdatedBy: {\n              _id: user._id,\n              email: user.email,\n            },\n          },\n        },\n      },\n    );\n    return resume;\n  }\n\n  async remove(id: string, user: Iuser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`Invalid resume ID: ${id}`);\n    }\n    await this.resumeModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.resumeModel.softDelete({ _id: id });\n  }\n  async findByUsers(user: Iuser) {\n    return await this.resumeModel\n      .find({ userId: user._id })\n      .sort('-createdAt')\n      .populate([\n        {\n          path: 'companyId',\n          select: { name: 1 },\n        },\n        {\n          path: 'jobId',\n          select: { name: 1 },\n        },\n      ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/schemas/role.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permissions\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Permission } from '@app/permissions/schemas/permission.schema';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument, mongo } from 'mongoose';\nimport { softDeletePlugin } from 'soft-delete-plugin-mongoose';\n\nexport type roleDocument = HydratedDocument;\n@Schema({ timestamps: true })\nexport class Role {\n  @Prop()\n  name: string;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  isActive: boolean;\n\n  @Prop({ type: [mongoose.Schema.Types.ObjectId], ref: Permission.name })\n  permissions: Permission[];\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n}\nexport const RoleSchema = SchemaFactory.createForClass(Role);\nRoleSchema.plugin(softDeletePlugin);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RoleController.html":{"url":"controllers/RoleController.html","title":"controller - RoleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RoleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                roles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, user: Iuser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new role')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, pageLimit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetching all role with pagination')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageLimit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Get role by id')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: Iuser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete role by id')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateRoleDto: UpdateRoleDto, user: Iuser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update role by id')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { RoleService } from './roles.service';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { ResponseMessage, User } from '@app/decorator/customize';\nimport { Iuser } from '@app/users/users.interface';\nimport { response } from 'express';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('Roles')\n@Controller('roles')\nexport class RoleController {\n  constructor(private readonly roleService: RoleService) {}\n\n  @Post()\n  @ResponseMessage('Create a new role')\n  create(@Body() createRoleDto: CreateRoleDto, @User() user: Iuser) {\n    return this.roleService.create(createRoleDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetching all role with pagination')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') pageLimit: string,\n    @Query() qs: string,\n  ) {\n    return this.roleService.findAll(+currentPage, +pageLimit, qs);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Get role by id')\n  findOne(@Param('id') id: string) {\n    return this.roleService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update role by id')\n  update(\n    @Param('id') id: string,\n    @Body() updateRoleDto: UpdateRoleDto,\n    @User() user: Iuser,\n  ) {\n    return this.roleService.update(id, updateRoleDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete role by id')\n  remove(@Param('id') id: string, @User() user: Iuser) {\n    return this.roleService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoleModule.html":{"url":"modules/RoleModule.html","title":"module - RoleModule","body":"\n                   \n\n\n\n\n    Modules\n    RoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_exports\n\n\n\ncluster_RoleModule_providers\n\n\n\n\nRoleService \n\nRoleService \n\n\n\nRoleModule\n\nRoleModule\n\nRoleService  -->\n\nRoleModule->RoleService \n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/roles/roles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RoleController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RoleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RoleController } from './roles.controller';\nimport { RoleService } from './roles.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Role, RoleSchema } from './schemas/role.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Role.name, schema: RoleSchema }]),\n  ],\n  controllers: [RoleController],\n  providers: [RoleService],\n  exports: [RoleService],\n})\nexport class RoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/roles/roles.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, user: Iuser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: Iuser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateRoleDto: UpdateRoleDto, user: Iuser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { Iuser } from '@app/users/users.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Role, roleDocument } from './schemas/role.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport aqp from 'api-query-params';\nimport mongoose, { mongo } from 'mongoose';\nimport { ADMIN_ROLE } from '@app/databases/example';\n\n@Injectable()\nexport class RoleService {\n  constructor(\n    @InjectModel(Role.name)\n    private roleModel: SoftDeleteModel,\n  ) {}\n  async create(createRoleDto: CreateRoleDto, user: Iuser) {\n    const { name, description, isActive, permissions } = createRoleDto;\n    const isExits = await this.roleModel.findOne({ name });\n    if (isExits) {\n      throw new BadRequestException('Role already exists');\n    }\n\n    const newRole = await this.roleModel.create({\n      name,\n      description,\n      isActive,\n      permissions,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n    return {\n      id: newRole._id,\n      createdAt: newRole.createdAt,\n    };\n  }\n\n  async findAll(currentPage: number = 1, limit: number = 10, qs: string) {\n    try {\n      const { filter, sort, population, projection } = aqp(qs);\n      delete filter.current;\n      delete filter.pageSize;\n\n      const offset = (+currentPage - 1) * +limit;\n      const defaultLimit = +limit ? +limit : 10;\n\n      const totalItems = await this.roleModel.find(filter).countDocuments();\n      const totalPages = Math.ceil(totalItems / defaultLimit);\n\n      const result = await this.roleModel\n        .find(filter)\n        .skip(offset)\n        .limit(defaultLimit)\n        .sort(sort as any)\n        .populate(population)\n        .select(projection as any)\n        .exec();\n      return {\n        meta: {\n          current: currentPage,\n          pageSize: limit,\n          pages: totalPages,\n          total: totalItems,\n        },\n        result,\n      };\n    } catch (err) {\n      throw new Error(`Failed to fetch role: ${err.message}`);\n    }\n  }\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException('Invalid id');\n    }\n    return await this.roleModel\n      .findById(id)\n      .populate({\n        path: 'permissions',\n        select: { _id: 1, apiPath: 1, name: 1, method: 1, module: 1 },\n      })\n      .exec();\n  }\n\n  async update(id: string, updateRoleDto: UpdateRoleDto, user: Iuser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException('Invalid id');\n    }\n    const { name, description, isActive, permissions } = updateRoleDto;\n    // const isExits = await this.roleModel.findOne({ name });\n    // if (isExits) {\n    //   throw new BadRequestException('Role already exists');\n    // }\n    const updated = await this.roleModel.updateOne(\n      { _id: id },\n      {\n        name,\n        description,\n        isActive,\n        permissions,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return updated;\n  }\n\n  async remove(id: string, user: Iuser) {\n    const foundRole = await this.roleModel.findById(id);\n    if (foundRole.name === ADMIN_ROLE) {\n      throw new BadRequestException('Cannot delete admin role');\n    }\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException('Invalid id');\n    }\n    await this.roleModel.findOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n\n    return this.roleModel.softDelete({ _id: id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Subscriber.html":{"url":"classes/Subscriber.html","title":"class - Subscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Subscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/schemas/subscriber.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedArraySubdocument } from 'mongoose';\nimport { softDeletePlugin } from 'soft-delete-plugin-mongoose';\nexport type SubscriberDocument = HydratedArraySubdocument;\n\n@Schema({ timestamps: true })\nexport class Subscriber {\n  @Prop({ required: true })\n  email: string;\n\n  @Prop()\n  name: string;\n\n  @Prop()\n  skills: string[];\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n}\nexport const SubscriberSchema = SchemaFactory.createForClass(Subscriber);\nSubscriberSchema.plugin(softDeletePlugin);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SubscribersController.html":{"url":"controllers/SubscribersController.html","title":"controller - SubscribersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SubscribersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                subscribers\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                getUsersSkills\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubscriberDto: CreateSubscriberDto, user: Iuser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('create subscriber')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, pageLimit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetching all subscriber with pagination')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageLimit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Get subscriber by id')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getUsersSkills\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsersSkills(user: Iuser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('skills')@ResponseMessage(get subscribers's skills)@SkipCheckPermission()\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: Iuser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete subscriber by id')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateSubscriberDto: UpdateSubscriberDto, user: Iuser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@SkipCheckPermission()@ResponseMessage('Update subscriber info')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateSubscriberDto\n                                            \n                                                            UpdateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { SubscribersService } from './subscribers.service';\nimport { CreateSubscriberDto } from './dto/create-subscriber.dto';\nimport { UpdateSubscriberDto } from './dto/update-subscriber.dto';\nimport {\n  ResponseMessage,\n  SkipCheckPermission,\n  User,\n} from '@app/decorator/customize';\nimport { Iuser } from '@app/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('Subscribers')\n@Controller('subscribers')\nexport class SubscribersController {\n  constructor(private readonly subscribersService: SubscribersService) {}\n\n  @Post()\n  @ResponseMessage('create subscriber')\n  create(\n    @Body() createSubscriberDto: CreateSubscriberDto,\n    @User() user: Iuser,\n  ) {\n    return this.subscribersService.create(createSubscriberDto, user);\n  }\n\n  @Post('skills')\n  @ResponseMessage(`get subscribers's skills`)\n  @SkipCheckPermission()\n  getUsersSkills(@User() user: Iuser) {\n    return this.subscribersService.getSkills(user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetching all subscriber with pagination')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') pageLimit: string,\n    @Query() qs: string,\n  ) {\n    return this.subscribersService.findAll(+currentPage, +pageLimit, qs);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Get subscriber by id')\n  findOne(@Param('id') id: string) {\n    return this.subscribersService.findOne(id);\n  }\n\n  @Patch()\n  @SkipCheckPermission()\n  @ResponseMessage('Update subscriber info')\n  update(\n    @Body() updateSubscriberDto: UpdateSubscriberDto,\n    @User() user: Iuser,\n  ) {\n    return this.subscribersService.update(updateSubscriberDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete subscriber by id')\n  remove(@Param('id') id: string, @User() user: Iuser) {\n    return this.subscribersService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SubscribersModule.html":{"url":"modules/SubscribersModule.html","title":"module - SubscribersModule","body":"\n                   \n\n\n\n\n    Modules\n    SubscribersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\n\nSubscribersService\n\nSubscribersService\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/subscribers/subscribers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SubscribersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SubscribersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SubscribersService } from './subscribers.service';\nimport { SubscribersController } from './subscribers.controller';\nimport { Subscriber, SubscriberSchema } from './schemas/subscriber.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Subscriber.name, schema: SubscriberSchema },\n    ]),\n  ],\n  controllers: [SubscribersController],\n  providers: [SubscribersService],\n})\nexport class SubscribersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubscribersService.html":{"url":"injectables/SubscribersService.html","title":"injectable - SubscribersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubscribersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getSkills\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(subscriberModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/subscribers/subscribers.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subscriberModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubscriberDto: CreateSubscriberDto, user: Iuser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSkills\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSkills(user: Iuser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: Iuser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateSubscriberDto: UpdateSubscriberDto, user: Iuser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateSubscriberDto\n                                            \n                                                            UpdateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateSubscriberDto } from './dto/create-subscriber.dto';\nimport { UpdateSubscriberDto } from './dto/update-subscriber.dto';\nimport { Subscriber, SubscriberDocument } from './schemas/subscriber.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Iuser } from '@app/users/users.interface';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class SubscribersService {\n  constructor(\n    @InjectModel(Subscriber.name)\n    private subscriberModel: SoftDeleteModel,\n  ) {}\n  async create(createSubscriberDto: CreateSubscriberDto, user: Iuser) {\n    const { email, name, skills } = createSubscriberDto;\n    const IsExist = await this.subscriberModel.findOne({ email });\n    if (IsExist) {\n      throw new BadRequestException(\n        `Subscriber with email ${email} already exists`,\n      );\n    }\n    let newSubscriber = await this.subscriberModel.create({\n      email,\n      name,\n      skills,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n    return {\n      _id: newSubscriber._id,\n      createdAt: newSubscriber.createdAt,\n    };\n  }\n\n  async findAll(currentPage: number = 1, limit: number = 10, qs: string) {\n    try {\n      const { filter, sort, population } = aqp(qs);\n      delete filter.current;\n      delete filter.pageSize;\n\n      const offset = (+currentPage - 1) * +limit;\n      const defaultLimit = +limit ? +limit : 10;\n\n      const totalItems = await this.subscriberModel\n        .find(filter)\n        .countDocuments();\n      const totalPages = Math.ceil(totalItems / defaultLimit);\n\n      const result = await this.subscriberModel\n        .find(filter)\n        .skip(offset)\n        .limit(defaultLimit)\n        .sort(sort as any)\n        .populate(population)\n        .exec();\n      return {\n        meta: {\n          current: currentPage,\n          pageSize: limit,\n          pages: totalPages,\n          total: totalItems,\n        },\n        result,\n      };\n    } catch (err) {\n      throw new Error(`Failed to fetch job: ${err.message}`);\n    }\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new Error('Invalid subscriber ID');\n    }\n    return await this.subscriberModel.findOne({ _id: id }).exec();\n  }\n\n  async update(updateSubscriberDto: UpdateSubscriberDto, user: Iuser) {\n    const updated = await this.subscriberModel.updateOne(\n      { email: user.email },\n      {\n        ...updateSubscriberDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n      { upsert: true },\n    );\n    return updated;\n  }\n\n  async remove(id: string, user: Iuser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new Error('Invalid subscriber ID');\n    }\n    await this.subscriberModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.subscriberModel.softDelete({ _id: id });\n  }\n\n  async getSkills(user: Iuser) {\n    const { email } = user;\n    return await this.subscriberModel.findOne({ email }, { skills: 1 });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(Reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/core/transform.interceptor.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        Reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/transform.interceptor.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Reflector } from '@nestjs/core';\nimport {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RESPONSE_MESSAGE } from '../decorator/customize';\n\nexport interface Response {\n  statusCode: number;\n  message?: string;\n  data: any;\n}\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  constructor(private Reflector: Reflector) {}\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    return next.handle().pipe(\n      map((data) => ({\n        statusCode: context.switchToHttp().getResponse().statusCode,\n        message:\n          this.Reflector.get(RESPONSE_MESSAGE, context.getHandler()) ||\n          '',\n        data: data,\n      })),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCompanyDto.html":{"url":"classes/UpdateCompanyDto.html","title":"class - UpdateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/update-company.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateCompanyDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/update-company.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateCompanyDto } from './create-company.dto';\nimport { IsOptional, IsString } from 'class-validator';\nimport { Type } from 'class-transformer';\n\nclass UserRef {\n  @IsString()\n  _id: string;\n\n  @IsString()\n  email: string;\n}\n\nexport class UpdateCompanyDto extends PartialType(CreateCompanyDto) {\n  @IsOptional()\n  @Type(() => UserRef)\n  updatedBy?: UserRef;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFileDto.html":{"url":"classes/UpdateFileDto.html","title":"class - UpdateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/update-file.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateFileDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateFileDto } from './create-file.dto';\n\nexport class UpdateFileDto extends PartialType(CreateFileDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateJobDto.html":{"url":"classes/UpdateJobDto.html","title":"class - UpdateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/update-job.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateJobDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'job id is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/update-job.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateJobDto } from './create-job.dto';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class UpdateJobDto extends PartialType(CreateJobDto) {\n  @IsNotEmpty({ message: 'job id is required' })\n  _id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePermissionDto.html":{"url":"classes/UpdatePermissionDto.html","title":"class - UpdatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/update-permission.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreatePermissionDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePermissionDto } from './create-permission.dto';\n\nexport class UpdatePermissionDto extends PartialType(CreatePermissionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResumeDto.html":{"url":"classes/UpdateResumeDto.html","title":"class - UpdateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateResumeDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                history\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :         History[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Resume history is required'})@IsArray({message: 'Resume history must be an array'})@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateResumeDto } from './create-resume.dto';\nimport { IsArray, IsEmail, IsNotEmpty, ValidateNested } from 'class-validator';\nimport mongoose, { mongo } from 'mongoose';\nimport { Type } from 'class-transformer';\n\nclass UpdatedBy {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n}\n\nclass History {\n  @IsNotEmpty()\n  status: string;\n\n  @IsNotEmpty()\n  updatedAt: Date;\n\n  @ValidateNested()\n  @IsNotEmpty()\n  @Type(() => UpdatedBy)\n  UpdatedBy: UpdatedBy;\n}\nexport class UpdateResumeDto extends PartialType(CreateResumeDto) {\n  @IsNotEmpty({ message: 'Resume history is required' })\n  @IsArray({ message: 'Resume history must be an array' })\n  @ValidateNested()\n  @Type(() => History)\n  history: History[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoleDto.html":{"url":"classes/UpdateRoleDto.html","title":"class - UpdateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/update-role.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateRoleDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateRoleDto } from './create-role.dto';\n\nexport class UpdateRoleDto extends PartialType(CreateRoleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSubscriberDto.html":{"url":"classes/UpdateSubscriberDto.html","title":"class - UpdateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/update-subscriber.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateSubscriberDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSubscriberDto } from './create-subscriber.dto';\n\nexport class UpdateSubscriberDto extends PartialType(CreateSubscriberDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(\n  OmitType(CreateUserDto, ['password'] as const),\n)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'user id is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType, OmitType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class UpdateUserDto extends PartialType(\n  OmitType(CreateUserDto, ['password'] as const),\n) {\n  @IsNotEmpty({ message: 'user id is required' })\n  _id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatedBy.html":{"url":"classes/UpdatedBy.html","title":"class - UpdatedBy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatedBy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateResumeDto } from './create-resume.dto';\nimport { IsArray, IsEmail, IsNotEmpty, ValidateNested } from 'class-validator';\nimport mongoose, { mongo } from 'mongoose';\nimport { Type } from 'class-transformer';\n\nclass UpdatedBy {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n}\n\nclass History {\n  @IsNotEmpty()\n  status: string;\n\n  @IsNotEmpty()\n  updatedAt: Date;\n\n  @ValidateNested()\n  @IsNotEmpty()\n  @Type(() => UpdatedBy)\n  UpdatedBy: UpdatedBy;\n}\nexport class UpdateResumeDto extends PartialType(CreateResumeDto) {\n  @IsNotEmpty({ message: 'Resume history is required' })\n  @IsArray({ message: 'Resume history must be an array' })\n  @ValidateNested()\n  @Type(() => History)\n  history: History[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: UserRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: UserRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: UserRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:56\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail } from 'class-validator';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument, mongo } from 'mongoose';\nimport { softDeletePlugin } from 'soft-delete-plugin-mongoose';\nimport { Role } from '@app/roles/schemas/role.schema';\n\nexport type UserDocument = HydratedDocument & {\n  createdAt: Date;\n  updatedAt: Date;\n};\nclass UserRef {\n  @Prop({ type: mongoose.Schema.Types.ObjectId })\n  _id: mongoose.Types.ObjectId;\n\n  @Prop({ type: String })\n  email: string;\n}\n\n@Schema({ timestamps: true })\nexport class User {\n  @Prop({ required: true })\n  name: string;\n  @IsEmail()\n  @Prop({ required: true })\n  email: string; //username\n\n  @Prop({ required: true })\n  password: string;\n\n  @Prop()\n  age: number;\n\n  @Prop()\n  gender: string;\n\n  @Prop()\n  address: string;\n\n  @Prop({ type: Object })\n  company: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n    name: string;\n  };\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Role.name })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @Prop()\n  refreshToken: string;\n\n  @Prop({ type: UserRef })\n  createdBy: UserRef;\n\n  @Prop({ type: UserRef })\n  updatedBy: UserRef;\n\n  @Prop({ type: UserRef })\n  deletedBy: UserRef;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\nUserSchema.plugin(softDeletePlugin);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginDto.html":{"url":"classes/UserLoginDto.html","title":"class - UserLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@ApiProperty({example: '123456', description: 'Password of user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@ApiProperty({example: 'ducduy', description: 'Username of user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose, { Schema } from 'mongoose';\n\nclass company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n}\nexport class CreateUserDto {\n  @IsNotEmpty({ message: 'Name is required' })\n  name: string;\n\n  @IsEmail()\n  @IsNotEmpty({ message: 'Email is required' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Password is required' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Age is required' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Address is required' })\n  address: string;\n\n  @IsNotEmpty({ message: 'Role is required' })\n  @IsMongoId({ message: 'Role must be a valid MongoDB ObjectId' })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @IsOptional()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => company)\n  company: company;\n}\nexport class RegisterUserDto {\n  @IsNotEmpty()\n  name: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsNotEmpty()\n  password: string;\n\n  @IsNotEmpty()\n  age: number;\n\n  @IsNotEmpty()\n  address: string;\n\n  @IsNotEmpty()\n  role: string;\n}\nexport class UserLoginDto {\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({ example: 'ducduy', description: 'Username of user' })\n  readonly username: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({ example: '123456', description: 'Password of user' })\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRef.html":{"url":"classes/UserRef.html","title":"class - UserRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/create-company.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional, IsString } from 'class-validator';\nimport { Type } from 'class-transformer';\n\nclass UserRef {\n  @IsString()\n  _id: string;\n\n  @IsString()\n  email: string;\n}\n\nexport class CreateCompanyDto {\n  @IsNotEmpty({ message: 'Company name is required' })\n  @IsString()\n  name: string;\n\n  @IsNotEmpty({ message: 'Company address is required' })\n  @IsString()\n  address: string;\n\n  @IsNotEmpty({ message: 'Company description is required' })\n  @IsString()\n  description: string;\n\n  @IsNotEmpty({ message: 'Company logo is required' })\n  @IsString()\n  logo: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRef-1.html":{"url":"classes/UserRef-1.html","title":"class - UserRef-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/update-company.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/update-company.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/update-company.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateCompanyDto } from './create-company.dto';\nimport { IsOptional, IsString } from 'class-validator';\nimport { Type } from 'class-transformer';\n\nclass UserRef {\n  @IsString()\n  _id: string;\n\n  @IsString()\n  email: string;\n}\n\nexport class UpdateCompanyDto extends PartialType(CreateCompanyDto) {\n  @IsOptional()\n  @Type(() => UserRef)\n  updatedBy?: UserRef;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRef-2.html":{"url":"classes/UserRef-2.html","title":"class - UserRef-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/schemas/company.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument, SchemaTypes } from 'mongoose';\nimport { softDeletePlugin } from 'soft-delete-plugin-mongoose';\n\nexport type CompanyDocument = HydratedDocument;\n\nclass UserRef {\n  @Prop({ type: mongoose.Schema.Types.ObjectId })\n  _id: mongoose.Types.ObjectId;\n\n  @Prop({ type: String })\n  email: string;\n}\n\n@Schema({ timestamps: true })\nexport class Company {\n  @Prop({ required: true })\n  name: string;\n\n  @Prop()\n  address: string;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  logo: string;\n\n  @Prop({ type: UserRef })\n  createdBy: UserRef;\n\n  @Prop({ type: UserRef })\n  updatedBy: UserRef;\n\n  @Prop({ type: UserRef })\n  deletedBy: UserRef;\n\n  @Prop()\n  createdAt: Date;\n  @Prop()\n  updatedAt: Date;\n}\n\nexport const CompanySchema = SchemaFactory.createForClass(Company);\n\nCompanySchema.plugin(softDeletePlugin);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRef-3.html":{"url":"classes/UserRef-3.html","title":"class - UserRef-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/schemas/job.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail } from 'class-validator';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument, mongo } from 'mongoose';\nimport { softDeletePlugin } from 'soft-delete-plugin-mongoose';\n\nexport type JobDocument = HydratedDocument & {\n  createdAt: Date;\n  updatedAt: Date;\n};\nclass UserRef {\n  @Prop({ type: mongoose.Schema.Types.ObjectId })\n  _id: mongoose.Types.ObjectId;\n\n  @Prop({ type: String })\n  email: string;\n}\n\n@Schema({ timestamps: true })\nexport class Job {\n  @Prop({ required: true })\n  name: string;\n\n  @Prop({ required: true })\n  skills: string[];\n\n  @Prop({ type: Object })\n  company: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    logo: string;\n  };\n\n  @Prop()\n  salary: number;\n\n  @Prop()\n  quantity: string;\n\n  @Prop()\n  level: string;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  location: string;\n\n  @Prop()\n  startDate: Date;\n\n  @Prop()\n  endDate: Date;\n\n  @Prop({ type: Boolean, default: true })\n  isActive: boolean;\n\n  @Prop({ type: UserRef })\n  createdBy: UserRef;\n\n  @Prop({ type: UserRef })\n  updatedBy: UserRef;\n\n  @Prop({ type: UserRef })\n  deletedBy: UserRef;\n}\n\nexport const JobSchema = SchemaFactory.createForClass(Job);\n\nJobSchema.plugin(softDeletePlugin);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRef-4.html":{"url":"classes/UserRef-4.html","title":"class - UserRef-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail } from 'class-validator';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument, mongo } from 'mongoose';\nimport { softDeletePlugin } from 'soft-delete-plugin-mongoose';\nimport { Role } from '@app/roles/schemas/role.schema';\n\nexport type UserDocument = HydratedDocument & {\n  createdAt: Date;\n  updatedAt: Date;\n};\nclass UserRef {\n  @Prop({ type: mongoose.Schema.Types.ObjectId })\n  _id: mongoose.Types.ObjectId;\n\n  @Prop({ type: String })\n  email: string;\n}\n\n@Schema({ timestamps: true })\nexport class User {\n  @Prop({ required: true })\n  name: string;\n  @IsEmail()\n  @Prop({ required: true })\n  email: string; //username\n\n  @Prop({ required: true })\n  password: string;\n\n  @Prop()\n  age: number;\n\n  @Prop()\n  gender: string;\n\n  @Prop()\n  address: string;\n\n  @Prop({ type: Object })\n  company: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n    name: string;\n  };\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Role.name })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @Prop()\n  refreshToken: string;\n\n  @Prop({ type: UserRef })\n  createdBy: UserRef;\n\n  @Prop({ type: UserRef })\n  updatedBy: UserRef;\n\n  @Prop({ type: UserRef })\n  deletedBy: UserRef;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\nUserSchema.plugin(softDeletePlugin);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findById\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post()@ResponseMessage('Create a new user')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, pageLimit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetching all user with pagination')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageLimit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get(':id')@ResponseMessage('Get user by id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: Iuser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete user by id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateUserDto: UpdateUserDto, user: Iuser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update user info')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Query,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { Public, ResponseMessage, User } from '../decorator/customize';\nimport { Iuser } from './users.interface';\nimport { JwtAuthGuard } from '@app/auth/jwt-auth.guard';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('Users')\n@Controller('users')\n@UseGuards(JwtAuthGuard)\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n  @Public()\n  @Post()\n  @ResponseMessage('Create a new user')\n  async create(@Body() createUserDto: CreateUserDto) {\n    let newUser = await this.usersService.create(createUserDto);\n    return {\n      _id: newUser?._id,\n      createdAt: newUser?.createdAt,\n    };\n  }\n  @Get()\n  @ResponseMessage('Fetching all user with pagination')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') pageLimit: string,\n    @Query() qs: string,\n  ) {\n    return this.usersService.findAll(+currentPage, +pageLimit, qs);\n  }\n  @Public()\n  @Get(':id')\n  @ResponseMessage('Get user by id')\n  async findById(@Param('id') id: string) {\n    return await this.usersService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update user info')\n  async update(@Body() updateUserDto: UpdateUserDto, @User() user: Iuser) {\n    let updatedUser = await this.usersService.update(updateUserDto, user);\n    return updatedUser;\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete user by id')\n  async remove(@Param('id') id: string, @User() user: Iuser) {\n    return this.usersService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './schemas/user.schema';\nimport { Role, RoleSchema } from '@app/roles/schemas/role.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: User.name, schema: UserSchema },\n      { name: Role.name, schema: RoleSchema },\n    ]),\n  ],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                findUserByRefreshToken\n                            \n                            \n                                updateRefreshToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                comparePasswords\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByUsername\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                hashPassword\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, roleModel: SoftDeleteModel, ConfigService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ConfigService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        comparePasswords\n                        \n                    \n                \n            \n            \n                \n                        \n                    comparePasswords(plainPassword: string, hashedPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                plainPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hashedPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUsername(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashPassword(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(user: RegisterUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: Iuser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:144\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateUserDto: UpdateUserDto, user: Iuser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Iuser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        findUserByRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:190\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:187\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ConfigService } from '@nestjs/config';\nimport {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { CreateUserDto, RegisterUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User as UserM, UserDocument } from './schemas/user.schema';\nimport * as bcrypt from 'bcryptjs';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Iuser } from './users.interface';\nimport mongoose from 'mongoose';\nimport { User } from 'src/decorator/customize';\nimport aqp from 'api-query-params';\nimport { Role, roleDocument } from '@app/roles/schemas/role.schema';\nimport { USER_ROLE } from '@app/databases/example';\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectModel(UserM.name)\n    private userModel: SoftDeleteModel,\n\n    @InjectModel(Role.name)\n    private roleModel: SoftDeleteModel,\n\n    private ConfigService: ConfigService,\n  ) {}\n  //hashPassword\n  async hashPassword(password: string): Promise {\n    const salt = await bcrypt.genSalt(10);\n    return bcrypt.hash(password, salt);\n  }\n  //comparePassword\n  async comparePasswords(\n    plainPassword: string,\n    hashedPassword: string,\n  ): Promise {\n    return bcrypt.compare(plainPassword, hashedPassword);\n  }\n  //createUser\n  async create(createUserDto: CreateUserDto) {\n    const { name, email, password, age, address, role, company } =\n      createUserDto;\n    const isExistedEmail = await this.userModel.findOne({ email });\n    if (isExistedEmail) {\n      throw new BadRequestException(`email ${email} already exists`);\n    }\n    const hashedPassword = await this.hashPassword(password);\n    let newUser = await this.userModel.create({\n      name,\n      email,\n      password: hashedPassword,\n      age,\n      address,\n      role,\n      company,\n    });\n    return newUser;\n  }\n  //find all user by pagination\n  async findAll(currentPage: number = 1, limit: number = 10, qs: string) {\n    try {\n      const { filter, sort, population } = aqp(qs);\n      delete filter.current;\n      delete filter.pageSize;\n\n      const offset = (+currentPage - 1) * +limit;\n      const defaultLimit = +limit ? +limit : 10;\n\n      const totalItems = await this.userModel.find(filter).countDocuments();\n      const totalPages = Math.ceil(totalItems / defaultLimit);\n\n      const result = await this.userModel\n        .find(filter)\n        .skip(offset)\n        .limit(defaultLimit)\n        .sort(sort as any)\n        .populate(population)\n        .exec();\n      return {\n        meta: {\n          current: currentPage,\n          pageSize: limit,\n          pages: totalPages,\n          total: totalItems,\n        },\n        result,\n      };\n    } catch (err) {\n      throw new Error(`Failed to fetch user: ${err.message}`);\n    }\n  }\n  //findUserById\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`Invalid user ID: ${id}`);\n    }\n\n    try {\n      const user = await this.userModel\n        .findOne({ _id: id })\n        .select('-password')\n        .populate({ path: 'role', select: { name: 1, _id: 1 } })\n        .exec();\n\n      if (!user) {\n        throw new NotFoundException(`User with ID ${id} not found`);\n      }\n\n      return user;\n    } catch (err) {\n      throw new Error(`Failed to fetch user by ID: ${err.message}`);\n    }\n  }\n  //findUserByEmail(username)\n  async findByUsername(email: string) {\n    try {\n      const user = await this.userModel\n        .findOne({ email })\n        .populate({ path: 'role', select: { name: 1 } })\n        .exec();\n      return user || null;\n    } catch (err) {\n      throw new Error(`Failed to fetch user by email: ${err.message}`);\n    }\n  }\n  //updateUser\n  async update(updateUserDto: UpdateUserDto, @User() user: Iuser) {\n    const updated = await this.userModel.updateOne(\n      { _id: updateUserDto._id },\n      {\n        ...updateUserDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return updated;\n  }\n  //deleteUser\n  async remove(id: string, user: Iuser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`Invalid user id: ${id},not found user`);\n    }\n    const foundUser = await this.userModel.findById(id);\n    if (\n      foundUser &&\n      foundUser.email.toString() ===\n        this.ConfigService.get('ADMIN_EMAIL')\n    ) {\n      throw new BadRequestException(`You can't delete this user(admin)`);\n    }\n    await this.userModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.userModel.softDelete({ _id: id });\n  }\n  //registerUser\n  async register(user: RegisterUserDto) {\n    const { name, email, password, age, address, role } = user;\n    const isExistedEmail = await this.userModel.findOne({ email });\n    if (isExistedEmail) {\n      throw new BadRequestException(`email ${email} already exists`);\n    }\n    const userRole = await this.roleModel.findOne({ name: USER_ROLE });\n    const hashedPassword = await this.hashPassword(password);\n    const newUser = await this.userModel.create({\n      name,\n      email,\n      password: hashedPassword,\n      age,\n      address,\n      role: userRole?._id,\n    });\n    return newUser;\n  }\n\n  updateRefreshToken = async (refreshToken: string, _id: string) => {\n    await this.userModel.updateOne({ _id }, { refreshToken });\n  };\n  findUserByRefreshToken = async (refreshToken: string) => {\n    return await this.userModel\n      .findOne({ refreshToken })\n      .populate({ path: 'role', select: { name: 1 } });\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/company.html":{"url":"classes/company.html","title":"class - company","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform, Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsBoolean,\n  IsDate,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\nclass company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n\n  @IsNotEmpty()\n  logo: string;\n}\nexport class CreateJobDto {\n  @IsNotEmpty({ message: 'name is required' })\n  name: string;\n\n  @IsNotEmpty({ message: 'skills is required' })\n  @IsArray({ message: 'skills must be an array' })\n  @IsString({ each: true, message: 'skills must be an array of strings' })\n  skills: string[];\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => company)\n  company: company;\n\n  @IsNotEmpty({ message: 'salary is required' })\n  salary: number;\n\n  @IsNotEmpty({ message: 'quantity is required' })\n  quantity: string;\n\n  @IsNotEmpty({ message: 'level is required' })\n  level: string;\n\n  @IsNotEmpty({ message: 'description is required' })\n  description: string;\n\n  @IsNotEmpty({ message: 'location is required' })\n  @IsString({ message: 'location must be a string' })\n  location: string;\n\n  @IsNotEmpty({ message: 'startDate is required' })\n  @Transform(({ value }) => new Date(value))\n  @IsDate({ message: 'startDate must be a valid date' })\n  startDate: Date;\n\n  @IsNotEmpty({ message: 'endDate is required' })\n  @Transform(({ value }) => new Date(value))\n  @IsDate({ message: 'endDate must be a valid date' })\n  endDate: Date;\n\n  @IsNotEmpty({ message: 'isActive is required' })\n  @IsBoolean({ message: 'isActive must be a boolean' })\n  isActive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/company-1.html":{"url":"classes/company-1.html","title":"class - company-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose, { Schema } from 'mongoose';\n\nclass company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n}\nexport class CreateUserDto {\n  @IsNotEmpty({ message: 'Name is required' })\n  name: string;\n\n  @IsEmail()\n  @IsNotEmpty({ message: 'Email is required' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Password is required' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Age is required' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Address is required' })\n  address: string;\n\n  @IsNotEmpty({ message: 'Role is required' })\n  @IsMongoId({ message: 'Role must be a valid MongoDB ObjectId' })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @IsOptional()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => company)\n  company: company;\n}\nexport class RegisterUserDto {\n  @IsNotEmpty()\n  name: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsNotEmpty()\n  password: string;\n\n  @IsNotEmpty()\n  age: number;\n\n  @IsNotEmpty()\n  address: string;\n\n  @IsNotEmpty()\n  role: string;\n}\nexport class UserLoginDto {\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({ example: 'ducduy', description: 'Username of user' })\n  readonly username: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({ example: '123456', description: 'Password of user' })\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/passport/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/passport/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/companies/companies.controller.ts\n            \n            controller\n            CompaniesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/companies/companies.service.ts\n            \n            injectable\n            CompaniesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/companies/dto/create-company.dto.ts\n            \n            class\n            CreateCompanyDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/companies/dto/create-company.dto.ts\n            \n            class\n            UserRef\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/companies/dto/update-company.dto.ts\n            \n            class\n            UpdateCompanyDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/companies/dto/update-company.dto.ts\n            \n            class\n            UserRef\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/companies/schemas/company.schema.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/companies/schemas/company.schema.ts\n            \n            class\n            UserRef\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/companies/schemas/company.schema.ts\n            \n            variable\n            CompanySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/companies/schemas/company.schema.ts\n            \n            type alias\n            CompanyDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/databases/databases.controller.ts\n            \n            controller\n            DatabasesController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/databases.service.ts\n            \n            injectable\n            DatabasesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/databases/example.ts\n            \n            variable\n            ADMIN_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/databases/example.ts\n            \n            variable\n            INIT_PERMISSIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/databases/example.ts\n            \n            variable\n            USER_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_PERMISSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            RESPONSE_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            ResponseMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            SkipCheckPermission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/create-file.dto.ts\n            \n            class\n            CreateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/update-file.dto.ts\n            \n            class\n            UpdateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/entities/file.entity.ts\n            \n            class\n            File\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/files.controller.ts\n            \n            controller\n            FilesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/files.service.ts\n            \n            injectable\n            FilesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/multer.config.ts\n            \n            injectable\n            MulterConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            company\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            CreateJobDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/jobs/dto/update-job.dto.ts\n            \n            class\n            UpdateJobDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/jobs/jobs.controller.ts\n            \n            controller\n            JobsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/jobs/jobs.service.ts\n            \n            injectable\n            JobsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/jobs/schemas/job.schema.ts\n            \n            class\n            Job\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/jobs/schemas/job.schema.ts\n            \n            class\n            UserRef\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/jobs/schemas/job.schema.ts\n            \n            variable\n            JobSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/jobs/schemas/job.schema.ts\n            \n            type alias\n            JobDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mail/mail.controller.ts\n            \n            controller\n            MailController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/dto/create-permission.dto.ts\n            \n            class\n            CreatePermissionDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/permissions/dto/update-permission.dto.ts\n            \n            class\n            UpdatePermissionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/permissions.controller.ts\n            \n            controller\n            PermissionsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/permissions/permissions.service.ts\n            \n            injectable\n            PermissionsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/permissions/schemas/permission.schema.ts\n            \n            class\n            Permission\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                        src/permissions/schemas/permission.schema.ts\n            \n            variable\n            PermissionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/permissions/schemas/permission.schema.ts\n            \n            type alias\n            PermissionDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateResumeDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateUserCvDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            History\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            UpdatedBy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            UpdateResumeDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/resumes/resumes.controller.ts\n            \n            controller\n            ResumesController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/resumes.service.ts\n            \n            injectable\n            ResumesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/resumes/schemas/resume.schema.ts\n            \n            class\n            Resume\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                        src/resumes/schemas/resume.schema.ts\n            \n            variable\n            ResumeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/resumes/schemas/resume.schema.ts\n            \n            type alias\n            ResumeDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/roles/dto/update-role.dto.ts\n            \n            class\n            UpdateRoleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/roles.controller.ts\n            \n            controller\n            RoleController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/roles/roles.service.ts\n            \n            injectable\n            RoleService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/roles/schemas/role.schema.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                        src/roles/schemas/role.schema.ts\n            \n            variable\n            RoleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/roles/schemas/role.schema.ts\n            \n            type alias\n            roleDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/dto/create-subscriber.dto.ts\n            \n            class\n            CreateSubscriberDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/subscribers/dto/update-subscriber.dto.ts\n            \n            class\n            UpdateSubscriberDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/schemas/subscriber.schema.ts\n            \n            class\n            Subscriber\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        src/subscribers/schemas/subscriber.schema.ts\n            \n            variable\n            SubscriberSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/subscribers/schemas/subscriber.schema.ts\n            \n            type alias\n            SubscriberDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.controller.ts\n            \n            controller\n            SubscribersController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.service.ts\n            \n            injectable\n            SubscribersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            company\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            UserLoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            class\n            UserRef\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/users/schemas/user.schema.ts\n            \n            type alias\n            UserDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.interface.ts\n            \n            interface\n            Iuser\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/13)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : 1.8.1\n        \n            @nestjs/common : 9.4.0\n        \n            @nestjs/config : 2.3.1\n        \n            @nestjs/core : 9.4.0\n        \n            @nestjs/jwt : 10.0.3\n        \n            @nestjs/mapped-types : 1.2.1\n        \n            @nestjs/mongoose : ^9.2.2\n        \n            @nestjs/passport : 9.0.3\n        \n            @nestjs/platform-express : 9.4.0\n        \n            @nestjs/schedule : 3.0.1\n        \n            @nestjs/swagger : 7.0.4\n        \n            @nestjs/terminus : 10.1.0\n        \n            @nestjs/throttler : ^4.1.0\n        \n            api-query-params : 5.4.0\n        \n            bcryptjs : ^2.4.3\n        \n            bson : ^6.10.3\n        \n            class-transformer : 0.5.1\n        \n            class-validator : 0.14.1\n        \n            cookie-parser : 1.4.7\n        \n            ejs : 3.1.9\n        \n            exact : 1.0.1\n        \n            handlebars : 4.7.7\n        \n            helmet : ^8.1.0\n        \n            mongoose : ^7.6.1\n        \n            ms : 2.1.3\n        \n            nodemailer : 6.9.3\n        \n            passport : 0.6.0\n        \n            passport-jwt : 4.0.1\n        \n            passport-local : 1.0.0\n        \n            reflect-metadata : 0.1.13\n        \n            rxjs : 7.2.0\n        \n            save : 2.9.0\n        \n            soft-delete-plugin-mongoose : ^1.0.17\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCác bước cần làm để chạy dự án NestJS\n1. Cài đặt thư viện với câu lệnh: npm i\n2. Chạy dự án với câu lệnh: npm run dev\n=================\nTác giả: Hỏi Dân IT\nMọi thông tin về Tác giả Hỏi Dân IT, các bạn có thể tìm kiếm tại đây:\nWebsite chính thức: https://hoidanit.com.vn/\nYoutube “Hỏi Dân IT” : https://www.youtube.com/@hoidanit\nTiktok “Hỏi Dân IT” :  https://www.tiktok.com/@hoidanit\nFanpage “Hỏi Dân IT” : https://www.facebook.com/askITwithERIC/\nUdemy Hỏi Dân IT: https://www.udemy.com/user/eric-7039/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompaniesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabasesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JobsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PermissionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResumesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SubscribersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_exports\n\n\n\ncluster_CompaniesModule_providers\n\n\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_exports\n\n\n\ncluster_JobsModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_exports\n\n\n\ncluster_RoleModule_providers\n\n\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nCompaniesService \n\nCompaniesService \n\nCompaniesService  -->\n\nCompaniesModule->CompaniesService \n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nJobsService \n\nJobsService \n\nJobsService  -->\n\nJobsModule->JobsService \n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAuthModule -->\n\nRoleModule->AuthModule\n\n\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nRoleService \n\nRoleService \n\nRoleService  -->\n\nRoleModule->RoleService \n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nDatabasesModule -->\n\nUsersModule->DatabasesModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCompaniesService\n\nCompaniesService\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\nDatabasesService\n\nDatabasesService\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nPermissionsService\n\nPermissionsService\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\nResumesService\n\nResumesService\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\nSubscribersService\n\nSubscribersService\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    36 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            License : UNLICENSED\n        \n            Author : DDD\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CompanyDocument   (src/.../company.schema.ts)\n                        \n                        \n                            JobDocument   (src/.../job.schema.ts)\n                        \n                        \n                            PermissionDocument   (src/.../permission.schema.ts)\n                        \n                        \n                            ResumeDocument   (src/.../resume.schema.ts)\n                        \n                        \n                            roleDocument   (src/.../role.schema.ts)\n                        \n                        \n                            SubscriberDocument   (src/.../subscriber.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/companies/schemas/company.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CompanyDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/jobs/schemas/job.schema.ts\n    \n    \n        \n            \n                \n                    \n                    JobDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/permissions/schemas/permission.schema.ts\n    \n    \n        \n            \n                \n                    \n                    PermissionDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/resumes/schemas/resume.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ResumeDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/roles/schemas/role.schema.ts\n    \n    \n        \n            \n                \n                    \n                    roleDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/subscribers/schemas/subscriber.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SubscriberDocument\n                \n            \n            \n                \n                            HydratedArraySubdocument\n\n                \n            \n        \n    \n    src/users/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ADMIN_ROLE   (src/.../example.ts)\n                        \n                        \n                            CompanySchema   (src/.../company.schema.ts)\n                        \n                        \n                            INIT_PERMISSIONS   (src/.../example.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../customize.ts)\n                        \n                        \n                            IS_PUBLIC_PERMISSION   (src/.../customize.ts)\n                        \n                        \n                            JobSchema   (src/.../job.schema.ts)\n                        \n                        \n                            PermissionSchema   (src/.../permission.schema.ts)\n                        \n                        \n                            Public   (src/.../customize.ts)\n                        \n                        \n                            RESPONSE_MESSAGE   (src/.../customize.ts)\n                        \n                        \n                            ResponseMessage   (src/.../customize.ts)\n                        \n                        \n                            ResumeSchema   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleSchema   (src/.../role.schema.ts)\n                        \n                        \n                            SkipCheckPermission   (src/.../customize.ts)\n                        \n                        \n                            SubscriberSchema   (src/.../subscriber.schema.ts)\n                        \n                        \n                            User   (src/.../customize.ts)\n                        \n                        \n                            USER_ROLE   (src/.../example.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/databases/example.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ADMIN_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'super admin'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INIT_PERMISSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    _id: '680fddcd99cf12d46fede7d9',\n    name: 'Login user',\n    apiPath: '/api/v1/auth/login',\n    method: 'POST',\n    module: 'AUTH',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.681Z',\n    updatedAt: '2025-04-28T19:58:05.682Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7da',\n    name: 'Register a new user',\n    apiPath: '/api/v1/auth/register',\n    method: 'POST',\n    module: 'AUTH',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.682Z',\n    updatedAt: '2025-04-28T19:58:05.682Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7db',\n    name: 'get user info',\n    apiPath: '/api/v1/auth/account',\n    method: 'GET',\n    module: 'AUTH',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.682Z',\n    updatedAt: '2025-04-28T19:58:05.682Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7dc',\n    name: 'get user info by refresh token',\n    apiPath: '/api/v1/auth/refresh',\n    method: 'GET',\n    module: 'AUTH',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.682Z',\n    updatedAt: '2025-04-28T19:58:05.682Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7dd',\n    name: 'Logout user',\n    apiPath: '/api/v1/auth/logout',\n    method: 'POST',\n    module: 'AUTH',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.682Z',\n    updatedAt: '2025-04-28T19:58:05.682Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7de',\n    name: 'Created a new company',\n    apiPath: '/api/v1/companies',\n    method: 'POST',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.683Z',\n    updatedAt: '2025-04-28T19:58:05.683Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7df',\n    name: 'Fetching all companies with pagination',\n    apiPath: '/api/v1/companies',\n    method: 'GET',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.683Z',\n    updatedAt: '2025-04-28T19:58:05.683Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7e0',\n    name: 'Get company by id',\n    apiPath: '/api/v1/companies/:id',\n    method: 'GET',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.683Z',\n    updatedAt: '2025-04-28T19:58:05.683Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7e1',\n    name: 'Update company info',\n    apiPath: '/api/v1/companies/:id',\n    method: 'PATCH',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.683Z',\n    updatedAt: '2025-04-28T19:58:05.683Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7e2',\n    name: 'Delete company by id',\n    apiPath: '/api/v1/companies/:id',\n    method: 'DELETE',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.683Z',\n    updatedAt: '2025-04-28T19:58:05.683Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7e3',\n    name: 'Upload a file',\n    apiPath: '/api/v1/files/upload',\n    method: 'POST',\n    module: 'FILES',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.685Z',\n    updatedAt: '2025-04-28T19:58:05.685Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7e4',\n    name: 'Get all files',\n    apiPath: '/api/v1/files',\n    method: 'GET',\n    module: 'FILES',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.685Z',\n    updatedAt: '2025-04-28T19:58:05.685Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7e5',\n    name: 'Get a file by id',\n    apiPath: '/api/v1/files/:id',\n    method: 'GET',\n    module: 'FILES',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.685Z',\n    updatedAt: '2025-04-28T19:58:05.685Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7e6',\n    name: 'Update a file by id',\n    apiPath: '/api/v1/files/:id',\n    method: 'PATCH',\n    module: 'FILES',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.685Z',\n    updatedAt: '2025-04-28T19:58:05.685Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7e7',\n    name: 'Delete a file by id',\n    apiPath: '/api/v1/files/:id',\n    method: 'DELETE',\n    module: 'FILES',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.685Z',\n    updatedAt: '2025-04-28T19:58:05.685Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7e8',\n    name: 'Create a new job',\n    apiPath: '/api/v1/jobs',\n    method: 'POST',\n    module: 'JOBS',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.686Z',\n    updatedAt: '2025-04-28T19:58:05.686Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7e9',\n    name: 'Fetching all job with pagination',\n    apiPath: '/api/v1/jobs',\n    method: 'GET',\n    module: 'JOBS',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.686Z',\n    updatedAt: '2025-04-28T19:58:05.686Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7ea',\n    name: 'Get job by id',\n    apiPath: '/api/v1/jobs/:id',\n    method: 'GET',\n    module: 'JOBS',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.686Z',\n    updatedAt: '2025-04-28T19:58:05.686Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7eb',\n    name: 'Update user info',\n    apiPath: '/api/v1/jobs/:id',\n    method: 'PATCH',\n    module: 'JOBS',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.686Z',\n    updatedAt: '2025-04-28T19:58:05.686Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7ec',\n    name: 'Delete job by id',\n    apiPath: '/api/v1/jobs/:id',\n    method: 'DELETE',\n    module: 'JOBS',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.686Z',\n    updatedAt: '2025-04-28T19:58:05.686Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7ed',\n    name: 'Permission created successfully',\n    apiPath: '/api/v1/permissions',\n    method: 'POST',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.686Z',\n    updatedAt: '2025-04-28T19:58:05.686Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7ee',\n    name: 'Fetching all permission with pagination',\n    apiPath: '/api/v1/permissions',\n    method: 'GET',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.686Z',\n    updatedAt: '2025-04-28T19:58:05.686Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7ef',\n    name: 'Get permisson by id',\n    apiPath: '/api/v1/permissions/:id',\n    method: 'GET',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.686Z',\n    updatedAt: '2025-04-28T19:58:05.686Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7f0',\n    name: 'Update permission by id',\n    apiPath: '/api/v1/permissions/:id',\n    method: 'PATCH',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.686Z',\n    updatedAt: '2025-04-28T19:58:05.686Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7f1',\n    name: 'Delete permission by id',\n    apiPath: '/api/v1/permissions/:id',\n    method: 'DELETE',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.686Z',\n    updatedAt: '2025-04-28T19:58:05.686Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7f2',\n    name: 'Created a new resume',\n    apiPath: '/api/v1/resumes',\n    method: 'POST',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.688Z',\n    updatedAt: '2025-04-28T19:58:05.688Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7f3',\n    name: 'Get resume by user',\n    apiPath: '/api/v1/resumes/by-user',\n    method: 'POST',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.688Z',\n    updatedAt: '2025-04-28T19:58:05.688Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7f4',\n    name: 'Fetching all resumes with pagination',\n    apiPath: '/api/v1/resumes',\n    method: 'GET',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.688Z',\n    updatedAt: '2025-04-28T19:58:05.688Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7f5',\n    name: 'Get resume by id',\n    apiPath: '/api/v1/resumes/:id',\n    method: 'GET',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.688Z',\n    updatedAt: '2025-04-28T19:58:05.688Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7f6',\n    name: 'Update resume status',\n    apiPath: '/api/v1/resumes/:id',\n    method: 'PATCH',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.688Z',\n    updatedAt: '2025-04-28T19:58:05.688Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7f7',\n    name: 'Delete resume by id',\n    apiPath: '/api/v1/resumes/:id',\n    method: 'DELETE',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.688Z',\n    updatedAt: '2025-04-28T19:58:05.688Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7f8',\n    name: 'Create a new role',\n    apiPath: '/api/v1/roles',\n    method: 'POST',\n    module: 'ROLES',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.688Z',\n    updatedAt: '2025-04-28T19:58:05.688Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7f9',\n    name: 'Fetching all role with pagination',\n    apiPath: '/api/v1/roles',\n    method: 'GET',\n    module: 'ROLES',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.688Z',\n    updatedAt: '2025-04-28T19:58:05.688Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7fa',\n    name: 'Get role by id',\n    apiPath: '/api/v1/roles/:id',\n    method: 'GET',\n    module: 'ROLES',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.688Z',\n    updatedAt: '2025-04-28T19:58:05.688Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7fb',\n    name: 'Update role by id',\n    apiPath: '/api/v1/roles/:id',\n    method: 'PATCH',\n    module: 'ROLES',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.688Z',\n    updatedAt: '2025-04-28T19:58:05.688Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7fc',\n    name: 'Delete role by id',\n    apiPath: '/api/v1/roles/:id',\n    method: 'DELETE',\n    module: 'ROLES',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.688Z',\n    updatedAt: '2025-04-28T19:58:05.688Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7fd',\n    name: 'Create a new user',\n    apiPath: '/api/v1/users',\n    method: 'POST',\n    module: 'USERS',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.689Z',\n    updatedAt: '2025-04-28T19:58:05.689Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7fe',\n    name: 'Fetching all user with pagination',\n    apiPath: '/api/v1/users',\n    method: 'GET',\n    module: 'USERS',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.689Z',\n    updatedAt: '2025-04-28T19:58:05.689Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede7ff',\n    name: 'Get user by id',\n    apiPath: '/api/v1/users/:id',\n    method: 'GET',\n    module: 'USERS',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.689Z',\n    updatedAt: '2025-04-28T19:58:05.689Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede800',\n    name: 'Update user info',\n    apiPath: '/api/v1/users/:id',\n    method: 'PATCH',\n    module: 'USERS',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.689Z',\n    updatedAt: '2025-04-28T19:58:05.689Z',\n    __v: 0,\n  },\n  {\n    _id: '680fddcd99cf12d46fede801',\n    name: 'Delete user by id',\n    apiPath: '/api/v1/users/:id',\n    method: 'DELETE',\n    module: 'USERS',\n    createdBy: {\n      _id: '680b6f9c52d64f6920662702',\n      email: 'duongducduy825@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2025-04-28T19:58:05.689Z',\n    updatedAt: '2025-04-28T19:58:05.689Z',\n    __v: 0,\n  },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n\n\n        \n    \n\n    src/companies/schemas/company.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CompanySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Company)\n                    \n                \n\n\n        \n    \n\n    src/decorator/customize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_PERMISSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublicPermission'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESPONSE_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'response_Message'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ResponseMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (message: string) => {\n  return SetMetadata(RESPONSE_MESSAGE, message);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SkipCheckPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () =>\n  SetMetadata(IS_PUBLIC_PERMISSION, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n\n    return request.user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/jobs/schemas/job.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JobSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Job)\n                    \n                \n\n\n        \n    \n\n    src/permissions/schemas/permission.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PermissionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Permission)\n                    \n                \n\n\n        \n    \n\n    src/resumes/schemas/resume.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ResumeSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Resume)\n                    \n                \n\n\n        \n    \n\n    src/roles/schemas/role.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Role)\n                    \n                \n\n\n        \n    \n\n    src/subscribers/schemas/subscriber.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SubscriberSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Subscriber)\n                    \n                \n\n\n        \n    \n\n    src/users/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
